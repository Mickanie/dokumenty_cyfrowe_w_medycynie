{"version":3,"sources":["Register.js","Patient-Doctor/Document.js","Patient-Doctor/MedicalProcess.js","Patient-Doctor/Documentation.js","Patient-Doctor/Recommendations.js","Patient-Doctor/SideBar.js","Patient-Doctor/Report.js","Patient-Doctor/PatientPage.js","DateParser.js","Patient-Doctor/Doctor/NewDocument.js","Patient-Doctor/Doctor/NewRecommendation.js","Patient-Doctor/Doctor/NewAttachment.js","Patient-Doctor/Doctor/DoctorPage.js","LabTechnician/LabTechnicianPage.js","Main.js","App.js","index.js"],"names":["Register","state","accountType","generatedLogin","chooseAccountType","e","_this","setState","target","value","goBack","props","history","push","validatePassword","password","document","getElementById","confirmPassword","setCustomValidity","registerUser","_callee","regenerator_default","a","wrap","_context","prev","next","preventDefault","fetch","method","headers","Content-Type","body","JSON","stringify","name","surname","PWZ","specialization","then","result","json","data","login","sessionStorage","setItem","pesel","dob","sex","address","telephone","stop","react_default","createElement","className","onClick","this","onSubmit","onChange","htmlFor","type","required","placeholder","pattern","Fragment","id","defaultValue","disabled","Component","Document","images","documents","concat","patientID","response","console","log","_this2","resources","filter","image","public_id","includes","match","params","documentId","currentDocument","_this3","length","forEach","_id","react_router_dom","to","style","fontWeight","title","testDate","referral","orderingDoctor","performingDoctor","describingDoctor","content","map","file","i","filePath","version","key","src","issueDate","labTechnician","border","results","item","range","unit","href","MedicalProcess","tasks","editMode","view","editTask","changeView","_callee2","_context2","toggleActive","parentElement","classList","toggle","checked","activeAccount","addTask","task","completed","setCompleted","details","date","previousTask","color","background","nextTasks","MedicalProcess_Task","Task","nextTaskId","nextTask","Documentation","compare","b","dateA","parseInt","split","join","dateB","filterResults","fromDate","toDate","tag","filtered","tags","documentType","getItem","sort","height","textDecoration","Recommendations","recommendations","activeUser","parse","recommendation","doctor","attachedDocuments","attachment","margin","SideBar","patient","editData","querySelector","PESEL","icd10","expandPatientInfo","expandTasks","status","alert","age","dateOfBirth","toggleComplete","Raport","parameters","chosenParameter","filteredResults","chooseResultType","labResult","some","parameter","find","PatientPage","isCompleted","Patient_Doctor_SideBar","activeClassName","react_router","exact","path","render","Patient_Doctor_Documentation","Object","assign","Patient_Doctor_Recommendations","Patient_Doctor_MedicalProcess","Patient_Doctor_Report","Patient_Doctor_Document","from","transformDate","day","getDate","toString","month","getMonth","year","getYear","today","Date","threeDaysAgo","now","NewDocument","hour","getHours","minutes","getMinutes","transformDateTime","referrals","files","chooseDocumentType","uploadFile","url","xhr","XMLHttpRequest","fd","FormData","open","setRequestHeader","onreadystatechange","readyState","responseText","append","send","createDocument","region","referralID","blob","slice","size","newFile","File","textAlign","min","max","multiple","accept","NewRecommendation","dataSaved","attachments","toggleSave","_e$target$parentEleme","submitRecommendation","removeItem","NewAttachment","startDate","submitAttachment","attachedDocument","_e$target","_e$target2","medicine","payment","_e$target3","placeOfWork","endDate","_e$target4","place","examination","diagnosis","aim","checkboxes","labTests","t0","abrupt","toConsumableArray","test","checkbox","setStartDate","DoctorPage","patients","persist","trim","addTaskFromSideBar","_callee3","_context3","previousTaskId","_callee4","_context4","searchPatient","_callee5","_context5","Doctor_NewAttachment","Doctor_NewRecommendation","Doctor_NewDocument","LabTechnicianPage","resultType","labOrders","addParameter","newParameter","submitResult","collectionDate","labPatientID","labOrder","window","location","reload","choosePatient","testType","Main","isLoggedIn","changeAccount","logIn","innerHTML","ID","logOut","infoText","Patient_Doctor_PatientPage","Doctor_DoctorPage","LabTechnician_LabTechnicianPage","App","component","ReactDOM","basename","process","src_App"],"mappings":"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","file":"static/js/main.2bc7d939.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n/* import { withRouter } from 'react-router-dom'; */\r\n//import { history } from 'react-router-dom';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    accountType: \"patient\",\r\n    generatedLogin: \"\"\r\n  };\r\n\r\n  chooseAccountType = e => {\r\n    this.setState({ accountType: e.target.value });\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  validatePassword = () => {\r\n    let password = document.getElementById(\"password\");\r\n    let confirmPassword = document.getElementById(\"confirm-password\");\r\n\r\n    if (password.value !== confirmPassword.value) {\r\n      confirmPassword.setCustomValidity(\"Hasła nie są jednakowe\");\r\n    } else {\r\n      confirmPassword.setCustomValidity(\"\");\r\n    }\r\n  };\r\n\r\n  registerUser = async e => {\r\n    e.preventDefault();\r\n    if (this.state.accountType === \"doctor\") {\r\n      await fetch(\"https://medical-documentation.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          accountType: this.state.accountType,\r\n          name: e.target.name.value,\r\n          surname: e.target.surname.value,\r\n          PWZ: e.target.PWZ.value,\r\n          specialization: e.target.specialization.value,\r\n          password: e.target.password.value\r\n        })\r\n      })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          this.setState({ generatedLogin: data.login });\r\n        });\r\n      await sessionStorage.setItem(\"generatedLogin\", this.state.generatedLogin);\r\n    } else if (this.state.accountType === \"patient\") {\r\n      await fetch(\"https://medical-documentation.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          accountType: this.state.accountType,\r\n          name: e.target.name.value,\r\n          surname: e.target.surname.value,\r\n          pesel: e.target.pesel.value,\r\n          dob: e.target.dob.value,\r\n          sex: e.target.sex.value,\r\n          address: e.target.address.value,\r\n          telephone: e.target.telephone.value,\r\n          password: e.target.password.value\r\n        })\r\n      })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          this.setState({ generatedLogin: data.login });\r\n        });\r\n      await sessionStorage.setItem(\"generatedLogin\", this.state.generatedLogin);\r\n    } else {\r\n      await fetch(\"https://medical-documentation.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          accountType: this.state.accountType,\r\n          name: e.target.name.value,\r\n          surname: e.target.surname.value,\r\n          password: e.target.password.value\r\n        })\r\n      })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          this.setState({ generatedLogin: data.login });\r\n        });\r\n      await sessionStorage.setItem(\"generatedLogin\", this.state.generatedLogin);\r\n    }\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"register-container\">\r\n        <button className=\"backButton\" onClick={this.goBack}>\r\n          Powrót do logowania\r\n        </button>\r\n        <h2>Zarejestruj się</h2>\r\n\r\n        <form onSubmit={this.registerUser}>\r\n          <span>\r\n            <label>Typ konta: </label>\r\n            <select name=\"accountType\" onChange={this.chooseAccountType}>\r\n              <option value=\"patient\">Pacjent</option>\r\n              <option value=\"doctor\">Lekarz</option>\r\n              <option value=\"lab\">Laborant</option>\r\n            </select>\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"name\">Imię </label>\r\n            <input type=\"text\" name=\"name\" required placeholder=\" \" pattern=\"[A-Za-z]{3,}\"/>\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"surname\">Nazwisko </label>\r\n            <input type=\"text\" name=\"surname\" required placeholder=\" \" pattern=\"[A-Za-z]{3,}\"/>\r\n          </span>\r\n\r\n          {this.state.accountType === \"patient\" && (\r\n            <>\r\n              <span>\r\n                <label htmlFor=\"dob\">Data urodzenia </label>\r\n                <input type=\"date\" name=\"dob\" required />\r\n              </span>\r\n              <span>\r\n                <label htmlFor=\"surname\">Adres </label>\r\n                <input type=\"text\" name=\"address\" required placeholder=\" \"/>\r\n              </span>\r\n              <span>\r\n                <label htmlFor=\"surname\">Telefon </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"telephone\"\r\n                  required\r\n                  pattern=\"[0-9]{9}\"\r\n                  placeholder=\" \"\r\n                />\r\n              </span>\r\n              <span>\r\n                <label htmlFor=\"pesel\">PESEL </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"pesel\"\r\n                  id=\"pesel\"\r\n                  required\r\n                  pattern=\"[0-9]{11}\"\r\n                  placeholder=\" \"\r\n                />\r\n              </span>\r\n              <span>\r\n                <label htmlFor=\"surname\">Płeć </label>\r\n                <select name=\"sex\" defaultValue=\"\" required>\r\n                  <option value=\"\" disabled>Wybierz płeć</option>\r\n                  <option value=\"K\">Kobieta</option>\r\n                  <option value=\"M\">Mężczyzna</option>\r\n                </select>\r\n               \r\n              </span>\r\n            </>\r\n          )}\r\n\r\n          {this.state.accountType === \"doctor\" && (\r\n            <>\r\n              {\" \"}\r\n              <span>\r\n                <label>Numer PWZ</label>\r\n                <input type=\"text\" name=\"PWZ\" required />\r\n              </span>\r\n              <span>\r\n                <label>Specjalizacja</label>\r\n                <input type=\"text\" name=\"specialization\" required />\r\n              </span>\r\n            </>\r\n          )}\r\n\r\n          <span>\r\n            <label htmlFor=\"password\">Hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"password\"\r\n              \r\n              //pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"password\">Powtórz hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"confirm-password\"\r\n              //pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n              onChange={this.validatePassword}\r\n            />\r\n          </span>\r\n          <input type=\"submit\" value=\"Zarejestruj się\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Document.css\";\r\n\r\nclass Document extends Component {\r\n  state = {\r\n    document: {},\r\n    images: [],\r\n    documents: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await fetch(` https://medical-documentation.herokuapp.com/documentation?patientID=${this.props.patientID}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState({ documents: data });\r\n      });\r\n\r\n    await fetch(\r\n      \"http://res.cloudinary.com/mickanie/image/list/medical_documentation.json\"\r\n    )\r\n      .then(result => result.json())\r\n      .then(data =>\r\n        this.setState({\r\n          images: data.resources.filter(image =>\r\n            image.public_id.includes(this.props.match.params.documentId)\r\n          )\r\n        })\r\n      );\r\n\r\n    await fetch(\r\n      \"http://res.cloudinary.com/mickanie/image/list/medical_documentation.json\"\r\n    )\r\n      .then(result => result.json())\r\n      .then(data =>\r\n        this.setState({\r\n          images: data.resources.filter(image =>\r\n            image.public_id.includes(this.props.match.params.documentId)\r\n          )\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    if (this.state.documents.length) {\r\n      let currentDocument;\r\n      this.state.documents.forEach(document => {\r\n        if (document._id === this.props.match.params.documentId) {\r\n          currentDocument = document;\r\n        }\r\n      });\r\n\r\n      console.log(currentDocument);\r\n\r\n      return (\r\n        <div className=\"container document-container\">\r\n          <Link to=\"/documentation\" className=\"backButton\">\r\n            <button>Powrót</button>\r\n          </Link>\r\n  \r\n            <div>\r\n\r\n              <p style={{ fontWeight: \"700\" }}>{currentDocument.title}</p>\r\n              {!currentDocument.title.includes(\"Badanie krwi\") && (\r\n                <div className=\"result-info\">\r\n                  <p>Data: {currentDocument.testDate}</p>\r\n                  <p>ID skierowania: {currentDocument.referral}</p>\r\n                  <p>Lekarz zlecający: {currentDocument.orderingDoctor}</p>\r\n                  <p>Lekarz wykonujący: {currentDocument.performingDoctor}</p>\r\n                  <p>Lekarz opisujący: {currentDocument.describingDoctor}</p>\r\n                  <p>\r\n                    <br />\r\n                    {currentDocument.content}\r\n                  </p>\r\n                  <div>\r\n                    {this.state.images.map((file, i) => {\r\n                      const filePath = `https://res.cloudinary.com/mickanie/image/upload/v${\r\n                        file.version\r\n                      }/${file.public_id}.jpg`;\r\n                      return <img key={i} src={filePath} />;\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {currentDocument.title.includes(\"Badanie krwi\") && (\r\n                <div className=\"table\">\r\n                  <div className=\"result-info\">\r\n                    <p>Data pobrania: {currentDocument.testDate} </p>\r\n                    <p>Data wydania: {currentDocument.issueDate}</p>\r\n                    <p>Lekarz zlecający: {currentDocument.orderingDoctor}</p>\r\n                    <p>Laborant: {currentDocument.labTechnician}</p>\r\n                  </div>\r\n                  <table border=\"1\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"mobile-out\">Lp.</th>\r\n                        <th>Parametr</th>\r\n                        <th>Wartość</th>\r\n                        <th>Zakres</th>\r\n                        <th>Jednostka</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {currentDocument.results.map((item, i) => {\r\n                      return (\r\n                        <tbody key={i}>\r\n                          <tr>\r\n                            <td className=\"mobile-out\">{i + 1}</td>\r\n                            <td>{currentDocument.results[i].name}</td>\r\n                            <td>{currentDocument.results[i].value}</td>\r\n                            <td>{currentDocument.results[i].range}</td>\r\n                            <td>{currentDocument.results[i].unit}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      );\r\n                    })}\r\n                  </table>\r\n                </div>\r\n              )}\r\n\r\n              <a\r\n                target=\"_blank\"\r\n                href={\r\n                  \" https://medical-documentation.herokuapp.com/examination-pdf?id=\" +\r\n                  this.props.match.params.documentId\r\n                }\r\n              >\r\n                <button>Zapisz do PDF</button>\r\n              </a>\r\n            </div>\r\n         \r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Document;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/MedicalProcess.css\";\r\nimport \"../css/App.css\";\r\n\r\nclass MedicalProcess extends Component {\r\n  state = {\r\n    tasks: [],\r\n    editMode: \"\",\r\n    view: \"tasks\"\r\n  };\r\n\r\n  editMode = async e => {\r\n    const id = e.target.id;\r\n    if (this.state.editMode !== id) {\r\n      await this.setState({ editMode: id });\r\n    } else {\r\n      //dodanie do bazy\r\n      this.props.editTask(id);\r\n      //usunięcie z tablicy editMode\r\n\r\n      await this.setState({ editMode: \"\" });\r\n    }\r\n  };\r\n\r\n  changeView = async e => {\r\n    console.log(e.target.value);\r\n    this.setState({ view: e.target.value });\r\n  };\r\n\r\n  toggleActive = e => {\r\n    console.log(\"click\");\r\n    e.target.parentElement.classList.toggle(\"active\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container medical-process-container\">\r\n        <div className=\"change-view\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"view\"\r\n            id=\"tasks\"\r\n            value=\"tasks\"\r\n            checked={this.state.view === \"tasks\"}\r\n            onChange={this.changeView}\r\n          />\r\n          <label className=\"tasks-label\" htmlFor=\"tasks\">\r\n            Widok zadań\r\n          </label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"view\"\r\n            id=\"process\"\r\n            value=\"process\"\r\n            onChange={this.changeView}\r\n          />\r\n          <label className=\"process-label\" htmlFor=\"process\">\r\n            Widok procesu\r\n          </label>\r\n        </div>\r\n        {this.state.view === \"tasks\" && (\r\n          <div className=\"task-view\">\r\n            {this.props.activeAccount === \"doctor\" && (\r\n              <form onSubmit={this.props.addTask}>\r\n                <span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Tytuł\"\r\n                    name=\"title\"\r\n                    required\r\n                  />\r\n                  <select name=\"completed\">\r\n                    <option value=\"done\">Wykonane</option>\r\n                    <option value=\"todo\">Do zrobienia</option>\r\n                  </select>\r\n                  <textarea placeholder=\"Szczegóły\" name=\"details\" required />\r\n                </span>\r\n                <span>\r\n                  <label>\r\n                    Data:{\" \"}\r\n                    <input\r\n                      type=\"datetime-local\"\r\n                      name=\"date\"\r\n                      placeholder=\"date\"\r\n                    />\r\n                  </label>\r\n\r\n                  <label>\r\n                    Zadanie poprzedzające:\r\n                    <select className=\"previous-task\" name=\"previousTask\">\r\n                      <option value=\"\">Brak</option>\r\n                      {this.props.tasks.map((task, i) => {\r\n                        return (\r\n                          <option key={i} value={task._id}>\r\n                            {task.title}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </label>\r\n                  <input type=\"submit\" value=\"Dodaj zadanie\" />\r\n                </span>\r\n              </form>\r\n            )}\r\n            <div className=\"content\">\r\n              <h3>Do zrobienia</h3>\r\n              <ul>\r\n                {this.props.tasks\r\n                  .filter(task => task.completed === false)\r\n                  .map((task, i) => {\r\n                    return (\r\n                      <li key={i}>\r\n                        <span className=\"task-header\">\r\n                          <strong>\r\n                            {this.state.editMode.includes(task._id) ? (\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                id=\"title\"\r\n                                defaultValue={task.title}\r\n                              />\r\n                            ) : (\r\n                              task.title\r\n                            )}\r\n                          </strong>\r\n                          {this.props.activeAccount === \"doctor\" && (\r\n                            <button\r\n                              className=\"set-done\"\r\n                              id={task._id}\r\n                              onClick={this.props.setCompleted}\r\n                            >\r\n                              ✓\r\n                            </button>\r\n                          )}\r\n\r\n                          <button\r\n                            className=\"edit\"\r\n                            onClick={this.editMode}\r\n                            id={task._id}\r\n                          />\r\n                        </span>\r\n\r\n                        <div className=\"task-info\">\r\n                          {this.state.editMode === task._id ? (\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"details\"\r\n                              id=\"details\"\r\n                              defaultValue={task.details}\r\n                              placeholder=\"Szczegóły\"\r\n                            />\r\n                          ) : (\r\n                            <p>{task.details}</p>\r\n                          )}\r\n\r\n                          {this.state.editMode === task._id ? (\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"date\"\r\n                              id=\"date\"\r\n                              defaultValue={task.date}\r\n                              placeholder=\"Data\"\r\n                            />\r\n                          ) : (\r\n                            <p>{task.date}</p>\r\n                          )}\r\n                        </div>\r\n                        {this.state.editMode === task._id && (\r\n                          <label className=\"previous-task-label\">\r\n                            Zadanie poprzedzające:\r\n                            <select\r\n                              className=\"previous-task\"\r\n                              id=\"previous-task\"\r\n                              defaultValue={task.previousTask}\r\n                            >\r\n                              <option value=\"\">Brak</option>\r\n                              {this.props.tasks.map((task, i) => {\r\n                                return (\r\n                                  <option key={i} value={task._id}>\r\n                                    {task.title}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </label>\r\n                        )}\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n              <hr />\r\n              <h3>Wykonane</h3>\r\n              <ul>\r\n                {this.props.tasks\r\n                  .filter(task => task.completed === true)\r\n                  .map((task, i) => {\r\n                    return (\r\n                      <li key={i}>\r\n                        <span className=\"task-header\">\r\n                          <strong>\r\n                            {this.state.editMode === task._id ? (\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                id=\"title\"\r\n                                defaultValue={task.title}\r\n                              />\r\n                            ) : (\r\n                              task.title\r\n                            )}\r\n                          </strong>\r\n                          <button\r\n                            className=\"edit\"\r\n                            onClick={this.editMode}\r\n                            id={task._id}\r\n                          />\r\n                        </span>\r\n\r\n                        <div className=\"task-info\">\r\n                          {this.state.editMode === task._id ? (\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"details\"\r\n                              id=\"details\"\r\n                              defaultValue={task.details}\r\n                              placeholder=\"Szczegóły\"\r\n                            />\r\n                          ) : (\r\n                            <p>{task.details}</p>\r\n                          )}\r\n\r\n                          {this.state.editMode === task._id ? (\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"date\"\r\n                              id=\"date\"\r\n                              defaultValue={task.date}\r\n                              placeholder=\"Data\"\r\n                            />\r\n                          ) : (\r\n                            <p>{task.date}</p>\r\n                          )}\r\n                        </div>\r\n                        {this.state.editMode === task._id && (\r\n                          <label className=\"previous-task-label\">\r\n                            Zadanie poprzedzające:\r\n                            <select\r\n                              className=\"previous-task\"\r\n                              defaultValue={task.previousTask}\r\n                              id=\"previous-task\"\r\n                            >\r\n                              <option value=\"\">Brak</option>\r\n                              {this.props.tasks.map((task, i) => {\r\n                                return (\r\n                                  <option key={i} value={task._id}>\r\n                                    {task.title}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </label>\r\n                        )}\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.state.view === \"process\" && (\r\n          <div className=\"process-view\">\r\n            {this.props.tasks\r\n              .filter(task => task.previousTask === \"\")\r\n              .map((task, i) => {\r\n                const color = task.completed\r\n                  ? \"rgb(218, 203, 169)\"\r\n                  : \"rgb(206, 206, 193)\";\r\n                return (\r\n                  <div className=\"process-task-list-item\" key={i}>\r\n                    <div\r\n                      className=\"process-task\"\r\n                      style={{ background: color }}\r\n                      onClick={this.toggleActive}\r\n                    >\r\n                      {\" \"}\r\n                      <h4>{task.title}</h4>\r\n                      <p className=\"date-process-task\">{task.date}</p>\r\n                      <p>{task.details}</p>{\" \"}\r\n                    </div>\r\n\r\n                    {task.nextTasks.length > 0 && (\r\n                      <ul className=\"next-tasks\">\r\n                        <Task\r\n                          task={task}\r\n                          tasks={this.props.tasks}\r\n                          toggleActive={this.toggleActive}\r\n                        />\r\n                      </ul>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicalProcess;\r\n\r\nconst Task = props => {\r\n  console.log(props.tasks);\r\n  return props.task.nextTasks.map((nextTaskId, i) => {\r\n    const nextTask = props.tasks.filter(task => task._id === nextTaskId)[0];\r\n    const color = nextTask.completed\r\n      ? \"rgb(218, 203, 169)\"\r\n      : \"rgb(206, 206, 193)\";\r\n    return (\r\n      <li className=\"next-task\" key={i}>\r\n        <div\r\n          className=\"process-task  \"\r\n          style={{ background: color }}\r\n          onClick={props.toggleActive}\r\n        >\r\n          {\" \"}\r\n          <h4>{nextTask.title}</h4>\r\n          <p className=\"date-process-task\">{nextTask.date}</p>\r\n          <p>{nextTask.details}</p>{\" \"}\r\n        </div>\r\n\r\n        {nextTask.nextTasks.length > 0 && (\r\n          <ul className=\"next-tasks\">\r\n            <Task\r\n              task={nextTask}\r\n              tasks={props.tasks}\r\n              toggleActive={props.toggleActive}\r\n            />\r\n          </ul>\r\n        )}\r\n      </li>\r\n    );\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Documentation.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Documentation extends Component {\r\n  state = {\r\n    documents: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    console.log(sessionStorage.getItem(\"patientID\"));\r\n    await fetch(` https://medical-documentation.herokuapp.com/documentation?patientID=${this.props.patientID}`)\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data.sort(this.compare) }));\r\n  }\r\n\r\n  compare = (a, b) => {\r\n    const dateA = parseInt(\r\n      a.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    const dateB = parseInt(\r\n      b.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n\r\n  filterResults = async e => {\r\n    e.preventDefault();\r\n    const fromDate =\r\n      parseInt(e.target.fromDate.value.split(\"-\").join(\"\")) || null;\r\n    const toDate = parseInt(e.target.toDate.value.split(\"-\").join(\"\")) || null;\r\n    const tag = e.target.tags.value;\r\n    /*     await fetch(\r\n      ` https://medical-documentation.herokuapp.com/documentation?patientID=${JSON.parse(\r\n        sessionStorage.getItem(\"patientID\")\r\n      )}`\r\n    )\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data })); */\r\n\r\n    console.log(fromDate, toDate);\r\n    const filtered = this.state.documents\r\n      .filter(document => {\r\n        if (tag !== \"all\") {\r\n          return document.documentType === tag;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n      .filter(document => {\r\n        if (fromDate && toDate) {\r\n          return (\r\n            parseInt(\r\n              document.testDate\r\n                .split(\" \")[0]\r\n                .split(\"-\")\r\n                .join(\"\")\r\n            ) >= fromDate &&\r\n            parseInt(\r\n              document.testDate\r\n                .split(\" \")[0]\r\n                .split(\"-\")\r\n                .join(\"\")\r\n            ) <= toDate\r\n          );\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n\r\n    this.setState({ documents: filtered });\r\n  };\r\n\r\n  render() {\r\n    /*  fetch(\" https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data.sort(this.compare) })); */\r\n    //const height = this.props.activeAccount === \"doctor\" ? \"41vh\" : \"55vh\";\r\n    return (\r\n      <div className=\"container documentation-container\">\r\n        <div className=\"buttons\">\r\n          {this.props.activeAccount === \"doctor\" && (\r\n            <Link to=\"documentation/create-new\">\r\n              <button>Dodaj wynik badania</button>\r\n            </Link>\r\n          )}\r\n          <Link to=\"documentation/report\">\r\n            <button>Wygeneruj raport</button>\r\n          </Link>\r\n        </div>\r\n        <form className=\"filterForm\" onSubmit={this.filterResults}>\r\n          <label>\r\n            Filtruj po tagu:{\" \"}\r\n            <select name=\"tags\">\r\n              <option value=\"all\">Wszystko</option>\r\n              <option value=\"Badanie krwi\">Badanie krwi</option>\r\n              <option value=\"Badanie USG\">Badanie USG</option>\r\n              <option value=\"Badanie EKG\">Badanie EKG</option>\r\n              <option value=\"Echokardiografia\">Echokardiografia</option>\r\n              <option value=\"Tomografia komputerowa\">\r\n                Tomografia komputerowa\r\n              </option>\r\n              <option value=\"Rezonans magnetyczny\">Rezonans magnetyczny</option>\r\n              <option value=\"Angiografia\">Angiografia / Koronarografia</option>\r\n            </select>\r\n          </label>\r\n          <label id=\"dateFilter\">\r\n            <p>Filtruj po dacie: </p>\r\n\r\n            <p>\r\n              {\" \"}\r\n              od\r\n              <input type=\"date\" name=\"fromDate\" /> do\r\n              <input type=\"date\" name=\"toDate\" />\r\n            </p>\r\n          </label>\r\n          <input type=\"submit\" value=\"Filtruj\" />\r\n        </form>\r\n        <div className=\"documents content\" style={{ height: \"41vh\" }}>\r\n          <ul>\r\n            {this.state.documents.map((document, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <Link\r\n                    style={{ fontWeight: \"600\", textDecoration: \"underline\" }}\r\n                    to={`/documentation/document${document._id}`}\r\n                  >\r\n                    {document.title}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Documentation;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Recommendations.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Recommendations extends Component {\r\n  state = {\r\n    recommendations: [],\r\n    activeUser: JSON.parse(sessionStorage.getItem(\"user\")) || []\r\n  };\r\n  /*http://localhost:3001*/\r\n  async componentWillMount() {\r\n    await fetch(` https://medical-documentation.herokuapp.com/recommendations?patientID=${this.props.patientID}`)\r\n      .then(result => result.json())\r\n      .then(data =>\r\n        this.setState({ recommendations: data.sort(this.compare) })\r\n      );\r\n\r\n \r\n  }\r\n\r\n  \r\n  compare = (a, b) => {\r\n    const dateA = parseInt(\r\n      a.date\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    const dateB = parseInt(\r\n      b.date\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n\r\n  render() {\r\n     fetch(` https://medical-documentation.herokuapp.com/recommendations?patientID=${this.props.patientID}`)\r\n    .then(result => result.json())\r\n    .then(data =>\r\n      this.setState({ recommendations: data.sort(this.compare) })\r\n    );\r\n    //const height = this.props.activeAccount === \"doctor\" ? \"50vh\" : \"65vh\";\r\n    return (\r\n      <div className=\"container recommendations-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <Link to=\"/recommendations/create-new\">\r\n            <button>Dodaj zalecenie</button>\r\n          </Link>\r\n        )}\r\n\r\n        <div className=\"content\" /*style={{ height: height }}*/>\r\n          {this.state.recommendations.map((recommendation, i) => {\r\n            const color =\r\n              recommendation.doctor === this.state.activeUser.name\r\n                ? \"rgb(138, 159, 138)\"\r\n                : \"grey\";\r\n            return (\r\n              <div\r\n                className=\"recommendation\"\r\n                key={i}\r\n                style={{ background: color }}\r\n              >\r\n                <p>Data: {recommendation.date} </p>\r\n                <p>Lekarz: {recommendation.doctor} </p>\r\n                <p>Treść: {recommendation.content}</p>\r\n                <p className=\"attached-documents\">\r\n                  Załączone dokumenty:{\" \"}\r\n                  {recommendation.attachedDocuments.map((attachment, i) => (\r\n                    <a\r\n                      key={i}\r\n                      target=\"_blank\"\r\n                      style={{\r\n                        margin: \"10px\",\r\n                        textDecoration: \"underline\",\r\n                        color: \"white\"\r\n                      }}\r\n                      href={\r\n                        \" https://medical-documentation.herokuapp.com/attachment-pdf?id=\" +\r\n                        attachment.id\r\n                      }\r\n                    >\r\n                      {attachment.title}\r\n                    </a>\r\n                  ))}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recommendations;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/SideBar.css\";\r\n\r\nclass SideBar extends Component {\r\n  state = {\r\n    patient: [],\r\n    tasks: [],\r\n    editMode: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await fetch(` https://medical-documentation.herokuapp.com/patient?patientID=${this.props.patientID}`).then(result => {\r\n      if (result.status === 400) {\r\n        alert(\"Nie ma takiego pacjenta\");\r\n      } else {\r\n        result.json().then(data => this.setState({ patient: data }));\r\n      }\r\n    });\r\n  }\r\n\r\n  editData = async e => {\r\n    if (!this.state.editMode) {\r\n      this.setState({ editMode: true });\r\n    } else {\r\n      //sent to db\r\n      await fetch(\r\n        \" https://medical-documentation.herokuapp.com/edit-patient-data\",\r\n        {\r\n          method: \"put\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            patientID: this.props.patientID,\r\n            name: document.querySelector(\"#name\").value,\r\n            sex: document.querySelector(\"#sex\").value,\r\n            PESEL: document.querySelector(\"#PESEL\").value,\r\n            telephone: document.querySelector(\"#telephone\").value,\r\n            address: document.querySelector(\"#address\").value,\r\n            icd10: document.querySelector(\"#icd10\").value\r\n          })\r\n        }\r\n      )\r\n        .then(result => result.json())\r\n        .then(data => this.setState({ patient: data }));\r\n      this.setState({ editMode: false });\r\n    }\r\n  };\r\n\r\n  expandPatientInfo = e => {\r\n    console.log(\"CLick\");\r\n    document.querySelector(\".mobile-out.patient\").classList.toggle(\"active\");\r\n    e.target.classList.toggle(\"active\");\r\n  };\r\n\r\n  expandTasks = e => {\r\n    document.querySelector(\".mobile-out.tasks\").classList.toggle(\"active\");\r\n    e.target.classList.toggle(\"active\");\r\n  };\r\n\r\n  render() {\r\n    const patient = this.state.patient;\r\n    const name = `${patient.name} ${patient.surname}`;\r\n    return (\r\n      <div className=\"side-bar\">\r\n        <div className=\"patient-info\">\r\n          <p className=\"mobile-info\">Pacjent: {name}</p>\r\n          <h3 className=\"expandable\" onClick={this.expandPatientInfo}>\r\n            Dane osobowe\r\n          </h3>\r\n          <div className=\"mobile-out patient\">\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Imię i nazwisko: </td>\r\n                  <td>\r\n                    {this.state.editMode ? (\r\n                      <input type=\"text\" defaultValue={name} id=\"name\" required />\r\n                    ) : (\r\n                      <p>{name}</p>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Płeć: </td>\r\n                  <td>\r\n                    {this.state.editMode ? (\r\n                      <input type=\"text\" defaultValue={patient.sex} id=\"sex\" required pattern=\"[MK]\"/>\r\n                    ) : (\r\n                      <p>{patient.sex}</p>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Wiek: </td>\r\n                  <td> {patient.age} </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>PESEL: </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    {this.state.editMode ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        defaultValue={patient.PESEL}\r\n                        id=\"PESEL\"\r\n                        required\r\n                        pattern=\"[0-9]{11}\"\r\n                      />\r\n                    ) : (\r\n                      <p>{patient.PESEL}</p>\r\n                    )}{\" \"}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Data urodzenia: </td>\r\n                  <td> {patient.dateOfBirth} </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Adres: </td>\r\n                  <td>\r\n                    {this.state.editMode ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        defaultValue={patient.address}\r\n                        id=\"address\"\r\n                        required\r\n                      />\r\n                    ) : (\r\n                      <p>{patient.address}</p>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Telefon: </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    {this.state.editMode ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        defaultValue={patient.telephone}\r\n                        id=\"telephone\"\r\n                        required\r\n                        pattern=\"[0-9]{9}\"\r\n                      />\r\n                    ) : (\r\n                      <p>{patient.telephone}</p>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>ICD10: </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    {this.state.editMode ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        defaultValue={patient.icd10}\r\n                        id=\"icd10\"\r\n                      />\r\n                    ) : (\r\n                      <p>{patient.icd10}</p>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            {this.props.activeAccount === \"doctor\" && (\r\n              <button onClick={this.editData}>\r\n                {this.state.editMode ? \"Zapisz\" : \"Edytuj\"}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"todo-list\">\r\n          <h3 className=\"expandable\" onClick={this.expandTasks}>\r\n            Zadania do wykonania\r\n          </h3>\r\n          <div className=\"mobile-out tasks\">\r\n            <ul>\r\n              {this.props.tasks.map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={task.completed}\r\n                      onChange={this.props.toggleComplete}\r\n                      id={task._id}\r\n                      disabled={this.props.activeAccount !== \"doctor\"}\r\n                    />{\" \"}\r\n                    {task.title}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            {this.props.activeAccount === \"doctor\" && (\r\n              <form onSubmit={this.props.addTask}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Wpisz nowe zadanie\"\r\n                  name=\"title\"\r\n                  required\r\n                />\r\n                <input type=\"submit\" value=\"Dodaj\" />\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Report.css\";\r\n\r\nclass Raport extends Component {\r\n  state = {\r\n    parameters: [],\r\n    chosenParameter: \"\",\r\n    documents: [],\r\n    filteredResults: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await fetch(\" https://medical-documentation.herokuapp.com/lab-data\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ parameters: data }));\r\n\r\n      await fetch(` https://medical-documentation.herokuapp.com/documentation?patientID=${this.props.patientID}`)\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data.sort(this.compare) }));\r\n  }\r\n\r\n  chooseResultType = async e => {\r\n    let filteredResults;\r\n\r\n    filteredResults = this.state.documents\r\n      .filter(document => document.title.includes(\"Badanie krwi\"))\r\n      .filter(labResult =>\r\n        labResult.results.some(result => result.name === e.target.value)\r\n      );\r\n    await this.setState({ chosenParameter: e.target.value, filteredResults });\r\n  };\r\n\r\n  compare = (a, b) => {\r\n    const dateA = parseInt(\r\n      a.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    const dateB = parseInt(\r\n      b.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container \">\r\n        <Link to=\"/documentation\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <h2>Raport z badań laboratoryjnych</h2>\r\n        <div className=\"report-content\">\r\n          <label>\r\n            Wybierz parametr do porównania\r\n            <select\r\n              name=\"parameters\"\r\n              onChange={this.chooseResultType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled={true}>\r\n                Parametr\r\n              </option>\r\n              {this.state.parameters.map((parameter, i) => (\r\n                <option key={i} value={parameter.name}>\r\n                  {parameter.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          {this.state.filteredResults.length > 0 && (\r\n            <div>\r\n              <p className=\"mobile-info\">\r\n                Zakres:{\" \"}\r\n                {\r\n                  this.state.parameters.find(\r\n                    item => item.name === this.state.chosenParameter\r\n                  ).range\r\n                }{\" \"}\r\n                {\r\n                  this.state.parameters.find(\r\n                    item => item.name === this.state.chosenParameter\r\n                  ).unit\r\n                }\r\n              </p>\r\n              <table border=\"1\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Data</th>\r\n                    <th>Wartość {this.state.chosenParameter}</th>\r\n                    {/*<th>Zakres</th>\r\n                    <th>Jednostka</th>*/}\r\n                    <th>Lekarz zlecający</th>\r\n                    <th>Laborant</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.filteredResults.map((result, i) => {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td>{result.testDate} </td>\r\n                        <td>\r\n                          {\r\n                            result.results.find(\r\n                              item => item.name === this.state.chosenParameter\r\n                            ).value\r\n                          }\r\n                        </td>\r\n                        {/*<td>{ result.results.find(item => item.name === this.state.chosenParameter).range }</td>\r\n                        <td>{ result.results.find(item => item.name === this.state.chosenParameter).unit }</td>*/}\r\n                        <td>{result.orderingDoctor}</td>\r\n                        <td>{result.labTechnician}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n              <button>Zapisz do PDF</button>\r\n            </div>\r\n          )}\r\n          {(!this.state.filteredResults.length && this.state.chosenParameter) && <p> Brak danych</p>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Raport;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Document from \"./Document\";\r\nimport MedicalProcess from \"./MedicalProcess\";\r\nimport Documentation from \"./Documentation\";\r\nimport Recommendations from \"./Recommendations\";\r\nimport SideBar from \"./SideBar\";\r\nimport \"../css/PatientDoctorPage.css\";\r\nimport Report from \"./Report\";\r\n\r\nclass PatientPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      `https://medical-documentation.herokuapp.com/medical-process?patientID=${\r\n        this.props.patientID\r\n      }`\r\n    )\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data.sort(this.compare) }));\r\n  }\r\n\r\n  editTask = async id => {\r\n    await fetch(\" https://medical-documentation.herokuapp.com/edit-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        patientID: this.state.patientID,\r\n        title: document.querySelector(\"#title\").value,\r\n        details: document.querySelector(\"#details\").value,\r\n        date: document.querySelector(\"#date\").value,\r\n        id: id\r\n      })\r\n    })\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data.sort(this.compare) }));\r\n  };\r\n\r\n  toggleComplete = e => {\r\n    const id = e.target.id;\r\n    let isCompleted = \"\";\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = !task.completed;\r\n          isCompleted = task.completed;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n    //dodanie do bazy\r\n    fetch(\" https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id, completed: isCompleted })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data.sort(this.compare) }));\r\n  };\r\n\r\n  compare = (a, b) => {\r\n    const dateA =\r\n      parseInt(\r\n        a.date\r\n          .split(\" \")[0]\r\n          .split(\"-\")\r\n          .join(\"\")\r\n      ) || 0;\r\n    const dateB =\r\n      parseInt(\r\n        b.date\r\n          .split(\" \")[0]\r\n          .split(\"-\")\r\n          .join(\"\")\r\n      ) || 0;\r\n    console.log(dateA);\r\n    console.log(dateB);\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n\r\n  render() {\r\n    const patientID = this.props.patientID;\r\n    return (\r\n      <div>\r\n        <SideBar tasks={this.state.tasks} patientID={patientID} />\r\n\r\n        <HashRouter>\r\n          <nav>\r\n            <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n              Dokumentacja\r\n            </NavLink>\r\n            <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n              Zalecenia\r\n            </NavLink>\r\n            <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n              Proces medyczny\r\n            </NavLink>\r\n          </nav>\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/documentation\"\r\n              render={props => (\r\n                <Documentation\r\n                  {...props}\r\n                  activeAccount=\"doctor\"\r\n                  patientID={patientID}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/recommendations\"\r\n              render={props => (\r\n                <Recommendations\r\n                  {...props}\r\n                  activeAccount=\"doctor\"\r\n                  patientID={patientID}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/medical-process\"\r\n              render={props => (\r\n                <MedicalProcess\r\n                  {...props}\r\n                  tasks={this.state.tasks}\r\n                  editTask={this.editTask}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/documentation/report\"\r\n              render={props => (\r\n                <Report\r\n                  {...props}\r\n                  activeAccount=\"doctor\"\r\n                  patientID={patientID}\r\n                />\r\n              )}\r\n            />\r\n            }\r\n            <Route\r\n              exact\r\n              path=\"/documentation/document:documentId\"\r\n              render={props => (\r\n                <Document\r\n                  {...props}\r\n                  activeAccount=\"doctor\"\r\n                  patientID={patientID}\r\n                />\r\n              )}\r\n            />\r\n            <Redirect from=\"/\" to=\"/documentation\" />\r\n          </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PatientPage;\r\n","const transformDateTime = date => {\r\n  const day = `${\r\n    date.getDate().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMonth()+1}`;\r\n  const year = date.getYear() - 100;\r\n  const hour = `${\r\n    date.getHours().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getHours()}`;\r\n  const minutes = `${\r\n    date.getMinutes().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMinutes()}`;\r\n\r\n  return `20${year}-${month}-${day} ${hour}:${minutes}`;\r\n};\r\n\r\nconst transformDate = date => {\r\n  const day = `${\r\n    date.getDate().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMonth()+1}`;\r\n  const year = date.getYear() - 100;\r\n  return `20${year}-${month}-${day}`;\r\n};\r\n\r\nconst today = transformDate(new Date());\r\nconst threeDaysAgo = transformDate(new Date(Date.now() - 3 * 24 * 3600 * 1000));\r\nconst dateWithTime = `${threeDaysAgo} 07:00`\r\n\r\nconst now = transformDateTime(new Date());\r\n\r\nexport { today, threeDaysAgo, now, dateWithTime, transformDate, transformDateTime };\r\n","import React, { Component } from \"react\";\r\nimport \"../../css/NewDocument.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\nclass NewDocument extends Component {\r\n  state = {\r\n    documentType: \"\",\r\n    referrals: [],\r\n    files: [],\r\n    activeUser: JSON.parse(sessionStorage.getItem(\"user\")) || []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\" https://medical-documentation.herokuapp.com/attached-documents\")\r\n      .then(result => result.json())\r\n      .then(data =>\r\n        this.setState({\r\n          referrals: data.filter(document => document.type === \"skierowanie\")\r\n        })\r\n      );\r\n  }\r\n\r\n  chooseDocumentType = e => {\r\n    this.setState({ documentType: e.target.value });\r\n  };\r\n\r\n  // *********** Upload file to Cloudinary ******************** //\r\n  uploadFile = file => {\r\n    const cloudName = \"mickanie\";\r\n    const unsignedUploadPreset = \"default\";\r\n    var url = `https://api.cloudinary.com/v1_1/${cloudName}/upload`;\r\n    var xhr = new XMLHttpRequest();\r\n    var fd = new FormData();\r\n    xhr.open(\"POST\", url, true);\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n\r\n    xhr.onreadystatechange = function(e) {\r\n      if (xhr.readyState == 4 && xhr.status == 200) {\r\n        // File uploaded successfully\r\n        var response = JSON.parse(xhr.responseText);\r\n        console.log(response);\r\n      }\r\n    };\r\n\r\n    fd.append(\"upload_preset\", unsignedUploadPreset);\r\n    fd.append(\"tags\", \"medical_documentation\"); // Optional - add tag for image admin in Cloudinary\r\n    fd.append(\"file\", file);\r\n    xhr.send(fd);\r\n  };\r\n\r\n  createDocument = async e => {\r\n    e.preventDefault();\r\n    console.log(e.target.files.files);\r\n    const files = e.target.files.files;\r\n    const title = `${this.state.documentType}: ${\r\n      e.target.region ? e.target.region.value : \"\"\r\n    }  ${e.target.testDate.value.split(\"T\")[0]}`;\r\n\r\n    await fetch(\" https://medical-documentation.herokuapp.com/new-document\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        patientID: this.props.patientID,\r\n        documentType: this.state.documentType,\r\n        title,\r\n        testDate: e.target.testDate.value.split(\"T\").join(\" \"),\r\n        referralID: e.target.referral.value,\r\n        orderingDoctor: e.target.orderingDoctor.value,\r\n        performingDoctor: e.target.performingDoctor.value,\r\n        describingDoctor: this.state.activeUser.name,\r\n        content: e.target.content.value\r\n      })\r\n    })\r\n      .then(result => result.json())\r\n      .then(data => {\r\n        const documentId = data._id;\r\n        console.log(documentId);\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n          //zmiana nazwy plików\r\n          let blob = files[i].slice(0, files[i].size, \"image/jpg\");\r\n          const newFile = new File([blob], `${documentId}.jpg`, {\r\n            type: \"image/jpg\"\r\n          });\r\n          this.uploadFile(newFile);\r\n        }\r\n      });\r\n\r\n    this.props.history.push(\"/documentation\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to=\"/documentation\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n\r\n        <h2 style={{ textAlign: \"center\" }}>Nowy dokument</h2>\r\n\r\n        <div className=\"new-document\">\r\n          <label>\r\n            Typ dokumentu:\r\n            <select\r\n              name=\"documentType\"\r\n              onChange={this.chooseDocumentType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled>\r\n                Wybierz typ\r\n              </option>\r\n              <option value=\"Badanie USG\">Badanie USG</option>\r\n\r\n              <option value=\"Badanie EKG\">Badanie EKG</option>\r\n              <option value=\"Echokardiografia\">Echokardiografia</option>\r\n              <option value=\"Tomografia komputerowa\">\r\n                Tomografia komputerowa\r\n              </option>\r\n              <option value=\"Rezonans magnetyczny\">Rezonans magnetyczny</option>\r\n              <option value=\"Angiografia\">Angiografia / Koronarografia</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.documentType && (\r\n            <form className=\"document-form\" onSubmit={this.createDocument}>\r\n              {(this.state.documentType === \"Rezonans magnetyczny\" ||\r\n                this.state.documentType === \"Tomografia komputerowa\") && (\r\n                <label>\r\n                  {\" \"}\r\n                  Badany obszar: <input type=\"text\" name=\"region\" required />\r\n                </label>\r\n              )}\r\n\r\n              <label>\r\n                {\" \"}\r\n                Data badania:{\" \"}\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  name=\"testDate\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Skierowanie:{\" \"}\r\n                <select className=\"referrals\" name=\"referral\" defaultValue=\"\">\r\n                  <option value=\"\" disabled>\r\n                    Wybierz skierowanie\r\n                  </option>\r\n                  {this.state.referrals.map((referral, i) => {\r\n                    return (\r\n                      <option key={i} value={referral._id}>\r\n                        {referral.title}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </label>\r\n\r\n              <label>\r\n                {\" \"}\r\n                Lekarz zlecający:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"orderingDoctor\"\r\n                  required\r\n                  placeholder=\"Imię i nazwisko lekarza\"\r\n                />\r\n              </label>\r\n\r\n              <label>\r\n                {\" \"}\r\n                Lekarz wykonujący:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"performingDoctor\"\r\n                  required\r\n                  placeholder=\"Imię i nazwisko lekarza\"\r\n                />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Treść: <textarea required name=\"content\" />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Załączniki:{\" \"}\r\n                <input\r\n                  type=\"file\"\r\n                  multiple=\"multiple\"\r\n                  name=\"files\"\r\n                  accept=\"image/*\"\r\n                />\r\n              </label>\r\n\r\n              <input type=\"submit\" value=\"Dodaj dokument\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewDocument;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\nimport \"../../css/NewRecommendation.css\";\r\n\r\nclass NewRecommendation extends Component {\r\n  state = {\r\n    dataSaved: JSON.parse(sessionStorage.getItem(\"saved\")),\r\n    data: JSON.parse(sessionStorage.getItem(\"recommendationData\")) || {},\r\n    attachments: JSON.parse(sessionStorage.getItem(\"attachments\")) || [],\r\n    activeUser: JSON.parse(sessionStorage.getItem(\"user\")) || []\r\n  };\r\n\r\n  toggleSave = async e => {\r\n    e.preventDefault();\r\n\r\n    const { date, content } = e.target.parentElement;\r\n    if (!this.state.dataSaved) {\r\n      await this.setState({\r\n        dataSaved: true,\r\n        data: {\r\n          content: content.value,\r\n          date: date.value\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        dataSaved: false,\r\n        data: {\r\n          content: \"\",\r\n          date: \"\"\r\n        }\r\n      });\r\n    }\r\n    await sessionStorage.setItem(\r\n      \"recommendationData\",\r\n      JSON.stringify(this.state.data)\r\n    );\r\n    await sessionStorage.setItem(\"saved\", JSON.stringify(this.state.dataSaved));\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  submitRecommendation = () => {\r\n    fetch(\" https://medical-documentation.herokuapp.com/new-recommendation\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        patientID: this.props.patientID,\r\n        date: document.getElementById(\"date\").value,\r\n        content: document.getElementById(\"content\").value,\r\n        doctor: this.state.activeUser.name,\r\n        attachments: this.state.attachments\r\n      })\r\n    });\r\n    sessionStorage.removeItem(\"saved\");\r\n    sessionStorage.removeItem(\"recommendationData\");\r\n    sessionStorage.removeItem(\"attachments\");\r\n    this.props.history.push(\"/recommendations\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container form-container\">\r\n        <Link to=\"/recommendations\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <h2>Nowe zalecenie</h2>\r\n\r\n        <form>\r\n          <label>\r\n            Data:\r\n            <input\r\n              type=\"date\"\r\n              disabled={this.state.dataSaved}\r\n              name=\"date\"\r\n              id=\"date\"\r\n              min={threeDaysAgo}\r\n              max={today}\r\n              defaultValue={this.state.data.date || today}\r\n            />\r\n          </label>\r\n          <label>\r\n            Treść:{\" \"}\r\n            <textarea\r\n              id=\"content\"\r\n              disabled={this.state.dataSaved}\r\n              name=\"content\"\r\n              defaultValue={this.state.data.content || \"\"}\r\n            />\r\n          </label>\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.dataSaved ? \"Edytuj\" : \"Zapisz\"}\r\n            onClick={this.toggleSave}\r\n          />\r\n        </form>\r\n        {this.state.attachments && (\r\n          <p className=\"attachments-info\">\r\n            Załączniki:\r\n            {this.state.attachments.map((attachment, i) => {\r\n              return (\r\n                <Link\r\n                  key={i}\r\n                  className=\"attachments\"\r\n                  to=\"/recommendations/attachments/:document\"\r\n                >\r\n                  {attachment.title}\r\n                </Link>\r\n              );\r\n            })}\r\n          </p>\r\n        )}\r\n        <section className=\"attachments-choice\">\r\n          Wygeneruj załącznik:{\" \"}\r\n          <div className=\"attachment-links\">\r\n            <Link to=\"/recommendations/create-new/generate-prescription\">\r\n              <button className=\"attachment-button\">Recepta</button>\r\n            </Link>\r\n            <Link to=\"/recommendations/create-new/generate-sickleave\">\r\n              <button className=\"attachment-button\">Zwolnienie</button>\r\n            </Link>\r\n            <Link to=\"/recommendations/create-new/generate-referral\">\r\n              <button className=\"attachment-button\">Skierowanie</button>\r\n            </Link>\r\n            <Link to=\"/recommendations/create-new/generate-lab-order\">\r\n              <button className=\"attachment-button\">Zlecenie badania</button>\r\n            </Link>\r\n          </div>\r\n        </section>\r\n        <button className=\"submit-button\" onClick={this.submitRecommendation}>\r\n          Dodaj zalecenie\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewRecommendation;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/NewAttachment.css\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\n\r\nclass NewAttachment extends Component {\r\n  state = {\r\n    startDate: \"\",\r\n    activeUser: JSON.parse(sessionStorage.getItem(\"user\")) || [],\r\n  };\r\n\r\n  submitAttachment = async e => {\r\n    e.preventDefault();\r\n\r\n    let attachedDocument = {};\r\n    const { date, startDate } = e.target;\r\n    switch (this.props.documentType) {\r\n      case \"prescription\":\r\n        const { medicine, payment } = e.target;\r\n        attachedDocument = {\r\n          patientID: this.props.patientID,\r\n          title: `Recepta ${medicine.value}`,\r\n          medicine: medicine.value,\r\n          payment: payment.value,\r\n          issueDate: date.value,\r\n          startDate: startDate.value,\r\n          type: \"recepta\",\r\n          doctor: this.state.activeUser.name\r\n        };\r\n        break;\r\n      case \"sickleave\":\r\n        const { placeOfWork, endDate } = e.target;\r\n        attachedDocument = {\r\n          patientID: this.props.patientID,\r\n          title: `Zwolnienie ${startDate.value}-${endDate.value}`,\r\n          issueDate: date.value,\r\n          placeOfWork: placeOfWork.value,\r\n          startDate: startDate.value,\r\n          endDate: endDate.value,\r\n          type: \"zwolnienie\",\r\n          doctor: this.state.activeUser.name\r\n        };\r\n        break;\r\n\r\n      case \"referral\":\r\n        const { place, examination, diagnosis, aim } = e.target;\r\n        attachedDocument = {\r\n          patientID: this.props.patientID,\r\n          title: `Skierowanie na ${examination.value} ${date.value}`,\r\n          issueDate: date.value,\r\n          place: place.value,\r\n          examination: examination.value,\r\n          diagnosis: diagnosis.value,\r\n          aim: aim.value,\r\n          type: \"skierowanie\",\r\n          doctor: this.state.activeUser.name\r\n        };\r\n        break;\r\n      case \"lab-order\":\r\n        const checkboxes = [...e.target.test];\r\n        const labTests = checkboxes\r\n          .filter(checkbox => checkbox.checked === true)\r\n          .map(checkbox => checkbox.value);\r\n\r\n        console.log(labTests);\r\n        attachedDocument = {\r\n          patientID: this.props.patientID,\r\n          title: `Zlecenie badań laboratoryjnych ${date.value}`,\r\n          date: date.value,\r\n          labTests: labTests,\r\n          type: \"zlecenie badań\",\r\n          doctor: this.state.activeUser.name\r\n        };\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    await fetch(\" https://medical-documentation.herokuapp.com/attach-document\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(attachedDocument)\r\n    })\r\n      .then(result => result.json())\r\n      .then(data => (attachedDocument.id = data));\r\n    console.log(attachedDocument.id);\r\n    let attachments = JSON.parse(sessionStorage.getItem(\"attachments\")) || [];\r\n    attachments.push(attachedDocument);\r\n    sessionStorage.setItem(\"attachments\", JSON.stringify(attachments));\r\n    this.props.history.push(\"/recommendations/create-new\");\r\n  };\r\n\r\n  setStartDate = e => {\r\n    this.setState({ startDate: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const documentType = this.props.documentType;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to=\"/recommendations/create-new\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        {documentType === \"prescription\" && (\r\n          <div>\r\n            <h2>Nowa recepta</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Informacje o leku:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Nazwa, ilość, dawkowanie\"\r\n                  name=\"medicine\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Odpłatność:{\" \"}\r\n                <input type=\"text\" name=\"payment\" required placeholder=\" \" />\r\n              </label>\r\n              <label>\r\n                Data od dnia: <input type=\"date\" name=\"startDate\" />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"sickleave\" && (\r\n          <div>\r\n            <h2>Nowe zwolnienie lekarskie</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Miejsce pracy:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"placeOfWork\"\r\n                  required\r\n                  placeholder=\" \"\r\n                />\r\n              </label>\r\n              <label>\r\n                od:{\" \"}\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"startDate\"\r\n                  min={threeDaysAgo}\r\n                  required\r\n                  id=\"startDate\"\r\n                  onChange={this.setStartDate}\r\n                />\r\n              </label>\r\n              <label>\r\n                do:{\" \"}\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"endDate\"\r\n                  required\r\n                  min={this.state.startDate}\r\n                />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"referral\" && (\r\n          <div>\r\n            <h2>Nowe skierowanie</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Skierowanie do:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"place\"\r\n                  placeholder=\"poradni specjalistycznej, pracowni diagnostycznej\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Badanie:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"examination\"\r\n                  placeholder=\"konsultacja, badanie USG\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Rozpoznanie:{\" \"}\r\n                <input type=\"text\" name=\"diagnosis\" required placeholder=\" \" />\r\n              </label>\r\n              <label>\r\n                Cel: <input type=\"text\" name=\"aim\" required placeholder=\" \" />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"lab-order\" && (\r\n          <div>\r\n            <h2>Nowe zlecenie na badanie</h2>\r\n            <form className=\"lab-order-form\" onSubmit={this.submitAttachment}>\r\n              <label className=\"date-label\">\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n\r\n              <div className=\"tests\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Morfologia\" />\r\n                  Morfologia\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"LDL\" />\r\n                  LDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"HDL\" />\r\n                  HDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TC\" />\r\n                  TC\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Glukoza\" />\r\n                  Glukoza\r\n                </label>\r\n\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TG\" />\r\n                  Trójglicerydy\r\n                </label>\r\n\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Kwas moczowy\" />\r\n                  Keas moczowy\r\n                </label>\r\n\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TP\" />\r\n                  TP\r\n                </label>\r\n\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TBIL\" />\r\n                  TBIL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Magnez\" />\r\n                  Magnez\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Sód\" />\r\n                  Sód\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Potas\" />\r\n                  Potas\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Żelazo\" />\r\n                  Żelazo\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Wapń\" />\r\n                  Wapń\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"ALAT\" />\r\n                  ALAT\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"ASPAT\" />\r\n                  ASPAT\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TSH\" />\r\n                  TSH\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"FT3\" />\r\n                  FT3\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"FT4\" />\r\n                  FT4\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"OB\" />\r\n                  OB\r\n                </label>\r\n              </div>\r\n\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewAttachment;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Recommendations from \"../Recommendations\";\r\nimport MedicalProcess from \"../MedicalProcess\";\r\nimport Documentation from \"../Documentation\";\r\nimport NewDocument from \"./NewDocument\";\r\nimport Document from \"../Document\";\r\nimport Report from \"../Report\";\r\nimport SideBar from \"../SideBar\";\r\nimport \"../../css/PatientDoctorPage.css\";\r\nimport NewRecommendation from \"./NewRecommendation\";\r\nimport NewAttachment from \"./NewAttachment\";\r\n\r\nclass DoctorPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    tasks: [],\r\n    patients: []\r\n  };\r\n\r\n  async componentDidUpdate() {\r\n    //because setState is asynchronous\r\n\r\n    await sessionStorage.setItem(\r\n      \"patientID\",\r\n      JSON.stringify(this.state.patientID)\r\n    );\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await fetch(\" https://medical-documentation.herokuapp.com/patients\")\r\n      .then(result => result.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        this.setState({ patients: data.map(patient => patient.id) });\r\n      });\r\n    await fetch(\r\n      ` https://medical-documentation.herokuapp.com/medical-process?patientID=${this.state.patientID}`\r\n    )\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data.sort(this.compare) }));\r\n  }\r\n  //MEDICAL PROCESS\r\n  addTask = async e => {\r\n    e.preventDefault();\r\n    e.persist();\r\n    e.target.title.value = e.target.title.value.trim();\r\n\r\n    if (e.target.title.value.length === 0) {\r\n      return;\r\n    }\r\n    const completed = e.target.completed.value === \"done\" ? true : false;\r\n\r\n    await fetch(\" https://medical-documentation.herokuapp.com/new-task\", {\r\n      method: \"post\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        patientID: this.state.patientID,\r\n        title: e.target.title.value,\r\n        date: e.target.date.value.split(\"T\").join(\" \"),\r\n        completed,\r\n        details: e.target.details.value,\r\n        previousTask: e.target.previousTask.value\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data.sort(this.compare) }));\r\n\r\n    e.target.title.value = \"\";\r\n    e.target.details.value = \"\";\r\n    e.target.date.value = \"\";\r\n  };\r\n\r\n  //SIDE BAR\r\n  addTaskFromSideBar = async e => {\r\n    e.preventDefault();\r\n    console.log(e.target);\r\n    e.persist();\r\n    e.target.title.value = e.target.title.value.trim();\r\n\r\n    if (e.target.title.value.length === 0) {\r\n      return;\r\n    }\r\n    await fetch(\" https://medical-documentation.herokuapp.com/new-task\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        patientID: this.state.patientID,\r\n        title: e.target.title.value,\r\n        date: \"\",\r\n        completed: false,\r\n        details: \"\",\r\n        previousTask: \"\"\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data.sort(this.compare) }));\r\n\r\n    e.target.title.value = \"\";\r\n  };\r\n\r\n  editTask = async id => {\r\n    await fetch(\" https://medical-documentation.herokuapp.com/edit-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        patientID: this.state.patientID,\r\n        title: document.querySelector(\"#title\").value,\r\n        details: document.querySelector(\"#details\").value,\r\n        date: document.querySelector(\"#date\").value,\r\n        previousTaskId: document.querySelector(\"#previous-task\").value,\r\n        id: id\r\n      })\r\n    })\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data.sort(this.compare) }));\r\n  };\r\n\r\n  setCompleted = e => {\r\n    const id = e.target.id;\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = true;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n\r\n    fetch(\" https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id, completed: true })\r\n    });\r\n  };\r\n\r\n  toggleComplete = async e => {\r\n    const id = e.target.id;\r\n    let isCompleted = \"\";\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = !task.completed;\r\n          isCompleted = task.completed;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n    //dodanie do bazy\r\n    await fetch(\" https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id, completed: isCompleted })\r\n    });\r\n  };\r\n\r\n  searchPatient = async e => {\r\n    e.preventDefault();\r\n\r\n    //console.log(e.target.patientID.value);\r\n    let patientID;\r\n    if (!this.state.patientID) {\r\n      e.preventDefault();\r\n      patientID = e.target.patientID.value;\r\n      await this.setState({ patientID });\r\n      /*await fetch(\r\n        \" https://medical-documentation.herokuapp.com/get-patient-data\",\r\n        {\r\n          method: \"put\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ patientID })\r\n        }\r\n      ).then(result => {\r\n        if (result.status === 400) {\r\n          alert(\"Nie ma takiego pacjenta\");\r\n        } else {\r\n          this.setState({ patientID });\r\n        }\r\n      });*/\r\n\r\n      await fetch(\r\n        ` https://medical-documentation.herokuapp.com/medical-process?patientID=${\r\n          this.state.patientID\r\n        }`\r\n      )\r\n        .then(result => result.json())\r\n        .then(data => this.setState({ tasks: data.sort(this.compare) }));\r\n    } else {\r\n      await this.setState({ patientID: \"\" });\r\n\r\n      /*fetch(\" https://medical-documentation.herokuapp.com/get-patient-data\", {\r\n        method: \"put\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ patientID: \"\" })\r\n      });*/\r\n      //e.target.patientID.required = true;\r\n    }\r\n  };\r\n\r\n  compare = (a, b) => {\r\n    const dateA =\r\n      parseInt(\r\n        a.date\r\n          .split(\" \")[0]\r\n          .split(\"-\")\r\n          .join(\"\")\r\n      ) || 0;\r\n    const dateB =\r\n      parseInt(\r\n        b.date\r\n          .split(\" \")[0]\r\n          .split(\"-\")\r\n          .join(\"\")\r\n      ) || 0;\r\n\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n\r\n  render() {\r\n    let patientID = this.state.patientID;\r\n    return (\r\n      <div>\r\n        <form className=\"ID-form\" onSubmit={this.searchPatient}>\r\n          {patientID ? (\r\n            <p className=\"id-info\">{patientID}</p>\r\n          ) : (\r\n            <select name=\"patientID\" defaultValue=\"\">\r\n              <option value=\"\" disabled>\r\n                Wybierz pacjenta\r\n              </option>\r\n              {this.state.patients.map((patient, i) => {\r\n                return (\r\n                  <option key={i} value={patient}>\r\n                    {patient}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          )}\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.patientID ? \"Zmień pacienta\" : \"Znajdź pacjenta\"}\r\n          />\r\n        </form>\r\n\r\n        {this.state.patientID && (\r\n          <div>\r\n            <SideBar\r\n              activeAccount=\"doctor\"\r\n              patientID={patientID}\r\n              tasks={this.state.tasks}\r\n              addTask={this.addTaskFromSideBar}\r\n              toggleComplete={this.toggleComplete}\r\n            />\r\n            <HashRouter>\r\n              <nav>\r\n                <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n                  Dokumentacja\r\n                </NavLink>\r\n                <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n                  Zalecenia\r\n                </NavLink>\r\n                <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n                  Proces medyczny\r\n                </NavLink>\r\n              </nav>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-prescription\"\r\n                  render={props => (\r\n                    <NewAttachment\r\n                      {...props}\r\n                      documentType=\"prescription\"\r\n                      patientID={patientID}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-sickleave\"\r\n                  render={props => (\r\n                    <NewAttachment\r\n                      {...props}\r\n                      documentType=\"sickleave\"\r\n                      patientID={patientID}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-referral\"\r\n                  render={props => (\r\n                    <NewAttachment\r\n                      {...props}\r\n                      documentType=\"referral\"\r\n                      patientID={patientID}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-lab-order\"\r\n                  render={props => (\r\n                    <NewAttachment\r\n                      {...props}\r\n                      documentType=\"lab-order\"\r\n                      patientID={patientID}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/document:documentId\"\r\n                  render={props => (\r\n                    <Document\r\n                      {...props}\r\n                      activeAccount=\"doctor\"\r\n                      patientID={patientID}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new\"\r\n                  render={props => (\r\n                    <NewRecommendation\r\n                      {...props}\r\n                      activeAccount=\"doctor\"\r\n                      patientID={patientID}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/create-new\"\r\n                  render={props => (\r\n                    <NewDocument\r\n                      {...props}\r\n                      activeAccount=\"doctor\"\r\n                      patientID={patientID}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/report\"\r\n                  render={props => (\r\n                    <Report\r\n                      {...props}\r\n                      activeAccount=\"doctor\"\r\n                      patientID={patientID}\r\n                    />\r\n                  )}\r\n                />\r\n                } />\r\n                <Route\r\n                  path=\"/documentation\"\r\n                  render={props => (\r\n                    <Documentation\r\n                      {...props}\r\n                      activeAccount=\"doctor\"\r\n                      patientID={patientID}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/recommendations\"\r\n                  render={props => (\r\n                    <Recommendations\r\n                      {...props}\r\n                      activeAccount=\"doctor\"\r\n                      patientID={patientID}\r\n                    />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/medical-process\"\r\n                  render={props => (\r\n                    <MedicalProcess\r\n                      {...props}\r\n                      activeAccount=\"doctor\"\r\n                      tasks={this.state.tasks}\r\n                      addTask={this.addTask}\r\n                      setCompleted={this.setCompleted}\r\n                      editTask={this.editTask}\r\n                    />\r\n                  )}\r\n                />\r\n                <Redirect from=\"/\" to=\"/documentation\" />\r\n              </Switch>\r\n            </HashRouter>\r\n            <div />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoctorPage;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/LabTechnicianPage.css\";\r\nimport { today } from \"../DateParser\";\r\n\r\nclass LabTechnicianPage extends Component {\r\n  state = {\r\n    resultType: \"\",\r\n    results: [],\r\n    parameters: [],\r\n    labOrders: [],\r\n    patientID: \"\",\r\n    activeUser: JSON.parse(sessionStorage.getItem(\"user\")) || []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\" https://medical-documentation.herokuapp.com/lab-data\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ parameters: data }));\r\n  }\r\n\r\n  chooseResultType = e => {\r\n    console.log(e.target.value);\r\n    this.setState({ resultType: e.target.value });\r\n  };\r\n\r\n  addParameter = e => {\r\n    e.preventDefault();\r\n    let name = document.querySelector(\"#parameter\").value;\r\n    let value = document.querySelector(\"#result\").value;\r\n    let range = this.state.parameters.find(parameter => parameter.name === name)\r\n      .range;\r\n    let unit = this.state.parameters.find(parameter => parameter.name === name)\r\n      .unit;\r\n    if (/^[0-9.,]{1,7}$/.test(value)) {\r\n      const newParameter = {\r\n        name,\r\n        value,\r\n        type: this.state.resultType,\r\n        range,\r\n        unit\r\n      };\r\n      this.setState({ results: [...this.state.results, newParameter] });\r\n      document.querySelector(\"#result\").value = \"\";\r\n    }\r\n  };\r\n\r\n  submitResult = e => {\r\n    e.preventDefault();\r\n    const collectionDate = e.target.collectionDate.value.split(\"T\");\r\n    const title = `Badanie krwi ${collectionDate[0]}`;\r\n    const issueDate = today;\r\n\r\n    fetch(\" https://medical-documentation.herokuapp.com/lab-result\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        labPatientID: e.target.patientID.value,\r\n        labOrder: e.target.labOrder.value,\r\n        orderingDoctor: e.target.orderingDoctor.value,\r\n        title,\r\n        testDate: collectionDate.join(\" \"),\r\n        issueDate,\r\n        labTechnician: this.state.activeUser.name,\r\n        results: this.state.results\r\n      })\r\n    });\r\n    this.setState({ resultType: \"\", results: [] });\r\n    window.location.reload();\r\n  };\r\n\r\n  choosePatient = async e => {\r\n    let patientID = e.target.value;\r\n    if (patientID.match(/[0-9]{5}/)) {\r\n      await fetch(\" https://medical-documentation.herokuapp.com/patients\").then(result =>\r\n        result.json().then(data => {\r\n          const ids = data.map(patient => patient.id);\r\n          if (ids.includes(patientID)) {\r\n            this.setState({ patientID });\r\n          } else {\r\n            alert(\"Nie ma takiego pacjenta\");\r\n            this.setState({ patientID: \"\" });\r\n          }\r\n        })\r\n      );\r\n    }\r\n\r\n    await fetch(\r\n      ` https://medical-documentation.herokuapp.com/attached-documents?patientID=${\r\n        this.state.patientID\r\n      }`\r\n    )\r\n      .then(result => result.json())\r\n      .then(data =>\r\n        this.setState({\r\n          labOrders: data.filter(document => document.type === \"zlecenie badań\")\r\n        })\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container lab-container\">\r\n        <h2>Dodaj wynik badania krwi</h2>\r\n        <form className=\"form\" onSubmit={this.submitResult}>\r\n          <label htmlFor=\"patientID\" className=\"mainLabel\">\r\n            ID pacjenta{\" \"}\r\n            <input\r\n              name=\"patientID\"\r\n              type=\"text\"\r\n              required\r\n              pattern=\"[0-9]{5}\"\r\n              placeholder=\" \"\r\n              onChange={this.choosePatient}\r\n            />\r\n          </label>\r\n\r\n          <label className=\"mainLabel\">\r\n            Zlecenie:{\" \"}\r\n            <select\r\n              className=\"lab-orders\"\r\n              name=\"labOrder\"\r\n              defaultValue=\"\"\r\n              disabled={!this.state.patientID}\r\n              required\r\n            >\r\n              <option value=\"\" disabled>\r\n                Wybierz zlecenie\r\n              </option>\r\n              {this.state.labOrders.map((labOrder, i) => {\r\n                return (\r\n                  <option key={i} value={labOrder._id}>\r\n                    {labOrder.title}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </label>\r\n          <label htmlFor=\"orderingDoctor\" className=\"mainLabel\">\r\n            Lekarz zlecający{\" \"}\r\n            <input\r\n              name=\"orderingDoctor\"\r\n              type=\"text\"\r\n              required\r\n              placeholder=\" \"\r\n              disabled={!this.state.patientID}\r\n            />\r\n          </label>\r\n          <label htmlFor=\"collectionDate\" className=\"mainLabel\">\r\n            Data pobrania{\" \"}\r\n            <input\r\n              name=\"collectionDate\"\r\n              type=\"datetime-local\"\r\n              disabled={!this.state.patientID}\r\n            />\r\n          </label>\r\n\r\n          <label className=\"mainLabel\">\r\n            Typ badania\r\n            <select\r\n              disabled={!this.state.patientID}\r\n              name=\"result-type\"\r\n              onChange={this.chooseResultType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled={true}>\r\n                Wybierz typ badania\r\n              </option>\r\n              <option value=\"Morfologia\">Morfologia krwi</option>\r\n              <option value=\"Biochemia\">Biochemia krwi</option>\r\n              <option value=\"Immunochemia\">Immunochemia</option>\r\n              <option value=\"OB\">OB</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.resultType && (\r\n            <div className=\"result-display\">\r\n              <div className=\"inner-form\">\r\n                <label>\r\n                  Wybierz parametr\r\n                  {this.state.resultType === \"Morfologia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      {this.state.parameters\r\n                        .filter(\r\n                          parameter => parameter.testType === \"Morfologia\"\r\n                        )\r\n                        .map((parameter, i) => {\r\n                          return (\r\n                            <option key={i} value={parameter.name}>\r\n                              {parameter.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"Biochemia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      {this.state.parameters\r\n                        .filter(parameter => parameter.testType === \"Biochemia\")\r\n                        .map((parameter, i) => {\r\n                          return (\r\n                            <option key={i} value={parameter.name}>\r\n                              {parameter.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"Immunochemia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      {this.state.parameters\r\n                        .filter(\r\n                          parameter => parameter.testType === \"Immunochemia\"\r\n                        )\r\n                        .map((parameter, i) => {\r\n                          return (\r\n                            <option key={i} value={parameter.name}>\r\n                              {parameter.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"OB\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      <option value=\"OB\">OB</option>\r\n                    </select>\r\n                  )}\r\n                </label>\r\n                <label>\r\n                  Wartość\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"result\"\r\n                    id=\"result\"\r\n                    pattern=\"[0-9.,]{1,7}\"\r\n                  />\r\n                </label>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Dodaj parametr\"\r\n                  onClick={this.addParameter}\r\n                />\r\n              </div>\r\n\r\n              {this.state.results.length > 0 && (\r\n                <div className=\"table\">\r\n                  <table border=\"1\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"mobile-out\">Lp.</th>\r\n                        <th>Parametr</th>\r\n                        <th>Wartość</th>\r\n                        <th>Zakres</th>\r\n                        <th>Jednostka</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {this.state.results.map((item, i) => {\r\n                      return (\r\n                        <tbody key={i}>\r\n                          <tr>\r\n                            <td className=\"mobile-out\">{i + 1}</td>\r\n                            <td>{this.state.results[i].name}</td>\r\n                            <td>{this.state.results[i].value}</td>\r\n                            <td>{this.state.results[i].range}</td>\r\n                            <td>{this.state.results[i].unit}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      );\r\n                    })}\r\n                  </table>\r\n                  <input type=\"submit\" value=\"Zapisz i prześlij\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabTechnicianPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PatientPage from \"./Patient-Doctor/PatientPage\";\r\nimport DoctorPage from \"./Patient-Doctor/Doctor/DoctorPage\";\r\nimport LabTechnicianPage from \"./LabTechnician/LabTechnicianPage\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    activeAccount: JSON.parse(sessionStorage.getItem(\"account\"))\r\n      ? JSON.parse(sessionStorage.getItem(\"account\"))\r\n      : \"\",\r\n    isLoggedIn: JSON.parse(sessionStorage.getItem(\"isLoggedIn\")) || \"false\",\r\n    activeUser: JSON.parse(sessionStorage.getItem(\"user\")) || [],\r\n    patientID: JSON.parse(sessionStorage.getItem(\"patientID\")) || [],\r\n  };\r\n\r\n  async componentDidUpdate() {\r\n    //because setState is asynchronous\r\n    await sessionStorage.setItem(\r\n      \"isLoggedIn\",\r\n      JSON.stringify(this.state.isLoggedIn)\r\n    );\r\n    await sessionStorage.setItem(\r\n      \"account\",\r\n      JSON.stringify(this.state.activeAccount)\r\n    );\r\n    await sessionStorage.setItem(\"user\", JSON.stringify(this.state.activeUser));\r\n    await sessionStorage.setItem(\r\n      \"patientID\",\r\n      JSON.stringify(this.state.patientID)\r\n    );\r\n  }\r\n\r\n  changeAccount = e => {\r\n    this.setState({ activeAccount: e.target.value });\r\n  };\r\n\r\n  logIn = async e => {\r\n    e.preventDefault();\r\n    let patientID;\r\n    await fetch(\"https://medical-documentation.herokuapp.com/login\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        login: e.target.login.value,\r\n        password: e.target.password.value\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        if (data === \"FAIL\") {\r\n          document.querySelector(\"#login-info\").innerHTML =\r\n            \"Niepoprawny login i hasło\";\r\n        } else {\r\n          patientID = data.accountType === \"patient\" ? data.ID : \"\";\r\n          this.setState({\r\n            activeAccount: data.accountType,\r\n            isLoggedIn: \"true\",\r\n            activeUser: data,\r\n            patientID\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  logOut = async () => {\r\n    this.setState({\r\n      activeAccount: \"\",\r\n      isLoggedIn: \"false\",\r\n      activeUser: [],\r\n      patientID: []\r\n    });\r\n    //await sessionStorage.setItem(\"isLoggedIn\", false);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    let infoText;\r\n    if (sessionStorage.getItem(\"generatedLogin\")) {\r\n      infoText = `Twój wygenerowany login: ${sessionStorage.getItem(\r\n        \"generatedLogin\"\r\n      )}`;\r\n      sessionStorage.removeItem(\"generatedLogin\");\r\n    } else {\r\n      infoText = <br />;\r\n    }\r\n    return (\r\n      <div>\r\n        {this.state.isLoggedIn === \"false\" ? (\r\n          <div className=\"login-container\">\r\n            <h2>Zaloguj się</h2>\r\n            <p id=\"login-info\">{infoText}</p>\r\n            <form onSubmit={this.logIn}>\r\n              <label htmlFor=\"login\">Użytkownik: </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"login\"\r\n                pattern=\"[PDL]\\d{5}\"\r\n                placeholder=\"np. P12345, D12345, L12345\"\r\n                required\r\n              />\r\n              <label htmlFor=\"password\">Hasło: </label>\r\n              <input type=\"password\" name=\"password\" required />\r\n              <input type=\"submit\" value=\"Zaloguj\" />\r\n            </form>\r\n            <p>Nie masz konta?</p>\r\n            <Link to=\"/register\">\r\n              <button>Zarejestruj się</button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <header>\r\n              {/*<div className=\"radio-buttons\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Patient\"\r\n                  value=\"patient\"\r\n                  checked={this.state.activeAccount === \"patient\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Pacjent\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Doctor\"\r\n                  value=\"doctor\"\r\n                  checked={this.state.activeAccount === \"doctor\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Lekarz\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Lab\"\r\n                  value=\"lab\"\r\n                  checked={this.state.activeAccount === \"lab\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Laborant\r\n              </label>\r\n        </div>*/}\r\n              <p className=\"login-info\">\r\n                Zalogowano jako: {this.state.activeUser.name}\r\n              </p>\r\n\r\n              <button className=\"log-out\" onClick={this.logOut}>\r\n                Wyloguj się\r\n              </button>\r\n            </header>\r\n\r\n            {this.state.activeAccount === \"patient\" ? (\r\n              <PatientPage patientID={this.state.patientID} />\r\n            ) : this.state.activeAccount === \"doctor\" ? (\r\n              <DoctorPage />\r\n            ) : (\r\n              <LabTechnicianPage />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\n\r\nimport Main from \"./Main\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nclass App extends Component {\r\n  async componentWillMount() {\r\n    if (!sessionStorage.getItem(\"account\")) {\r\n      console.log(\"no account\");\r\n      const text = \"\";\r\n      await sessionStorage.setItem(\"account\", JSON.stringify(text));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/\" component={Main} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n//basename - because of /dokumenty_cyfrowe_w_medycynie in url (gh-pages)\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}> \r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}