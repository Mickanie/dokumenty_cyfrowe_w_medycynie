{"version":3,"sources":["Register.js","Patient-Doctor/Document.js","Patient-Doctor/MedicalProcess.js","Patient-Doctor/Documentation.js","Patient-Doctor/Recommendations.js","Patient-Doctor/SideBar.js","Patient-Doctor/Report.js","Patient-Doctor/PatientPage.js","DateParser.js","Patient-Doctor/Doctor/NewDocument.js","Patient-Doctor/Doctor/NewRecommendation.js","Patient-Doctor/Doctor/NewAttachment.js","Patient-Doctor/Doctor/DoctorPage.js","LabTechnician/LabTechnicianPage.js","Main.js","App.js","index.js"],"names":["Register","state","accountType","generatedLogin","chooseAccountType","e","_this","setState","target","value","goBack","props","history","push","validatePassword","password","document","getElementById","confirmPassword","setCustomValidity","registerUser","_callee","regenerator_default","a","wrap","_context","prev","next","preventDefault","fetch","method","headers","Content-Type","body","JSON","stringify","name","surname","pesel","PWZ","specialization","then","result","json","data","login","localStorage","setItem","dob","sex","address","stop","react_default","createElement","className","onClick","this","onSubmit","onChange","htmlFor","type","required","id","pattern","Fragment","Component","Document","documents","patients","_this2","currentDocument","currentPatient","_this3","length","forEach","_id","match","params","documentId","console","log","react_router_dom","to","style","fontWeight","title","includes","textAlign","width","margin","testDate","orderingDoctor","performingDoctor","describingDoctor","content","issueDate","labTechnician","border","results","map","item","i","key","range","unit","handleClick","filePatient","File","FileSaver","saveAs","fileResults","MedicalProcess","tasks","editMode","editTask","Object","toConsumableArray","index","indexOf","concat","activeAccount","addTask","placeholder","filter","task","completed","defaultValue","setCompleted","details","float","date","Documentation","compare","b","dateA","parseInt","split","join","dateB","filterResults","fromDate","toDate","tag","filtered","tags","documentType","sort","height","textDecoration","Recommendations","recommendations","activeUser","recommendation","color","doctor","background","attachedDocuments","attachment","SideBar","patient","editData","querySelector","PESEL","telephone","icd10","age","dateOfBirth","checked","toggleComplete","disabled","Raport","parameters","chosenParameter","filteredResults","chooseResultType","labResult","some","parameter","find","PatientPage","patientID","isCompleted","response","Patient_Doctor_SideBar","activeClassName","react_router","exact","path","component","render","Patient_Doctor_MedicalProcess","assign","Report","from","transformDate","day","getDate","toString","month","getMonth","year","getYear","today","Date","threeDaysAgo","now","NewDocument","hour","getHours","minutes","getMinutes","transformDateTime","chooseDocumentType","createDocument","region","min","max","multiple","NewRecommendation","dataSaved","parse","getItem","attachments","toggleSave","_e$target$parentEleme","parentElement","submitRecommendation","removeItem","NewAttachment","submitAttachment","attachedDocument","_e$target","startDate","_e$target2","medicine","payment","_e$target3","placeOfWork","endDate","_e$target4","place","examination","diagnosis","aim","checkboxes","labTests","t0","abrupt","test","checkbox","DoctorPage","mode","Access-Control-Allow-Origin","addTaskFromSideBar","_callee2","_context2","searchPatient","_callee3","_context3","Doctor_NewAttachment","Patient_Doctor_Documentation","Patient_Doctor_Recommendations","LabTechnicianPage","resultType","addParameter","newParameter","submitResult","collectionDate","labPatientID","window","location","reload","testType","Main","isLoggedIn","changeAccount","logIn","innerHTML","logOut","infoText","Patient_Doctor_PatientPage","Doctor_DoctorPage","LabTechnician_LabTechnicianPage","App","ReactDOM","basename","process","src_App"],"mappings":"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","file":"static/js/main.85e11a8f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n/* import { withRouter } from 'react-router-dom'; */\r\n//import { history } from 'react-router-dom';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    accountType: \"patient\",\r\n    generatedLogin: \"\"\r\n  };\r\n\r\n  chooseAccountType = e => {\r\n    this.setState({ accountType: e.target.value });\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  validatePassword = () => {\r\n    let password = document.getElementById(\"password\");\r\n    let confirmPassword = document.getElementById(\"confirm-password\");\r\n\r\n    if (password.value !== confirmPassword.value) {\r\n      confirmPassword.setCustomValidity(\"Hasła nie są jednakowe\");\r\n    } else {\r\n      confirmPassword.setCustomValidity(\"\");\r\n    }\r\n  };\r\n\r\n  registerUser = async e => {\r\n    e.preventDefault();\r\n    if (this.state.accountType === \"doctor\") {\r\n      await fetch(\"https://medical-documentation.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          accountType: this.state.accountType,\r\n          name: e.target.name.value,\r\n          surname: e.target.surname.value,\r\n          pesel: e.target.pesel.value,\r\n          PWZ: e.target.PWZ.value,\r\n          specialization: e.target.specialization.value,\r\n          password: e.target.password.value\r\n        })\r\n      })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          this.setState({ generatedLogin: data.login });\r\n        });\r\n      await localStorage.setItem(\"generatedLogin\", this.state.generatedLogin);\r\n    } else {\r\n      await fetch(\"https://medical-documentation.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          accountType: this.state.accountType,\r\n          name: e.target.name.value,\r\n          surname: e.target.surname.value,\r\n          pesel: e.target.pesel.value,\r\n          dob: e.target.dob.value,\r\n          sex: e.target.sex.value,\r\n          address: e.target.address.value,\r\n          password: e.target.password.value\r\n        })\r\n      })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          this.setState({ generatedLogin: data.login });\r\n        });\r\n      await localStorage.setItem(\"generatedLogin\", this.state.generatedLogin);\r\n    }\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container register-container\">\r\n        <h2>Zarejestruj się</h2>\r\n        <button className=\"backButton\" onClick={this.goBack}>\r\n          Powrót do logowania\r\n        </button>\r\n        <form onSubmit={this.registerUser}>\r\n          <span>\r\n            <label>Typ konta: </label>\r\n            <select name=\"accountType\" onChange={this.chooseAccountType}>\r\n              <option value=\"patient\">Pacjent</option>\r\n              <option value=\"doctor\">Lekarz</option>\r\n              <option value=\"lab\">Laborant</option>\r\n            </select>\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"name\">Imię </label>\r\n            <input type=\"text\" name=\"name\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"surname\">Nazwisko </label>\r\n            <input type=\"text\" name=\"surname\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"surname\">Płeć </label>\r\n            <input type=\"text\" name=\"sex\" required />\r\n          </span>\r\n          {this.state.accountType !== \"doctor\" && (\r\n            <span>\r\n              <label htmlFor=\"dob\">Data urodzenia </label>\r\n              <input type=\"date\" name=\"dob\" required />\r\n            </span>\r\n          )}\r\n          <span>\r\n            <label htmlFor=\"pesel\">PESEL </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"pesel\"\r\n              id=\"pesel\"\r\n              required\r\n              pattern=\"[0-9]{11}\"\r\n            />\r\n          </span>\r\n          {this.state.accountType === \"doctor\" && (\r\n            <>\r\n              {\" \"}\r\n              <span>\r\n                <label>Numer PWZ</label>\r\n                <input type=\"text\" name=\"PWZ\" required />\r\n              </span>\r\n              <span>\r\n                <label>Specjalizacja</label>\r\n                <input type=\"text\" name=\"specialization\" required />\r\n              </span>\r\n            </>\r\n          )}\r\n          {this.state.accountType !== \"doctor\" && (\r\n            <span>\r\n              <label htmlFor=\"surname\">Adres </label>\r\n              <input type=\"text\" name=\"address\" required />\r\n            </span>\r\n          )}\r\n          <span>\r\n            <label htmlFor=\"password\">Hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"password\"\r\n              //pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"password\">Powtórz hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"confirm-password\"\r\n              //pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n              onChange={this.validatePassword}\r\n            />\r\n          </span>\r\n          <input type=\"submit\" value=\"Zarejestruj się\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Document.css\";\r\nimport FileSaver from 'file-saver'\r\n\r\nclass Document extends Component {\r\n  state = {\r\n    documents: [],\r\n\tpatients: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data }));\r\n\tawait fetch(\"https://medical-documentation.herokuapp.com/patient\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ patients: data }));\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.documents.length && this.state.patients) {\r\n\r\n      let currentDocument;\r\n      this.state.documents.forEach(document => {\r\n        \r\n        if (document._id === this.props.match.params.documentId) {\r\n          currentDocument = document;\r\n        }\r\n      });\r\n\t  \r\n\t  let currentPatient;\r\n\t  currentPatient = this.state.patients;\r\n      /*this.state.patients.forEach(document => {\r\n\t\t  alert(document.patientID + \" \" + currentDocument.patientID);\r\n        if (document.patientID === currentDocument.patientID) {\r\n          currentPatient = document;\r\n        }\r\n      });*/\r\n\r\n      console.log(currentDocument);\r\n      return (\r\n        <div className=\"container document-container\">\r\n          <Link to=\"/documentation\" className=\"backButton\">\r\n            <button>Powrót</button>\r\n          </Link>\r\n          <p style={{ fontWeight: \"700\" }}>{currentDocument.title}</p>\r\n          {!currentDocument.title.includes(\"Badanie krwi\") && (\r\n            <div style={{ textAlign: \"left\", width: \"30%\", margin: \"0 auto\" }}>\r\n              <p>Data: {currentDocument.testDate}</p>\r\n              <p>Lekarz zlecający: {currentDocument.orderingDoctor}</p>\r\n              <p>Lekarz wykonujący: {currentDocument.performingDoctor}</p>\r\n              <p>Lekarz opisujący: {currentDocument.describingDoctor}</p>\r\n              <p>\r\n                <br />\r\n                {currentDocument.content}\r\n              </p>\r\n            </div>\r\n          )}\r\n          {currentDocument.title.includes(\"Badanie krwi\") && (\r\n            <div className=\"table\">\r\n            <div style={{ textAlign: \"left\", width: \"50%\", margin: \"0 auto\" }}>\r\n            <p>Data pobrania: {currentDocument.testDate} </p>\r\n               <p>Data wydania: {currentDocument.issueDate}</p>\r\n              <p>Lekarz zlecający: {currentDocument.orderingDoctor}</p>\r\n              <p>Laborant: {currentDocument.labTechnician}</p>\r\n            </div>\r\n              <table border=\"1\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Lp</th>\r\n                    <th>Parametr</th>\r\n                    <th>Wartość</th>\r\n                    <th>Zakres</th>\r\n                    <th>Jednostka</th>\r\n                  </tr>\r\n                </thead>\r\n                {currentDocument.results.map((item, i) => {\r\n                  return (\r\n                    <tbody key={i}>\r\n                      <tr>\r\n                        <td>{i + 1}</td>\r\n                        <td>{currentDocument.results[i].name}</td>\r\n                        <td>{currentDocument.results[i].value}</td>\r\n                        <td>{currentDocument.results[i].range}</td>\r\n                        <td>{currentDocument.results[i].unit}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </table>\r\n            </div>\r\n          )}\r\n\r\n          <button onClick={() => this.handleClick(currentDocument, currentPatient)}>Zapisz do PDF</button>\r\n\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  handleClick(currentDocument, currentPatient) {\r\n\t//const FileSaver = require('file-saver');\r\n\tconst filePatient = new File([JSON.stringify(currentPatient)], 'patient.json', {type: \"text/plain;charset=utf-8\"});\r\n\tFileSaver.saveAs(filePatient);\r\n\tconst fileResults = new File([JSON.stringify(currentDocument)], 'results.json', {type: \"text/plain;charset=utf-8\"});\r\n\tFileSaver.saveAs(fileResults);\r\n  }\r\n}\r\n\r\nexport default Document;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/MedicalProcess.css\";\r\nimport \"../css/App.css\";\r\n\r\nclass MedicalProcess extends Component {\r\n  state = {\r\n    tasks: [],\r\n    editMode: []\r\n  };\r\n\r\n  editMode = e => {\r\n    const id = e.target.id;\r\n    if (!this.state.editMode.includes(id)) {\r\n      const editMode = [...this.state.editMode, id];\r\n      this.setState({ editMode });\r\n    } else {\r\n      //dodanie do bazy\r\n      this.props.editTask(id);\r\n      //usunięcie z tablicy editMode\r\n      let editMode = [...this.state.editMode];\r\n      const index = editMode.indexOf(id);\r\n      delete editMode[index];\r\n      this.setState({ editMode });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container medical-process-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <form onSubmit={this.props.addTask}>\r\n            <input type=\"text\" placeholder=\"Tytuł\" name=\"title\" />\r\n            <select name=\"completed\">\r\n              <option value=\"done\">Wykonane</option>\r\n              <option value=\"todo\">Do zrobienia</option>\r\n            </select>\r\n            Data: <input type=\"datetime-local\" name=\"date\" />\r\n            <textarea placeholder=\"Szczegóły\" name=\"details\" />\r\n            <input type=\"submit\" value=\"Dodaj zadanie\" />\r\n          </form>\r\n        )}\r\n        <div className=\"content\">\r\n          <h3>Do zrobienia</h3>\r\n          <ul>\r\n            {this.props.tasks\r\n              .filter(task => task.completed === false)\r\n              .map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <strong>\r\n                      {this.state.editMode.includes(task._id) ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"title\"\r\n                          id=\"title\"\r\n                          defaultValue={task.title}\r\n                        />\r\n                      ) : (\r\n                        task.title\r\n                      )}\r\n                    </strong>\r\n                    {this.props.activeAccount === \"doctor\" && (\r\n                      <button\r\n                        className=\"set-done\"\r\n                        id={task._id}\r\n                        onClick={this.props.setCompleted}\r\n                      >\r\n                        ✓\r\n                      </button>\r\n                    )}\r\n\r\n                    <button\r\n                      className=\"edit\"\r\n                      onClick={this.editMode}\r\n                      id={task._id}\r\n                    >\r\n                      🖉\r\n                    </button>\r\n\r\n                    <br />\r\n                    {this.state.editMode.includes(task._id) ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"details\"\r\n                        id=\"details\"\r\n                        defaultValue={task.details}\r\n                        placeholder=\"Szczegóły\"\r\n                      />\r\n                    ) : (\r\n                      task.details\r\n                    )}\r\n                    <span style={{ float: \"right\" }}>\r\n                      {this.state.editMode.includes(task._id) ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"date\"\r\n                          id=\"date\"\r\n                          defaultValue={task.date}\r\n                          placeholder=\"Data\"\r\n                        />\r\n                      ) : (\r\n                        task.date\r\n                      )}\r\n                    </span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n          <hr />\r\n          <h3>Wykonane</h3>\r\n          <ul>\r\n            {this.props.tasks\r\n              .filter(task => task.completed === true)\r\n              .map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <strong>\r\n                      {this.state.editMode.includes(task._id) ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"title\"\r\n                          id=\"title\"\r\n                          defaultValue={task.title}\r\n                        />\r\n                      ) : (\r\n                        task.title\r\n                      )}\r\n                    </strong>\r\n                    <button\r\n                      className=\"edit\"\r\n                      onClick={this.editMode}\r\n                      id={task._id}\r\n                    >\r\n                      🖉\r\n                    </button>\r\n\r\n                    <br />\r\n                    {this.state.editMode.includes(task._id) ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        name=\"details\"\r\n                        id=\"details\"\r\n                        defaultValue={task.details}\r\n                        placeholder=\"Szczegóły\"\r\n                      />\r\n                    ) : (\r\n                      task.details\r\n                    )}\r\n                    <span style={{ float: \"right\" }}>\r\n                      {this.state.editMode.includes(task._id) ? (\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"date\"\r\n                          id=\"date\"\r\n                          defaultValue={task.date}\r\n                          placeholder=\"Data\"\r\n                        />\r\n                      ) : (\r\n                        task.date\r\n                      )}\r\n                    </span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicalProcess;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Documentation.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Documentation extends Component {\r\n  state = {\r\n    documents: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data.sort(this.compare) }));\r\n  }\r\n\r\n  compare = (a, b) => {\r\n    const dateA = parseInt(\r\n      a.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    const dateB = parseInt(\r\n      b.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n\r\n  filterResults = async e => {\r\n    e.preventDefault();\r\n    const fromDate =\r\n      parseInt(e.target.fromDate.value.split(\"-\").join(\"\")) || null;\r\n    const toDate = parseInt(e.target.toDate.value.split(\"-\").join(\"\")) || null;\r\n    const tag = e.target.tags.value;\r\n    await fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data }));\r\n\r\n    console.log(fromDate, toDate);\r\n    const filtered = this.state.documents\r\n      .filter(document => {\r\n        if (tag !== \"all\") {\r\n          return document.documentType === tag;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n      .filter(document => {\r\n        if (fromDate && toDate) {\r\n          return (\r\n            parseInt(\r\n              document.date\r\n                .split(\" \")[0]\r\n                .split(\"-\")\r\n                .join(\"\")\r\n            ) >= fromDate &&\r\n            parseInt(\r\n              document.date\r\n                .split(\" \")[0]\r\n                .split(\"-\")\r\n                .join(\"\")\r\n            ) <= toDate\r\n          );\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n\r\n    this.setState({ documents: filtered });\r\n  };\r\n\r\n  render() {\r\n    //const height = this.props.activeAccount === \"doctor\" ? \"41vh\" : \"55vh\";\r\n    return (\r\n      <div className=\"container documentation-container\">\r\n        <div className=\"buttons\">\r\n          {this.props.activeAccount === \"doctor\" && (\r\n            <Link to=\"documentation/create-new\">\r\n              <button>Dodaj wynik badania</button>\r\n            </Link>\r\n          )}\r\n          <Link to=\"documentation/report\">\r\n            <button>Wygeneruj raport</button>\r\n          </Link>\r\n        </div>\r\n        <form className=\"filterForm\" onSubmit={this.filterResults}>\r\n          <label>\r\n            Filtruj po tagu:{\" \"}\r\n            <select name=\"tags\">\r\n              <option value=\"all\">Wszystko</option>\r\n              <option value=\"Badanie krwi\">Badanie krwi</option>\r\n              <option value=\"Badanie USG\">Badanie USG</option>\r\n              <option value=\"Badanie EKG\">Badanie EKG</option>\r\n              <option value=\"Echokardiografia\">Echokardiografia</option>\r\n              <option value=\"Tomografia komputerowa\">\r\n                Tomografia komputerowa\r\n              </option>\r\n              <option value=\"Rezonans magnetyczny\">Rezonans magnetyczny</option>\r\n              <option value=\"Angiografia\">Angiografia / Koronarografia</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Filtruj po dacie: od <input type=\"date\" name=\"fromDate\" /> do{\" \"}\r\n            <input type=\"date\" name=\"toDate\" />\r\n          </label>\r\n          <input type=\"submit\" value=\"Filtruj\" />\r\n        </form>\r\n        <div className=\"documents content\" style={{ height: \"41vh\" }}>\r\n          <ul>\r\n            {this.state.documents.map((document, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <Link\r\n                    style={{ fontWeight: \"600\", textDecoration: \"underline\" }}\r\n                    to={`/documentation/document${document._id}`}\r\n                  >\r\n                    {document.title}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Documentation;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Recommendations.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Recommendations extends Component {\r\n  state = {\r\n    recommendations: [],\r\n    activeUser: []\r\n  };\r\n  /*https://medical-documentation.herokuapp.com*/\r\n  componentWillMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/recommendations\")\r\n      .then(result => result.json())\r\n      .then(data =>\r\n        this.setState({ recommendations: data.sort(this.compare) })\r\n      );\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/active-user\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ activeUser: data }));\r\n  }\r\n\r\n  compare = (a, b) => {\r\n    const dateA = parseInt(\r\n      a.date\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    const dateB = parseInt(\r\n      b.date\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container recommendations-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <Link to=\"/recommendations/create-new\">\r\n            <button>Dodaj zalecenie</button>\r\n          </Link>\r\n        )}\r\n\r\n        <div className=\"content\">\r\n          {this.state.recommendations.map((recommendation, i) => {\r\n            const color =\r\n              recommendation.doctor === this.state.activeUser.name\r\n                ? \"rgb(138, 159, 138)\"\r\n                : \"grey\";\r\n            return (\r\n              <div\r\n                className=\"recommendation\"\r\n                key={i}\r\n                style={{ background: color }}\r\n              >\r\n                <p>Data: {recommendation.date} </p>\r\n                <p>Lekarz: {recommendation.doctor} </p>\r\n                <p>Treść: {recommendation.content}</p>\r\n                <p>\r\n                  Załączone dokumenty:{\" \"}\r\n                  {recommendation.attachedDocuments.map((attachment, i) => (\r\n                    <Link\r\n                      key={i}\r\n                      style={{\r\n                        margin: \"10px\",\r\n                        color: \"white\",\r\n                        textDecoration: \"underline\"\r\n                      }}\r\n                      to={`/recommendations/attached-document-:${\r\n                        attachment.id\r\n                      }`}\r\n                    >\r\n                      {attachment.title}\r\n                    </Link>\r\n                  ))}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recommendations;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/SideBar.css\";\r\n\r\nclass SideBar extends Component {\r\n  state = {\r\n    patient: [],\r\n    tasks: [],\r\n    editMode: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await fetch(\"https://medical-documentation.herokuapp.com/patient\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ patient: data }));\r\n  }\r\n\r\n  editData = async e => {\r\n    if (!this.state.editMode) {\r\n      this.setState({ editMode: true });\r\n    } else {\r\n      //sent to db\r\n      await fetch(\r\n        \"https://medical-documentation.herokuapp.com/edit-patient-data\",\r\n        {\r\n          method: \"put\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            name: document.querySelector(\"#name\").value,\r\n            sex: document.querySelector(\"#sex\").value,\r\n            PESEL: document.querySelector(\"#PESEL\").value,\r\n            telephone: document.querySelector(\"#telephone\").value,\r\n            address: document.querySelector(\"#address\").value,\r\n            icd10: document.querySelector(\"#icd10\").value\r\n          })\r\n        }\r\n      ).then(result => result.json())\r\n      .then(data => this.setState({ patient: data }));\r\n      this.setState({ editMode: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const patient = this.state.patient;\r\n    const name = `${patient.name} ${patient.surname}`;\r\n    return (\r\n      <div className=\"side-bar\">\r\n        <div className=\"patient-info\">\r\n          <h3>Dane osobowe</h3>\r\n\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Imię i nazwisko: </td>\r\n                <td>\r\n                  {this.state.editMode ? (\r\n                    <input type=\"text\" defaultValue={name} id=\"name\" />\r\n                  ) : (\r\n                    <p>{name}</p>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Płeć: </td>\r\n                <td>\r\n                  {this.state.editMode ? (\r\n                    <input type=\"text\" defaultValue={patient.sex} id=\"sex\" />\r\n                  ) : (\r\n                    <p>{patient.sex}</p>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Wiek: </td>\r\n                <td> {patient.age} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>PESEL: </td>\r\n                <td>\r\n                  {\" \"}\r\n                  {this.state.editMode ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      defaultValue={patient.PESEL}\r\n                      id=\"PESEL\"\r\n                    />\r\n                  ) : (\r\n                    <p>{patient.PESEL}</p>\r\n                  )}{\" \"}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Data urodzenia: </td>\r\n                <td> {patient.dateOfBirth} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Adres: </td>\r\n                <td>\r\n                  {this.state.editMode ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      defaultValue={patient.address}\r\n                      id=\"address\"\r\n                    />\r\n                  ) : (\r\n                    <p>{patient.address}</p>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Telefon: </td>\r\n                <td>\r\n                  {\" \"}\r\n                  {this.state.editMode ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      defaultValue={patient.telephone}\r\n                      id=\"telephone\"\r\n                    />\r\n                  ) : (\r\n                    <p>{patient.telephone}</p>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>ICD10: </td>\r\n                <td>\r\n                  {\" \"}\r\n                  {this.state.editMode ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      defaultValue={patient.icd10}\r\n                      id=\"icd10\"\r\n                    />\r\n                  ) : (\r\n                    <p>{patient.icd10}</p>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          {this.props.activeAccount === \"doctor\" && (\r\n            <button onClick={this.editData}>\r\n              {this.state.editMode ? \"Zapisz\" : \"Edytuj\"}\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div className=\"todo-list\">\r\n          <h3>Zadania do wykonania</h3>\r\n          <ul>\r\n            {this.props.tasks.map((task, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.completed}\r\n                    onChange={this.props.toggleComplete}\r\n                    id={task._id}\r\n                    disabled={this.props.activeAccount !== \"doctor\"}\r\n                  />{\" \"}\r\n                  {task.title}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          {this.props.activeAccount === \"doctor\" && (\r\n            <form onSubmit={this.props.addTask}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Wpisz nowe zadanie\"\r\n                name=\"title\"\r\n              />\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Report.css\";\r\n\r\nclass Raport extends Component {\r\n  state = {\r\n    parameters: [],\r\n    chosenParameter: \"\",\r\n    documents: [],\r\n    filteredResults: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/lab-data\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ parameters: data }));\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data.sort(this.compare) }));\r\n  }\r\n\r\n  chooseResultType = async e => {\r\n    let filteredResults;\r\n\r\n    filteredResults = this.state.documents\r\n      .filter(document => document.title.includes(\"Badanie krwi\"))\r\n      .filter(labResult =>\r\n        labResult.results.some(result => result.name === e.target.value)\r\n      );\r\n    await this.setState({ chosenParameter: e.target.value, filteredResults });\r\n  };\r\n\r\n  compare = (a, b) => {\r\n    const dateA = parseInt(\r\n      a.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    const dateB = parseInt(\r\n      b.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container \">\r\n        <Link to=\"/documentation\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <h2>Raport z badań laboratoryjnych</h2>\r\n        <div className=\"raport-content\">\r\n          <label>\r\n            Wybierz parametr do porównania\r\n            <select\r\n              name=\"parameters\"\r\n              onChange={this.chooseResultType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled={true}>\r\n                Parametr\r\n              </option>\r\n              {this.state.parameters.map((parameter, i) => (\r\n                <option key={i} value={parameter.name}>\r\n                  {parameter.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          {this.state.filteredResults.length > 0 && (\r\n            <div>\r\n              <table border=\"1\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Data</th>\r\n                    <th>Wartość {this.state.chosenParameter}</th>\r\n                    <th>Zakres</th>\r\n                    <th>Jednostka</th>\r\n                    <th>Lekarz zlecający</th>\r\n                    <th>Laborant</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.filteredResults.map((result, i) => {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td>{ result.testDate } </td>\r\n                        <td>{ result.results.find(item => item.name === this.state.chosenParameter).value }</td>\r\n                        <td>{ result.results.find(item => item.name === this.state.chosenParameter).range }</td>\r\n                        <td>{ result.results.find(item => item.name === this.state.chosenParameter).unit }</td>\r\n                        <td>{ result.orderingDoctor }</td>\r\n                        <td>{ result.labTechnician }</td>\r\n\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n              <button>Zapisz do PDF</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Raport;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Document from \"./Document\";\r\nimport MedicalProcess from \"./MedicalProcess\";\r\nimport Documentation from \"./Documentation\";\r\nimport Recommendations from \"./Recommendations\";\r\nimport SideBar from \"./SideBar\";\r\nimport \"../css/PatientDoctorPage.css\";\r\nimport Report from \"./Report\";\r\n\r\nclass PatientPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  }\r\n\r\n  editTask = async id => {\r\n    await fetch(\"https://medical-documentation.herokuapp.com/edit-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: document.querySelector(\"#title\").value,\r\n        details: document.querySelector(\"#details\").value,\r\n        date: document.querySelector(\"#date\").value,\r\n        id: id\r\n      })\r\n    })\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  };\r\n\r\n  toggleComplete = e => {\r\n    const id = e.target.id;\r\n    let isCompleted = \"\";\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = !task.completed;\r\n          isCompleted = task.completed;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n    //dodanie do bazy\r\n    fetch(\"https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id, completed: isCompleted })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SideBar tasks={this.state.tasks} />\r\n\r\n        <HashRouter>\r\n          <nav>\r\n            <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n              Dokumentacja\r\n            </NavLink>\r\n            <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n              Zalecenia lekarskie\r\n            </NavLink>\r\n            <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n              Proces medyczny\r\n            </NavLink>\r\n          </nav>\r\n          <Switch>\r\n            <Route exact path=\"/documentation\" component={Documentation} />\r\n            <Route exact path=\"/recommendations\" component={Recommendations} />\r\n            <Route\r\n              path=\"/medical-process\"\r\n              render={props => (\r\n                <MedicalProcess\r\n                  {...props}\r\n                  tasks={this.state.tasks}\r\n                  editTask={this.editTask}\r\n                />\r\n              )}\r\n            />\r\n            <Route exact path=\"/documentation/report\" component={Report} />}\r\n            <Route\r\n              exact\r\n              path=\"/documentation/document:documentId\"\r\n              component={Document}\r\n            />\r\n            <Redirect from=\"/\" to=\"/documentation\" />\r\n          </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PatientPage;\r\n","const transformDateTime = date => {\r\n  const day = `${\r\n    date.getDate().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMonth()+1}`;\r\n  const year = date.getYear() - 100;\r\n  const hour = `${\r\n    date.getHours().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getHours()}`;\r\n  const minutes = `${\r\n    date.getMinutes().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMinutes()}`;\r\n\r\n  return `20${year}-${month}-${day} ${hour}:${minutes}`;\r\n};\r\n\r\nconst transformDate = date => {\r\n  const day = `${\r\n    date.getDate().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMonth()+1}`;\r\n  const year = date.getYear() - 100;\r\n  return `20${year}-${month}-${day}`;\r\n};\r\n\r\n/* const transformFromDB = date => {\r\n  if (date !== null) {\r\n    const dateTime = date.split(\"T\");\r\n    const time = dateTime[1].slice(0, 5);\r\n    return `${dateTime[0]} ${time}`\r\n    \r\n  }\r\n\r\n}; */\r\n\r\n/* const sort = (a, b) => {\r\n  a.date = a.date.split('-').join('');\r\n  b.date = b.date.split('-').join('');\r\n  return a.date > b.date ? 1 : a.date < b.date ? -1 : 0;\r\n}\r\n */\r\nconst today = transformDate(new Date());\r\nconst threeDaysAgo = transformDate(new Date(Date.now() - 3 * 24 * 3600 * 1000));\r\nconst now = transformDateTime(new Date());\r\n\r\nexport { today, threeDaysAgo, now, transformDate, transformDateTime };\r\n","import React, { Component } from \"react\";\r\nimport \"../../css/NewDocument.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\nclass NewDocument extends Component {\r\n  state = {\r\n    documentType: \"\"\r\n  };\r\n\r\n  chooseDocumentType = e => {\r\n    this.setState({ documentType: e.target.value });\r\n  };\r\n\r\n  createDocument = e => {\r\n    //console.log(e.target);\r\n    e.preventDefault();\r\n    const title = `${this.state.documentType}: ${\r\n      e.target.region ? e.target.region.value : \"\"\r\n    }  ${e.target.testDate.value.split(\"T\")[0]}`;\r\n    //console.log(title);\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-document\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        documentType: this.state.documentType,\r\n        title,\r\n        testDate: e.target.testDate.value.split(\"T\").join(\" \"),\r\n\r\n        orderingDoctor: e.target.orderingDoctor.value,\r\n        performingDoctor: e.target.performingDoctor.value,\r\n        content: e.target.content.value\r\n      })\r\n    });\r\n\r\n    this.props.history.push(\"/documentation\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Link\r\n          to=\"/documentation\"\r\n          className=\"backButton\"\r\n         \r\n        >\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <div className=\"new-document\">\r\n          <h2 style={{ textAlign: \"center\" }}>Nowy dokument</h2>\r\n          <label style={{ width: \"70%\", margin: \"auto\" }}>\r\n            Typ dokumentu:\r\n            <select\r\n              name=\"documentType\"\r\n              onChange={this.chooseDocumentType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled>\r\n                Wybierz typ\r\n              </option>\r\n              <option value=\"Badanie USG\">Badanie USG</option>\r\n\r\n              <option value=\"Badanie EKG\">Badanie EKG</option>\r\n              <option value=\"Echokardiografia\">Echokardiografia</option>\r\n              <option value=\"Tomografia komputerowa\">\r\n                Tomografia komputerowa\r\n              </option>\r\n              <option value=\"Rezonans magnetyczny\">Rezonans magnetyczny</option>\r\n              <option value=\"Angiografia\">Angiografia / Koronarografia</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.documentType && (\r\n            <form className=\"document-form\" onSubmit={this.createDocument}>\r\n              {(this.state.documentType === \"Rezonans magnetyczny\" ||\r\n                this.state.documentType === \"Tomografia komputerowa\") && (\r\n                <label>\r\n                  {\" \"}\r\n                  Badany obszar: <input type=\"text\" name=\"region\" required />\r\n                </label>\r\n              )}\r\n\r\n              <label>\r\n                {\" \"}\r\n                Data badania:{\" \"}\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  name=\"testDate\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                  required\r\n                />\r\n              </label>\r\n\r\n              <label>\r\n                {\" \"}\r\n                Lekarz zlecający:{\" \"}\r\n                <input type=\"text\" name=\"orderingDoctor\" required />\r\n              </label>\r\n\r\n              <label>\r\n                {\" \"}\r\n                Lekarz wykonujący:{\" \"}\r\n                <input type=\"text\" name=\"performingDoctor\" required />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Treść: <textarea required name=\"content\" />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Załączniki: <input type=\"file\" multiple=\"multiple\" />\r\n              </label>\r\n\r\n              <input type=\"submit\" value=\"Dodaj dokument\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewDocument;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\nimport \"../../css/NewRecommendation.css\";\r\n\r\nclass NewRecommendation extends Component {\r\n  state = {\r\n    dataSaved: JSON.parse(localStorage.getItem(\"saved\")),\r\n    data: JSON.parse(localStorage.getItem(\"recommendationData\")) || {},\r\n    attachments: JSON.parse(localStorage.getItem(\"attachments\")) || []\r\n  };\r\n\r\n  toggleSave = async e => {\r\n    e.preventDefault();\r\n\r\n    const { date, content } = e.target.parentElement;\r\n    if (!this.state.dataSaved) {\r\n      await this.setState({\r\n        dataSaved: true,\r\n        data: {\r\n          content: content.value,\r\n          date: date.value\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        dataSaved: false,\r\n        data: {\r\n          content: \"\",\r\n          date: \"\"\r\n        }\r\n      });\r\n    }\r\n    await localStorage.setItem(\r\n      \"recommendationData\",\r\n      JSON.stringify(this.state.data)\r\n    );\r\n    await localStorage.setItem(\"saved\", JSON.stringify(this.state.dataSaved));\r\n  };\r\n\r\n  submitRecommendation = () => {\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-recommendation\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        date: document.getElementById(\"date\").value,\r\n        content: document.getElementById(\"content\").value,\r\n        attachments: this.state.attachments\r\n      })\r\n    });\r\n    localStorage.removeItem(\"saved\");\r\n    localStorage.removeItem(\"recommendationData\");\r\n    localStorage.removeItem(\"attachments\");\r\n    this.props.history.push(\"/recommendations\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container form-container\">\r\n        <h2>Nowe zalecenie</h2>\r\n        <Link to=\"/recommendations\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <form>\r\n          <label>\r\n            Data:\r\n            <input\r\n              type=\"date\"\r\n              disabled={this.state.dataSaved}\r\n              name=\"date\"\r\n              id=\"date\"\r\n              min={threeDaysAgo}\r\n              max={today}\r\n              defaultValue={this.state.data.date || today}\r\n            />\r\n          </label>\r\n          <label>\r\n            Treść:{\" \"}\r\n            <textarea\r\n              id=\"content\"\r\n              disabled={this.state.dataSaved}\r\n              name=\"content\"\r\n              defaultValue={this.state.data.content || \"\"}\r\n            />\r\n          </label>\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.dataSaved ? \"Edytuj\" : \"Zapisz\"}\r\n            onClick={this.toggleSave}\r\n          />\r\n        </form>\r\n        {this.state.attachments && (\r\n          <p className=\"attachments-info\">\r\n            Załączniki:\r\n            {this.state.attachments.map((attachment, i) => {\r\n              return (\r\n                <Link\r\n                  key={i}\r\n                  className=\"attachments\"\r\n                  to=\"/recommendations/attachments/:document\"\r\n                >\r\n                  {attachment.title}\r\n                </Link>\r\n              );\r\n            })}\r\n          </p>\r\n        )}\r\n        <p>\r\n          Wygeneruj załącznik:{\" \"}\r\n          <Link to=\"/recommendations/create-new/generate-prescription\">\r\n            <button className=\"attachment-button\">Recepta</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-sickleave\">\r\n            <button className=\"attachment-button\">Zwolnienie</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-referral\">\r\n            <button className=\"attachment-button\">Skierowanie</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-lab-order\">\r\n            <button className=\"attachment-button\">Zlecenie badania</button>\r\n          </Link>\r\n        </p>\r\n        <button className=\"submit-button\" onClick={this.submitRecommendation}>\r\n          Dodaj zalecenie\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewRecommendation;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/NewAttachment.css\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\n\r\nclass NewAttachment extends Component {\r\n  submitAttachment = async e => {\r\n    e.preventDefault();\r\n\r\n    let attachedDocument = {};\r\n    const { date, startDate } = e.target;\r\n    switch (this.props.documentType) {\r\n      case \"prescription\":\r\n        const { medicine, payment } = e.target;\r\n        attachedDocument = {\r\n          title: `Recepta ${medicine.value}`,\r\n          medicine: medicine.value,\r\n          payment: payment.value,\r\n          issueDate: date.value,\r\n          startDate: startDate.value,\r\n          type: \"recepta\",\r\n\r\n        };\r\n        break;\r\n      case \"sickleave\":\r\n        const { placeOfWork, endDate } = e.target;\r\n        attachedDocument = {\r\n          title: `Zwolnienie ${startDate.value}-${endDate.value}`,\r\n          issueDate: date.value,\r\n          placeOfWork: placeOfWork.value,\r\n          startDate: startDate.value,\r\n          endDate: endDate.value,\r\n          type: \"zwolnienie\",\r\n\r\n        };\r\n        break;\r\n\r\n      case \"referral\":\r\n        const { place, examination, diagnosis, aim } = e.target;\r\n        attachedDocument = {\r\n          title: `Skierowanie do ${place.value}`,\r\n          issueDate: date.value,\r\n          place: place.value,\r\n          examination: examination.value,\r\n          diagnosis: diagnosis.value,\r\n          aim: aim.value,\r\n          type: \"skierowanie\",\r\n\r\n        };\r\n        break;\r\n      case \"lab-order\":\r\n        const checkboxes = [...e.target.test];\r\n        const labTests = checkboxes\r\n          .filter(checkbox => checkbox.checked === true)\r\n          .map(checkbox => checkbox.value);\r\n\r\n        console.log(labTests);\r\n        attachedDocument = {\r\n          title: `Zlecenie badań laboratoryjnych ${date.value}`,\r\n          labTests: labTests,\r\n          type: \"zlecenie badań\",\r\n\r\n          };\r\n         break;\r\n        default:\r\n        return;\r\n    }\r\n\r\n    await fetch(\"https://medical-documentation.herokuapp.com/attach-document\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(attachedDocument)\r\n    })\r\n     .then(result => result.json())\r\n      .then(data => attachedDocument.id = data);\r\n    console.log(attachedDocument.id);\r\n    let attachments = JSON.parse(localStorage.getItem(\"attachments\")) || [];\r\n    attachments.push(attachedDocument);\r\n    localStorage.setItem(\"attachments\", JSON.stringify(attachments));\r\n    this.props.history.push(\"/recommendations/create-new\");\r\n  };\r\n\r\n  render() {\r\n    const documentType = this.props.documentType;\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to=\"/recommendations/create-new\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        {documentType === \"prescription\" && (\r\n          <div>\r\n            <h2>Nowa recepta</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Informacje o leku:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Nazwa, ilość, dawkowanie\"\r\n                  name=\"medicine\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Odpłatność: <input type=\"text\" name=\"payment\" required />\r\n              </label>\r\n              <label>\r\n                Data od dnia: <input type=\"date\" name=\"startDate\" />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"sickleave\" && (\r\n          <div>\r\n            <h2>Nowe zwolnienie lekarskie</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Miejsce pracy: <input type=\"text\" name=\"placeOfWork\" required />\r\n              </label>\r\n              <label>\r\n                od:{\" \"}\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"startDate\"\r\n                  min={threeDaysAgo}\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                do: <input type=\"date\" name=\"endDate\" required />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"referral\" && (\r\n          <div>\r\n            <h2>Nowe skierowanie</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Skierowanie do:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"place\"\r\n                  placeholder=\"poradni specjalistycznej, pracowni diagnostycznej\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Badanie:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"examination\"\r\n                  placeholder=\"konsultacja, badanie USG\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Rozpoznanie: <input type=\"text\" name=\"diagnosis\" required />\r\n              </label>\r\n              <label>\r\n                Cel: <input type=\"text\" name=\"aim\" required />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"lab-order\" && (\r\n          <div>\r\n            <h2>Nowe zlecenie na badanie</h2>\r\n            <form className=\"lab-order-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <div className=\"tests\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"OB\" />\r\n                  OB\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Glukoza\" />\r\n                  Glukoza\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"LDL\" />\r\n                  LDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"HDL\" />\r\n                  HDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TG\" />\r\n                  Trójglicerydy\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Morfologia\" />\r\n                  Morfologia\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Magnez\" />\r\n                  Magnez\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Sód\" />\r\n                  Sód\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Potas\" />\r\n                  Potas\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Żelazo\" />\r\n                  Żelazo\r\n                </label>\r\n              </div>\r\n\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewAttachment;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Recommendations from \"../Recommendations\";\r\nimport MedicalProcess from \"../MedicalProcess\";\r\nimport Documentation from \"../Documentation\";\r\nimport NewDocument from \"./NewDocument\";\r\nimport Document from \"../Document\";\r\nimport Report from \"../Report\";\r\nimport SideBar from \"../SideBar\";\r\nimport \"../../css/PatientDoctorPage.css\";\r\nimport NewRecommendation from \"./NewRecommendation\";\r\nimport NewAttachment from \"./NewAttachment\";\r\n\r\nclass DoctorPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  }\r\n  //MEDICAL PROCESS\r\n  addTask = async e => {\r\n    e.preventDefault();\r\n    const completed = e.target.completed.value === \"done\" ? true : false;\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-task\", {\r\n      method: \"post\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      },\r\n      body: JSON.stringify({\r\n        title: e.target.title.value,\r\n        date: e.target.date.value.split(\"T\").join(\" \"),\r\n        completed,\r\n        details: e.target.details.value\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n\r\n    e.target.title.value = \"\";\r\n    e.target.details.value = \"\";\r\n    e.target.date.value = \"\";\r\n  };\r\n\r\n  setCompleted = e => {\r\n    console.log(e.target.id);\r\n    const id = e.target.id;\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = true;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id })\r\n    });\r\n  };\r\n  //SIDE BAR\r\n  addTaskFromSideBar = e => {\r\n    e.preventDefault();\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-task\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: e.target.title.value,\r\n        date: \"\",\r\n        completed: false,\r\n        details: \"\"\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n\r\n    e.target.title.value = \"\";\r\n  };\r\n\r\n  editTask = async id => {\r\n    await fetch(\"https://medical-documentation.herokuapp.com/edit-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: document.querySelector(\"#title\").value,\r\n        details: document.querySelector(\"#details\").value,\r\n        date: document.querySelector(\"#date\").value,\r\n        id: id\r\n      })\r\n    })\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  };\r\n\r\n  toggleComplete = e => {\r\n    const id = e.target.id;\r\n    let isCompleted = \"\";\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = !task.completed;\r\n          isCompleted = task.completed;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n    //dodanie do bazy\r\n    fetch(\"https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id, completed: isCompleted })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  };\r\n\r\n  searchPatient = async e => {\r\n    e.preventDefault();\r\n    /* e.target.patientID.setCustomValidity(\r\n      \"Wprowadź poprawne 5-cyfrowe ID pacjenta\"\r\n    ); */\r\n    let patientID;\r\n    if (!this.state.patientID) {\r\n      e.preventDefault();\r\n      patientID = e.target.patientID.value;\r\n      await fetch(\r\n        \"https://medical-documentation.herokuapp.com/get-patient-data\",\r\n        {\r\n          method: \"put\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ patientID })\r\n        }\r\n      )\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ patientID: data }));\r\n\r\n      await fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          this.setState({ tasks: data });\r\n        });\r\n    } else {\r\n      this.setState({ patientID: \"\" });\r\n      e.target.patientID.value = \"\";\r\n      fetch(\"https://medical-documentation.herokuapp.com/get-patient-data\", {\r\n        method: \"put\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ patientID: \"\" })\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"ID-form\" onSubmit={this.searchPatient}>\r\n          <label>\r\n            Testowe ID pacjentów: 11111 i 12345\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Wpisz ID pacjenta\"\r\n              name=\"patientID\"\r\n              pattern=\"[0-9]{5}\"\r\n            />\r\n          </label>\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.patientID ? \"Zmień pacienta\" : \"Znajdź pacjenta\"}\r\n          />\r\n        </form>\r\n\r\n        {this.state.patientID && (\r\n          <div>\r\n            <SideBar\r\n              activeAccount=\"doctor\"\r\n              patient={this.state.patientID}\r\n              tasks={this.state.tasks}\r\n              addTask={this.addTaskFromSideBar}\r\n              toggleComplete={this.toggleComplete}\r\n            />\r\n            <HashRouter>\r\n              <nav>\r\n                <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n                  Dokumentacja\r\n                </NavLink>\r\n                <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n                  Zalecenia lekarskie\r\n                </NavLink>\r\n                <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n                  Proces medyczny\r\n                </NavLink>\r\n              </nav>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-prescription\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"prescription\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-sickleave\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"sickleave\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-referral\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"referral\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-lab-order\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"lab-order\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/document:documentId\"\r\n                  component={Document}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new\"\r\n                  component={NewRecommendation}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/create-new\"\r\n                  component={NewDocument}\r\n                />\r\n                <Route exact path=\"/documentation/report\" component={Report} />}\r\n                />\r\n                <Route\r\n                  path=\"/documentation\"\r\n                  render={props => (\r\n                    <Documentation {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/recommendations\"\r\n                  render={props => (\r\n                    <Recommendations {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/medical-process\"\r\n                  render={props => (\r\n                    <MedicalProcess\r\n                      {...props}\r\n                      activeAccount=\"doctor\"\r\n                      tasks={this.state.tasks}\r\n                      addTask={this.addTask}\r\n                      setCompleted={this.setCompleted}\r\n                      editTask={this.editTask}\r\n                    />\r\n                  )}\r\n                />\r\n                <Redirect from=\"/\" to=\"/documentation\" />\r\n              </Switch>\r\n            </HashRouter>\r\n            <div />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoctorPage;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/LabTechnicianPage.css\";\r\nimport { today } from \"../DateParser\";\r\n\r\nclass LabTechnicianPage extends Component {\r\n  state = {\r\n    resultType: \"\",\r\n    results: [],\r\n    parameters: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/lab-data\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ parameters: data }));\r\n  }\r\n\r\n  chooseResultType = e => {\r\n    console.log(e.target.value);\r\n    this.setState({ resultType: e.target.value });\r\n  };\r\n\r\n  addParameter = e => {\r\n    e.preventDefault();\r\n    let name = document.querySelector(\"#parameter\").value;\r\n    let value = document.querySelector(\"#result\").value;\r\n    let range = this.state.parameters.find(parameter => parameter.name === name)\r\n      .range;\r\n    let unit = this.state.parameters.find(parameter => parameter.name === name)\r\n      .unit;\r\n    if (value) {\r\n      const newParameter = {\r\n        name,\r\n        value,\r\n        type: this.state.resultType,\r\n        range,\r\n        unit\r\n      };\r\n      this.setState({ results: [...this.state.results, newParameter] });\r\n      document.querySelector(\"#result\").value = \"\";\r\n    }\r\n  };\r\n\r\n  submitResult = e => {\r\n    e.preventDefault();\r\n    const collectionDate = e.target.collectionDate.value.split(\"T\");\r\n    const title = `Badanie krwi ${collectionDate[0]}`;\r\n    const issueDate = today;\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/lab-result\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        labPatientID: e.target.patientID.value,\r\n        orderingDoctor: e.target.orderingDoctor.value,\r\n        title,\r\n        testDate: collectionDate.join(\" \"),\r\n        issueDate,\r\n\r\n        results: this.state.results\r\n      })\r\n    });\r\n    this.setState({ resultType: \"\", results: [] });\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container lab-container\">\r\n        <h2>Dodaj wynik badania krwi</h2>\r\n        <form className=\"form\" onSubmit={this.submitResult}>\r\n          <label htmlFor=\"patientID\" className=\"mainLabel\">\r\n            ID pacjenta{\" \"}\r\n            <input name=\"patientID\" type=\"text\" required pattern=\"[0-9]{5}\" />\r\n          </label>\r\n          <label htmlFor=\"orderingDoctor\" className=\"mainLabel\">\r\n            Lekarz zlecający{\" \"}\r\n            <input name=\"orderingDoctor\" type=\"text\" required />\r\n          </label>\r\n          <label htmlFor=\"collectionDate\" className=\"mainLabel\">\r\n            Data pobrania <input name=\"collectionDate\" type=\"datetime-local\" />\r\n          </label>\r\n\r\n          <label className=\"mainLabel\">\r\n            Typ badania\r\n            <select\r\n              name=\"result-type\"\r\n              onChange={this.chooseResultType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled={true}>\r\n                Wybierz typ badania\r\n              </option>\r\n              <option value=\"Morfologia\">Morfologia krwi</option>\r\n              <option value=\"Biochemia\">Biochemia krwi</option>\r\n              <option value=\"Immunochemia\">Immunochemia</option>\r\n              <option value=\"OB\">OB</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.resultType && (\r\n            <div>\r\n              <div className=\"inner-form\">\r\n                <label>\r\n                  Wybierz parametr\r\n                  {this.state.resultType === \"Morfologia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      {this.state.parameters\r\n                        .filter(\r\n                          parameter => parameter.testType === \"Morfologia\"\r\n                        )\r\n                        .map((parameter, i) => {\r\n                          return (\r\n                            <option key={i} value={parameter.name}>\r\n                              {parameter.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"Biochemia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      {this.state.parameters\r\n                        .filter(parameter => parameter.testType === \"Biochemia\")\r\n                        .map((parameter, i) => {\r\n                          return (\r\n                            <option key={i} value={parameter.name}>\r\n                              {parameter.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"Immunochemia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      {this.state.parameters\r\n                        .filter(\r\n                          parameter => parameter.testType === \"Immunochemia\"\r\n                        )\r\n                        .map((parameter, i) => {\r\n                          return (\r\n                            <option key={i} value={parameter.name}>\r\n                              {parameter.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"OB\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      <option value=\"OB\">OB</option>\r\n                    </select>\r\n                  )}\r\n                </label>\r\n                <label>\r\n                  Wartość\r\n                  <input type=\"text\" name=\"result\" id=\"result\" />\r\n                </label>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Dodaj parametr\"\r\n                  onClick={this.addParameter}\r\n                />\r\n              </div>\r\n\r\n              {this.state.results.length > 0 && (\r\n                <div className=\"table\">\r\n                  <table border=\"1\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Lp.</th>\r\n                        <th>Parametr</th>\r\n                        <th>Wartość</th>\r\n                        <th>Zakres</th>\r\n                        <th>Jednostka</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {this.state.results.map((item, i) => {\r\n                      return (\r\n                        <tbody key={i}>\r\n                          <tr>\r\n                            <td>{i + 1}</td>\r\n                            <td>{this.state.results[i].name}</td>\r\n                            <td>{this.state.results[i].value}</td>\r\n                            <td>{this.state.results[i].range}</td>\r\n                            <td>{this.state.results[i].unit}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      );\r\n                    })}\r\n                  </table>\r\n                  <input type=\"submit\" value=\"Zapisz i prześlij\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabTechnicianPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PatientPage from \"./Patient-Doctor/PatientPage\";\r\nimport DoctorPage from \"./Patient-Doctor/Doctor/DoctorPage\";\r\nimport LabTechnicianPage from \"./LabTechnician/LabTechnicianPage\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    activeAccount: JSON.parse(localStorage.getItem(\"account\"))\r\n      ? JSON.parse(localStorage.getItem(\"account\"))\r\n      : \"\",\r\n    isLoggedIn: JSON.parse(localStorage.getItem(\"isLoggedIn\")) || \"false\", \r\n    activeUser:  []\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    //because setState is asynchronous\r\n    localStorage.setItem(\"isLoggedIn\", JSON.stringify(this.state.isLoggedIn));\r\n    localStorage.setItem(\"account\", JSON.stringify(this.state.activeAccount));\r\n    \r\n  }\r\n\r\n\r\n  changeAccount = e => {\r\n    this.setState({ activeAccount: e.target.value });\r\n  };\r\n\r\n  logIn = async e => {\r\n    e.preventDefault();\r\n    await fetch(\"https://medical-documentation.herokuapp.com/login\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        login: e.target.login.value,\r\n        password: e.target.password.value\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        if (data === \"FAIL\") {\r\n          document.querySelector(\"#login-info\").innerHTML =\r\n            \"Niepoprawny login i hasło\";\r\n        } else {\r\n          this.setState({\r\n            activeAccount: data.accountType,\r\n            isLoggedIn: \"true\",\r\n            activeUser: data\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  logOut = async () => {\r\n    this.setState({ activeAccount: \"\", isLoggedIn: \"false\" });\r\n    //await localStorage.setItem(\"isLoggedIn\", false);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    let infoText;\r\n    if (localStorage.getItem(\"generatedLogin\")) {\r\n      infoText = `Twój wygenerowany login: ${localStorage.getItem(\r\n        \"generatedLogin\"\r\n      )}`;\r\n      localStorage.removeItem(\"generatedLogin\");\r\n    } else {\r\n      infoText = <br />;\r\n    }\r\n    return (\r\n      <div>\r\n        {this.state.isLoggedIn === \"false\" ? (\r\n          <div className=\"container login-container\">\r\n            <h2>Zaloguj się</h2>\r\n            <p id=\"login-info\">{infoText}</p>\r\n            <form onSubmit={this.logIn}>\r\n              <label htmlFor=\"login\">Użytkownik: </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"login\"\r\n                pattern=\"[PDL]\\d{5}\"\r\n                placeholder=\"np. P12345, D12345, L12345\"\r\n                required\r\n              />\r\n              <label htmlFor=\"password\">Hasło: </label>\r\n              <input type=\"password\" name=\"password\" required />\r\n              <input type=\"submit\" value=\"Zaloguj\" />\r\n            </form>\r\n            <p>Nie masz konta?</p>\r\n            <Link to=\"/register\">\r\n              <button>Zarejestruj się</button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"header\">\r\n            <div className=\"radio-buttons\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Patient\"\r\n                  value=\"patient\"\r\n                  checked={this.state.activeAccount === \"patient\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Pacjent\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Doctor\"\r\n                  value=\"doctor\"\r\n                  checked={this.state.activeAccount === \"doctor\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Lekarz\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Lab\"\r\n                  value=\"lab\"\r\n                  checked={this.state.activeAccount === \"lab\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Laborant\r\n              </label>\r\n            </div>\r\n\r\n            <button className=\"log-out\" onClick={this.logOut}>\r\n              Wyloguj się\r\n            </button>\r\n\r\n            {this.state.activeAccount === \"patient\" ? (\r\n              <PatientPage />\r\n            ) : this.state.activeAccount === \"doctor\" ? (\r\n              <DoctorPage />\r\n            ) : (\r\n              <LabTechnicianPage />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\n\r\nimport Main from \"./Main\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nclass App extends Component {\r\n  async componentWillMount() {\r\n    if (!localStorage.getItem(\"account\")) {\r\n      console.log(\"no account\");\r\n      const text = \"\";\r\n      await localStorage.setItem(\"account\", JSON.stringify(text));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/\" component={Main} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n//basename - because of /dokumenty_cyfrowe_w_medycynie in url (gh-pages)\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}> \r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}