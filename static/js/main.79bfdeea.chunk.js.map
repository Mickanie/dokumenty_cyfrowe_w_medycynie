{"version":3,"sources":["Register.js","Patient-Doctor/Document.js","Patient-Doctor/MedicalProcess.js","Patient-Doctor/Documentation.js","Patient-Doctor/Recommendations.js","Patient-Doctor/SideBar.js","Patient-Doctor/Report.js","Patient-Doctor/PatientPage.js","DateParser.js","Patient-Doctor/Doctor/NewDocument.js","Patient-Doctor/Doctor/NewRecommendation.js","Patient-Doctor/Doctor/NewAttachment.js","Patient-Doctor/Doctor/DoctorPage.js","LabTechnician/LabTechnicianPage.js","Main.js","App.js","index.js"],"names":["Register","state","accountType","generatedLogin","chooseAccountType","e","_this","setState","target","value","goBack","props","history","push","validatePassword","password","document","getElementById","confirmPassword","setCustomValidity","registerUser","_callee","regenerator_default","a","wrap","_context","prev","next","preventDefault","fetch","method","headers","Content-Type","body","JSON","stringify","name","surname","PWZ","specialization","then","result","json","data","login","sessionStorage","setItem","pesel","dob","sex","address","telephone","stop","react_default","createElement","className","onClick","this","onSubmit","onChange","htmlFor","type","required","Fragment","pattern","id","Component","Document","documents","patients","_this2","currentDocument","currentPatient","_this3","length","forEach","_id","match","params","documentId","console","log","react_router_dom","to","style","fontWeight","title","includes","testDate","referralID","orderingDoctor","performingDoctor","describingDoctor","content","issueDate","labTechnician","border","results","map","item","i","key","range","unit","handleClick","filePatient","File","FileSaver","saveAs","fileResults","MedicalProcess","tasks","editMode","view","editTask","changeView","_callee2","_context2","toggleActive","parentElement","classList","toggle","checked","activeAccount","addTask","placeholder","task","filter","completed","defaultValue","setCompleted","details","date","previousTask","color","background","nextTasks","MedicalProcess_Task","Task","nextTaskId","nextTask","Documentation","compare","b","dateA","parseInt","split","join","dateB","filterResults","fromDate","toDate","tag","filtered","tags","documentType","sort","height","textDecoration","concat","Recommendations","recommendations","activeUser","recommendation","doctor","attachedDocuments","attachment","margin","SideBar","patient","editData","querySelector","PESEL","icd10","expandPatientInfo","expandTasks","status","alert","age","dateOfBirth","toggleComplete","disabled","Raport","parameters","chosenParameter","filteredResults","chooseResultType","labResult","some","parameter","find","PatientPage","patientID","isCompleted","response","Patient_Doctor_SideBar","activeClassName","react_router","exact","path","component","render","Patient_Doctor_MedicalProcess","Object","assign","Report","from","transformDate","day","getDate","toString","month","getMonth","year","getYear","today","Date","threeDaysAgo","now","NewDocument","hour","getHours","minutes","getMinutes","transformDateTime","referrals","chooseDocumentType","createDocument","region","referral","textAlign","width","min","max","multiple","NewRecommendation","dataSaved","parse","getItem","attachments","toggleSave","_e$target$parentEleme","submitRecommendation","removeItem","NewAttachment","startDate","submitAttachment","attachedDocument","_e$target","_e$target2","medicine","payment","_e$target3","placeOfWork","endDate","_e$target4","place","examination","diagnosis","aim","checkboxes","labTests","t0","abrupt","toConsumableArray","test","checkbox","setStartDate","DoctorPage","mode","Access-Control-Allow-Origin","addTaskFromSideBar","previousTaskId","_callee3","_context3","searchPatient","_callee4","_context4","Doctor_NewAttachment","Patient_Doctor_Documentation","Patient_Doctor_Recommendations","LabTechnicianPage","resultType","labOrders","addParameter","newParameter","submitResult","collectionDate","labPatientID","labOrder","window","location","reload","choosePatient","testType","Main","isLoggedIn","changeAccount","logIn","innerHTML","logOut","infoText","Patient_Doctor_PatientPage","Doctor_DoctorPage","LabTechnician_LabTechnicianPage","App","ReactDOM","basename","process","src_App"],"mappings":"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","file":"static/js/main.79bfdeea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n/* import { withRouter } from 'react-router-dom'; */\r\n//import { history } from 'react-router-dom';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    accountType: \"patient\",\r\n    generatedLogin: \"\"\r\n  };\r\n\r\n  chooseAccountType = e => {\r\n    this.setState({ accountType: e.target.value });\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  validatePassword = () => {\r\n    let password = document.getElementById(\"password\");\r\n    let confirmPassword = document.getElementById(\"confirm-password\");\r\n\r\n    if (password.value !== confirmPassword.value) {\r\n      confirmPassword.setCustomValidity(\"Hasła nie są jednakowe\");\r\n    } else {\r\n      confirmPassword.setCustomValidity(\"\");\r\n    }\r\n  };\r\n\r\n  registerUser = async e => {\r\n    e.preventDefault();\r\n    if (this.state.accountType === \"doctor\") {\r\n      await fetch(\"https://medical-documentation.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          accountType: this.state.accountType,\r\n          name: e.target.name.value,\r\n          surname: e.target.surname.value,\r\n          PWZ: e.target.PWZ.value,\r\n          specialization: e.target.specialization.value,\r\n          password: e.target.password.value\r\n        })\r\n      })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          this.setState({ generatedLogin: data.login });\r\n        });\r\n      await sessionStorage.setItem(\"generatedLogin\", this.state.generatedLogin);\r\n    } else if (this.state.accountType === \"patient\") {\r\n      await fetch(\"https://medical-documentation.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          accountType: this.state.accountType,\r\n          name: e.target.name.value,\r\n          surname: e.target.surname.value,\r\n          pesel: e.target.pesel.value,\r\n          dob: e.target.dob.value,\r\n          sex: e.target.sex.value,\r\n          address: e.target.address.value,\r\n          telephone: e.target.telephone.value,\r\n          password: e.target.password.value\r\n        })\r\n      })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          this.setState({ generatedLogin: data.login });\r\n        });\r\n      await sessionStorage.setItem(\"generatedLogin\", this.state.generatedLogin);\r\n    } else {\r\n      await fetch(\"https://medical-documentation.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          accountType: this.state.accountType,\r\n          name: e.target.name.value,\r\n          surname: e.target.surname.value,\r\n          password: e.target.password.value\r\n        })\r\n      })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          this.setState({ generatedLogin: data.login });\r\n        });\r\n      await sessionStorage.setItem(\"generatedLogin\", this.state.generatedLogin);\r\n    }\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"register-container\">\r\n        <button className=\"backButton\" onClick={this.goBack}>\r\n          Powrót do logowania\r\n        </button>\r\n        <h2>Zarejestruj się</h2>\r\n\r\n        <form onSubmit={this.registerUser}>\r\n          <span>\r\n            <label>Typ konta: </label>\r\n            <select name=\"accountType\" onChange={this.chooseAccountType}>\r\n              <option value=\"patient\">Pacjent</option>\r\n              <option value=\"doctor\">Lekarz</option>\r\n              <option value=\"lab\">Laborant</option>\r\n            </select>\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"name\">Imię </label>\r\n            <input type=\"text\" name=\"name\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"surname\">Nazwisko </label>\r\n            <input type=\"text\" name=\"surname\" required />\r\n          </span>\r\n\r\n          {this.state.accountType === \"patient\" && (\r\n            <>\r\n              <span>\r\n                <label htmlFor=\"dob\">Data urodzenia </label>\r\n                <input type=\"date\" name=\"dob\" required />\r\n              </span>\r\n              <span>\r\n                <label htmlFor=\"surname\">Adres </label>\r\n                <input type=\"text\" name=\"address\" required />\r\n              </span>\r\n              <span>\r\n                <label htmlFor=\"surname\">Telefon </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"telephone\"\r\n                  required\r\n                  pattern=\"[0-9]{9}\"\r\n                />\r\n              </span>\r\n              <span>\r\n                <label htmlFor=\"pesel\">PESEL </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"pesel\"\r\n                  id=\"pesel\"\r\n                  required\r\n                  pattern=\"[0-9]{11}\"\r\n                />\r\n              </span>\r\n              <span>\r\n                <label htmlFor=\"surname\">Płeć </label>\r\n                <input type=\"text\" name=\"sex\" required />\r\n              </span>\r\n            </>\r\n          )}\r\n\r\n          {this.state.accountType === \"doctor\" && (\r\n            <>\r\n              {\" \"}\r\n              <span>\r\n                <label>Numer PWZ</label>\r\n                <input type=\"text\" name=\"PWZ\" required />\r\n              </span>\r\n              <span>\r\n                <label>Specjalizacja</label>\r\n                <input type=\"text\" name=\"specialization\" required />\r\n              </span>\r\n            </>\r\n          )}\r\n\r\n          <span>\r\n            <label htmlFor=\"password\">Hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"password\"\r\n              //pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"password\">Powtórz hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"confirm-password\"\r\n              //pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n              onChange={this.validatePassword}\r\n            />\r\n          </span>\r\n          <input type=\"submit\" value=\"Zarejestruj się\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Document.css\";\r\nimport FileSaver from \"file-saver\";\r\n\r\nclass Document extends Component {\r\n  state = {\r\n    documents: [],\r\n    patients: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data }));\r\n    await fetch(\"https://medical-documentation.herokuapp.com/patient\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ patients: data }));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.documents.length && this.state.patients) {\r\n      let currentDocument;\r\n      this.state.documents.forEach(document => {\r\n        if (document._id === this.props.match.params.documentId) {\r\n          currentDocument = document;\r\n        }\r\n      });\r\n\r\n      let currentPatient;\r\n      currentPatient = this.state.patients;\r\n      /*this.state.patients.forEach(document => {\r\n\t\t  alert(document.patientID + \" \" + currentDocument.patientID);\r\n        if (document.patientID === currentDocument.patientID) {\r\n          currentPatient = document;\r\n        }\r\n      });*/\r\n\r\n      console.log(currentDocument);\r\n      return (\r\n        <div className=\"container document-container\">\r\n          <Link to=\"/documentation\" className=\"backButton\">\r\n            <button>Powrót</button>\r\n          </Link>\r\n          <p style={{ fontWeight: \"700\" }}>{currentDocument.title}</p>\r\n          {!currentDocument.title.includes(\"Badanie krwi\") && (\r\n            <div className=\"result-info\">\r\n              <p>Data: {currentDocument.testDate}</p>\r\n              <p>ID skierowania: {currentDocument.referralID}</p>\r\n              <p>Lekarz zlecający: {currentDocument.orderingDoctor}</p>\r\n              <p>Lekarz wykonujący: {currentDocument.performingDoctor}</p>\r\n              <p>Lekarz opisujący: {currentDocument.describingDoctor}</p>\r\n              <p>\r\n                <br />\r\n                {currentDocument.content}\r\n              </p>\r\n            </div>\r\n          )}\r\n          {currentDocument.title.includes(\"Badanie krwi\") && (\r\n            <div className=\"table\">\r\n              <div className=\"result-info\">\r\n                <p>Data pobrania: {currentDocument.testDate} </p>\r\n                <p>Data wydania: {currentDocument.issueDate}</p>\r\n                <p>Lekarz zlecający: {currentDocument.orderingDoctor}</p>\r\n                <p>Laborant: {currentDocument.labTechnician}</p>\r\n              </div>\r\n              <table border=\"1\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"mobile-out\">Lp.</th>\r\n                    <th>Parametr</th>\r\n                    <th>Wartość</th>\r\n                    <th>Zakres</th>\r\n                    <th>Jednostka</th>\r\n                  </tr>\r\n                </thead>\r\n                {currentDocument.results.map((item, i) => {\r\n                  return (\r\n                    <tbody key={i}>\r\n                      <tr>\r\n                        <td className=\"mobile-out\">{i + 1}</td>\r\n                        <td>{currentDocument.results[i].name}</td>\r\n                        <td>{currentDocument.results[i].value}</td>\r\n                        <td>{currentDocument.results[i].range}</td>\r\n                        <td>{currentDocument.results[i].unit}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </table>\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            onClick={() => this.handleClick(currentDocument, currentPatient)}\r\n          >\r\n            Zapisz do PDF\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n\r\n  handleClick(currentDocument, currentPatient) {\r\n    //const FileSaver = require('file-saver');\r\n    const filePatient = new File(\r\n      [JSON.stringify(currentPatient)],\r\n      \"patient.json\",\r\n      { type: \"text/plain;charset=utf-8\" }\r\n    );\r\n    FileSaver.saveAs(filePatient);\r\n    const fileResults = new File(\r\n      [JSON.stringify(currentDocument)],\r\n      \"results.json\",\r\n      { type: \"text/plain;charset=utf-8\" }\r\n    );\r\n    FileSaver.saveAs(fileResults);\r\n  }\r\n}\r\n\r\nexport default Document;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/MedicalProcess.css\";\r\nimport \"../css/App.css\";\r\n\r\nclass MedicalProcess extends Component {\r\n  state = {\r\n    tasks: [],\r\n    editMode: \"\",\r\n    view: \"tasks\"\r\n  };\r\n\r\n  editMode = async e => {\r\n    const id = e.target.id;\r\n    if (this.state.editMode !== id) {\r\n      await this.setState({ editMode: id });\r\n    } else {\r\n      //dodanie do bazy\r\n      this.props.editTask(id);\r\n      //usunięcie z tablicy editMode\r\n\r\n      await this.setState({ editMode: \"\" });\r\n    }\r\n  };\r\n\r\n  changeView = async e => {\r\n    console.log(e.target.value);\r\n    this.setState({ view: e.target.value });\r\n  };\r\n\r\n  toggleActive = e => {\r\n    console.log(\"click\");\r\n    e.target.parentElement.classList.toggle(\"active\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container medical-process-container\">\r\n        <div className=\"change-view\">\r\n          <input\r\n            type=\"radio\"\r\n            name=\"view\"\r\n            id=\"tasks\"\r\n            value=\"tasks\"\r\n            checked={this.state.view === \"tasks\"}\r\n            onChange={this.changeView}\r\n          />\r\n          <label className=\"tasks-label\" htmlFor=\"tasks\">\r\n            Widok zadań\r\n          </label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"view\"\r\n            id=\"process\"\r\n            value=\"process\"\r\n            onChange={this.changeView}\r\n          />\r\n          <label className=\"process-label\" htmlFor=\"process\">\r\n            Widok procesu\r\n          </label>\r\n        </div>\r\n        {this.state.view === \"tasks\" && (\r\n          <div className=\"task-view\">\r\n            {this.props.activeAccount === \"doctor\" && (\r\n              <form onSubmit={this.props.addTask}>\r\n                <span>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Tytuł\"\r\n                    name=\"title\"\r\n                    required\r\n                  />\r\n                  <select name=\"completed\">\r\n                    <option value=\"done\">Wykonane</option>\r\n                    <option value=\"todo\">Do zrobienia</option>\r\n                  </select>\r\n                  <textarea placeholder=\"Szczegóły\" name=\"details\" required />\r\n                </span>\r\n                <span>\r\n                  <label>\r\n                    Data:{\" \"}\r\n                    <input\r\n                      type=\"datetime-local\"\r\n                      name=\"date\"\r\n                      placeholder=\"date\"\r\n                    />\r\n                  </label>\r\n\r\n                  <label>\r\n                    Zadanie poprzedzające:\r\n                    <select className=\"previous-task\" name=\"previousTask\">\r\n                      <option value=\"\">Brak</option>\r\n                      {this.props.tasks.map((task, i) => {\r\n                        return (\r\n                          <option key={i} value={task._id}>\r\n                            {task.title}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </label>\r\n                  <input type=\"submit\" value=\"Dodaj zadanie\" />\r\n                </span>\r\n              </form>\r\n            )}\r\n            <div className=\"content\">\r\n              <h3>Do zrobienia</h3>\r\n              <ul>\r\n                {this.props.tasks\r\n                  .filter(task => task.completed === false)\r\n                  .map((task, i) => {\r\n                    return (\r\n                      <li key={i}>\r\n                        <span className=\"task-header\">\r\n                          <strong>\r\n                            {this.state.editMode.includes(task._id) ? (\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                id=\"title\"\r\n                                defaultValue={task.title}\r\n                              />\r\n                            ) : (\r\n                              task.title\r\n                            )}\r\n                          </strong>\r\n                          {this.props.activeAccount === \"doctor\" && (\r\n                            <button\r\n                              className=\"set-done\"\r\n                              id={task._id}\r\n                              onClick={this.props.setCompleted}\r\n                            >\r\n                              ✓\r\n                            </button>\r\n                          )}\r\n\r\n                          <button\r\n                            className=\"edit\"\r\n                            onClick={this.editMode}\r\n                            id={task._id}\r\n                          />\r\n                        </span>\r\n\r\n                        <div className=\"task-info\">\r\n                          {this.state.editMode === task._id ? (\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"details\"\r\n                              id=\"details\"\r\n                              defaultValue={task.details}\r\n                              placeholder=\"Szczegóły\"\r\n                            />\r\n                          ) : (\r\n                            <p>{task.details}</p>\r\n                          )}\r\n\r\n                          {this.state.editMode === task._id ? (\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"date\"\r\n                              id=\"date\"\r\n                              defaultValue={task.date}\r\n                              placeholder=\"Data\"\r\n                            />\r\n                          ) : (\r\n                            <p>{task.date}</p>\r\n                          )}\r\n                        </div>\r\n                        {this.state.editMode === task._id && (\r\n                          <label className=\"previous-task-label\">\r\n                            Zadanie poprzedzające:\r\n                            <select\r\n                              className=\"previous-task\"\r\n                              id=\"previous-task\"\r\n                              defaultValue={task.previousTask}\r\n                            >\r\n                              <option value=\"\">Brak</option>\r\n                              {this.props.tasks.map((task, i) => {\r\n                                return (\r\n                                  <option key={i} value={task._id}>\r\n                                    {task.title}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </label>\r\n                        )}\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n              <hr />\r\n              <h3>Wykonane</h3>\r\n              <ul>\r\n                {this.props.tasks\r\n                  .filter(task => task.completed === true)\r\n                  .map((task, i) => {\r\n                    return (\r\n                      <li key={i}>\r\n                        <span className=\"task-header\">\r\n                          <strong>\r\n                            {this.state.editMode === task._id ? (\r\n                              <input\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                id=\"title\"\r\n                                defaultValue={task.title}\r\n                              />\r\n                            ) : (\r\n                              task.title\r\n                            )}\r\n                          </strong>\r\n                          <button\r\n                            className=\"edit\"\r\n                            onClick={this.editMode}\r\n                            id={task._id}\r\n                          />\r\n                        </span>\r\n\r\n                        <div className=\"task-info\">\r\n                          {this.state.editMode === task._id ? (\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"details\"\r\n                              id=\"details\"\r\n                              defaultValue={task.details}\r\n                              placeholder=\"Szczegóły\"\r\n                            />\r\n                          ) : (\r\n                            <p>{task.details}</p>\r\n                          )}\r\n\r\n                          {this.state.editMode === task._id ? (\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"date\"\r\n                              id=\"date\"\r\n                              defaultValue={task.date}\r\n                              placeholder=\"Data\"\r\n                            />\r\n                          ) : (\r\n                            <p>{task.date}</p>\r\n                          )}\r\n                        </div>\r\n                        {this.state.editMode === task._id && (\r\n                          <label className=\"previous-task-label\">\r\n                            Zadanie poprzedzające:\r\n                            <select\r\n                              className=\"previous-task\"\r\n                              defaultValue={task.previousTask}\r\n                              id=\"previous-task\"\r\n                            >\r\n                              <option value=\"\">Brak</option>\r\n                              {this.props.tasks.map((task, i) => {\r\n                                return (\r\n                                  <option key={i} value={task._id}>\r\n                                    {task.title}\r\n                                  </option>\r\n                                );\r\n                              })}\r\n                            </select>\r\n                          </label>\r\n                        )}\r\n                      </li>\r\n                    );\r\n                  })}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {this.state.view === \"process\" && (\r\n          <div className=\"process-view ul\">\r\n            {this.props.tasks\r\n              .filter(task => task.previousTask === \"\")\r\n              .map((task, i) => {\r\n                const color = task.completed\r\n                  ? \"rgb(218, 203, 169)\"\r\n                  : \"rgb(206, 206, 193)\";\r\n                return (\r\n                  <div className=\"li\" key={i}>\r\n                    <div\r\n                      className=\"process-task li\"\r\n                      style={{ background: color }}\r\n                      onClick={this.toggleActive}\r\n                    >\r\n                      {\" \"}\r\n                      <h4>{task.title}</h4>\r\n                      <p className=\"date-process-task\">{task.date}</p>\r\n                      <p>{task.details}</p>{\" \"}\r\n                    </div>\r\n                    {task.nextTasks.length > 0 && (\r\n                      <Task\r\n                        task={task}\r\n                        tasks={this.props.tasks}\r\n                        toggleActive={this.toggleActive}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicalProcess;\r\n\r\nconst Task = props => {\r\n  console.log(props.tasks);\r\n  return props.task.nextTasks.map((nextTaskId, i) => {\r\n    const nextTask = props.tasks.filter(task => task._id === nextTaskId)[0];\r\n    const color = nextTask.completed\r\n      ? \"rgb(218, 203, 169)\"\r\n      : \"rgb(206, 206, 193)\";\r\n    return (\r\n      <div className=\"next-tasks ul\" key={i}>\r\n        <div\r\n          className=\"process-task li \"\r\n          style={{ background: color }}\r\n          onClick={props.toggleActive}\r\n        >\r\n          {\" \"}\r\n          <h4>{nextTask.title}</h4>\r\n          <p className=\"date-process-task\">{nextTask.date}</p>\r\n          <p>{nextTask.details}</p>{\" \"}\r\n        </div>\r\n        {nextTask.nextTasks.length > 0 && (\r\n          <Task task={nextTask} tasks={props.tasks} toggleActive={props.toggleActive} />\r\n        )}\r\n      </div>\r\n    );\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Documentation.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Documentation extends Component {\r\n  state = {\r\n    documents: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data.sort(this.compare) }));\r\n  }\r\n\r\n  compare = (a, b) => {\r\n    const dateA = parseInt(\r\n      a.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    const dateB = parseInt(\r\n      b.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n\r\n  filterResults = async e => {\r\n    e.preventDefault();\r\n    const fromDate =\r\n      parseInt(e.target.fromDate.value.split(\"-\").join(\"\")) || null;\r\n    const toDate = parseInt(e.target.toDate.value.split(\"-\").join(\"\")) || null;\r\n    const tag = e.target.tags.value;\r\n    await fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data }));\r\n\r\n    console.log(fromDate, toDate);\r\n    const filtered = this.state.documents\r\n      .filter(document => {\r\n        if (tag !== \"all\") {\r\n          return document.documentType === tag;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n      .filter(document => {\r\n        if (fromDate && toDate) {\r\n          return (\r\n            parseInt(\r\n              document.testDate\r\n                .split(\" \")[0]\r\n                .split(\"-\")\r\n                .join(\"\")\r\n            ) >= fromDate &&\r\n            parseInt(\r\n              document.testDate\r\n                .split(\" \")[0]\r\n                .split(\"-\")\r\n                .join(\"\")\r\n            ) <= toDate\r\n          );\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n\r\n    this.setState({ documents: filtered });\r\n  };\r\n\r\n  render() {\r\n    //const height = this.props.activeAccount === \"doctor\" ? \"41vh\" : \"55vh\";\r\n    return (\r\n      <div className=\"container documentation-container\">\r\n        <div className=\"buttons\">\r\n          {this.props.activeAccount === \"doctor\" && (\r\n            <Link to=\"documentation/create-new\">\r\n              <button>Dodaj wynik badania</button>\r\n            </Link>\r\n          )}\r\n          <Link to=\"documentation/report\">\r\n            <button>Wygeneruj raport</button>\r\n          </Link>\r\n        </div>\r\n        <form className=\"filterForm\" onSubmit={this.filterResults}>\r\n          <label>\r\n            Filtruj po tagu:{\" \"}\r\n            <select name=\"tags\">\r\n              <option value=\"all\">Wszystko</option>\r\n              <option value=\"Badanie krwi\">Badanie krwi</option>\r\n              <option value=\"Badanie USG\">Badanie USG</option>\r\n              <option value=\"Badanie EKG\">Badanie EKG</option>\r\n              <option value=\"Echokardiografia\">Echokardiografia</option>\r\n              <option value=\"Tomografia komputerowa\">\r\n                Tomografia komputerowa\r\n              </option>\r\n              <option value=\"Rezonans magnetyczny\">Rezonans magnetyczny</option>\r\n              <option value=\"Angiografia\">Angiografia / Koronarografia</option>\r\n            </select>\r\n          </label>\r\n          <label id=\"dateFilter\">\r\n            <p>Filtruj po dacie: </p>\r\n\r\n            <p>\r\n              {\" \"}\r\n              od\r\n              <input type=\"date\" name=\"fromDate\" /> do\r\n              <input type=\"date\" name=\"toDate\" />\r\n            </p>\r\n          </label>\r\n          <input type=\"submit\" value=\"Filtruj\" />\r\n        </form>\r\n        <div className=\"documents content\" style={{ height: \"41vh\" }}>\r\n          <ul>\r\n            {this.state.documents.map((document, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <Link\r\n                    style={{ fontWeight: \"600\", textDecoration: \"underline\" }}\r\n                    to={`/documentation/document${document._id}`}\r\n                  >\r\n                    {document.title}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Documentation;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Recommendations.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Recommendations extends Component {\r\n  state = {\r\n    recommendations: [],\r\n    activeUser: []\r\n  };\r\n  /*https://medical-documentation.herokuapp.com*/\r\n  componentWillMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/recommendations\")\r\n      .then(result => result.json())\r\n      .then(data =>\r\n        this.setState({ recommendations: data.sort(this.compare) })\r\n      );\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/active-user\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ activeUser: data }));\r\n  }\r\n\r\n  compare = (a, b) => {\r\n    const dateA = parseInt(\r\n      a.date\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    const dateB = parseInt(\r\n      b.date\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n  render() {\r\n    //const height = this.props.activeAccount === \"doctor\" ? \"50vh\" : \"65vh\";\r\n    return (\r\n      <div className=\"container recommendations-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <Link to=\"/recommendations/create-new\">\r\n            <button>Dodaj zalecenie</button>\r\n          </Link>\r\n        )}\r\n\r\n        <div className=\"content\" /*style={{ height: height }}*/>\r\n          {this.state.recommendations.map((recommendation, i) => {\r\n            const color =\r\n              recommendation.doctor === this.state.activeUser.name\r\n                ? \"rgb(138, 159, 138)\"\r\n                : \"grey\";\r\n            return (\r\n              <div\r\n                className=\"recommendation\"\r\n                key={i}\r\n                style={{ background: color }}\r\n              >\r\n                <p>Data: {recommendation.date} </p>\r\n                <p>Lekarz: {recommendation.doctor} </p>\r\n                <p>Treść: {recommendation.content}</p>\r\n                <p>\r\n                  Załączone dokumenty:{\" \"}\r\n                  {recommendation.attachedDocuments.map((attachment, i) => (\r\n                    <Link\r\n                      key={i}\r\n                      style={{\r\n                        margin: \"10px\",\r\n                        color: \"white\",\r\n                        textDecoration: \"underline\"\r\n                      }}\r\n                      to={`/recommendations/attached-document-:${\r\n                        attachment.id\r\n                      }`}\r\n                    >\r\n                      {attachment.title}\r\n                    </Link>\r\n                  ))}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recommendations;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/SideBar.css\";\r\n\r\nclass SideBar extends Component {\r\n  state = {\r\n    patient: [],\r\n    tasks: [],\r\n    editMode: false\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await fetch(\"https://medical-documentation.herokuapp.com/patient\").then(result => {\r\n      if (result.status === 400) {\r\n        alert(\"Nie ma takiego pacjenta\");\r\n      } else {\r\n        result.json().then(data => this.setState({ patient: data }));\r\n      }\r\n    });\r\n  }\r\n\r\n  editData = async e => {\r\n    if (!this.state.editMode) {\r\n      this.setState({ editMode: true });\r\n    } else {\r\n      //sent to db\r\n      await fetch(\r\n        \"https://medical-documentation.herokuapp.com/edit-patient-data\",\r\n        {\r\n          method: \"put\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            name: document.querySelector(\"#name\").value,\r\n            sex: document.querySelector(\"#sex\").value,\r\n            PESEL: document.querySelector(\"#PESEL\").value,\r\n            telephone: document.querySelector(\"#telephone\").value,\r\n            address: document.querySelector(\"#address\").value,\r\n            icd10: document.querySelector(\"#icd10\").value\r\n          })\r\n        }\r\n      )\r\n        .then(result => result.json())\r\n        .then(data => this.setState({ patient: data }));\r\n      this.setState({ editMode: false });\r\n    }\r\n  };\r\n\r\n  expandPatientInfo = e => {\r\n    console.log(\"CLick\");\r\n    document.querySelector(\".mobile-out.patient\").classList.toggle(\"active\");\r\n    e.target.classList.toggle(\"active\");\r\n  };\r\n\r\n  expandTasks = e => {\r\n    document.querySelector(\".mobile-out.tasks\").classList.toggle(\"active\");\r\n    e.target.classList.toggle(\"active\");\r\n  };\r\n\r\n  render() {\r\n    const patient = this.state.patient;\r\n    const name = `${patient.name} ${patient.surname}`;\r\n    return (\r\n      <div className=\"side-bar\">\r\n        <div className=\"patient-info\">\r\n          <p className=\"mobile-info\">Pacjent: {name}</p>\r\n          <h3 className=\"expandable\" onClick={this.expandPatientInfo}>\r\n            Dane osobowe\r\n          </h3>\r\n          <div className=\"mobile-out patient\">\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Imię i nazwisko: </td>\r\n                  <td>\r\n                    {this.state.editMode ? (\r\n                      <input type=\"text\" defaultValue={name} id=\"name\" />\r\n                    ) : (\r\n                      <p>{name}</p>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Płeć: </td>\r\n                  <td>\r\n                    {this.state.editMode ? (\r\n                      <input type=\"text\" defaultValue={patient.sex} id=\"sex\" />\r\n                    ) : (\r\n                      <p>{patient.sex}</p>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Wiek: </td>\r\n                  <td> {patient.age} </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>PESEL: </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    {this.state.editMode ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        defaultValue={patient.PESEL}\r\n                        id=\"PESEL\"\r\n                      />\r\n                    ) : (\r\n                      <p>{patient.PESEL}</p>\r\n                    )}{\" \"}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Data urodzenia: </td>\r\n                  <td> {patient.dateOfBirth} </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Adres: </td>\r\n                  <td>\r\n                    {this.state.editMode ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        defaultValue={patient.address}\r\n                        id=\"address\"\r\n                      />\r\n                    ) : (\r\n                      <p>{patient.address}</p>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Telefon: </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    {this.state.editMode ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        defaultValue={patient.telephone}\r\n                        id=\"telephone\"\r\n                      />\r\n                    ) : (\r\n                      <p>{patient.telephone}</p>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>ICD10: </td>\r\n                  <td>\r\n                    {\" \"}\r\n                    {this.state.editMode ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        defaultValue={patient.icd10}\r\n                        id=\"icd10\"\r\n                      />\r\n                    ) : (\r\n                      <p>{patient.icd10}</p>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            {this.props.activeAccount === \"doctor\" && (\r\n              <button onClick={this.editData}>\r\n                {this.state.editMode ? \"Zapisz\" : \"Edytuj\"}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"todo-list\">\r\n          <h3 className=\"expandable\" onClick={this.expandTasks}>\r\n            Zadania do wykonania\r\n          </h3>\r\n          <div className=\"mobile-out tasks\">\r\n            <ul>\r\n              {this.props.tasks.map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={task.completed}\r\n                      onChange={this.props.toggleComplete}\r\n                      id={task._id}\r\n                      disabled={this.props.activeAccount !== \"doctor\"}\r\n                    />{\" \"}\r\n                    {task.title}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            {this.props.activeAccount === \"doctor\" && (\r\n              <form onSubmit={this.props.addTask}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Wpisz nowe zadanie\"\r\n                  name=\"title\"\r\n                  required\r\n                />\r\n                <input type=\"submit\" value=\"Dodaj\" />\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Report.css\";\r\n\r\nclass Raport extends Component {\r\n  state = {\r\n    parameters: [],\r\n    chosenParameter: \"\",\r\n    documents: [],\r\n    filteredResults: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/lab-data\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ parameters: data }));\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data.sort(this.compare) }));\r\n  }\r\n\r\n  chooseResultType = async e => {\r\n    let filteredResults;\r\n\r\n    filteredResults = this.state.documents\r\n      .filter(document => document.title.includes(\"Badanie krwi\"))\r\n      .filter(labResult =>\r\n        labResult.results.some(result => result.name === e.target.value)\r\n      );\r\n    await this.setState({ chosenParameter: e.target.value, filteredResults });\r\n  };\r\n\r\n  compare = (a, b) => {\r\n    const dateA = parseInt(\r\n      a.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    const dateB = parseInt(\r\n      b.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container \">\r\n        <Link to=\"/documentation\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <h2>Raport z badań laboratoryjnych</h2>\r\n        <div className=\"report-content\">\r\n          <label>\r\n            Wybierz parametr do porównania\r\n            <select\r\n              name=\"parameters\"\r\n              onChange={this.chooseResultType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled={true}>\r\n                Parametr\r\n              </option>\r\n              {this.state.parameters.map((parameter, i) => (\r\n                <option key={i} value={parameter.name}>\r\n                  {parameter.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </label>\r\n          {this.state.filteredResults.length > 0 && (\r\n            <div>\r\n              <p className=\"mobile-info\">\r\n                Zakres:{\" \"}\r\n                {\r\n                  this.state.parameters.find(\r\n                    item => item.name === this.state.chosenParameter\r\n                  ).range\r\n                }{\" \"}\r\n                {\r\n                  this.state.parameters.find(\r\n                    item => item.name === this.state.chosenParameter\r\n                  ).unit\r\n                }\r\n              </p>\r\n              <table border=\"1\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Data</th>\r\n                    <th>Wartość {this.state.chosenParameter}</th>\r\n                    {/*<th>Zakres</th>\r\n                    <th>Jednostka</th>*/}\r\n                    <th>Lekarz zlecający</th>\r\n                    <th>Laborant</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.filteredResults.map((result, i) => {\r\n                    return (\r\n                      <tr key={i}>\r\n                        <td>{result.testDate} </td>\r\n                        <td>\r\n                          {\r\n                            result.results.find(\r\n                              item => item.name === this.state.chosenParameter\r\n                            ).value\r\n                          }\r\n                        </td>\r\n                        {/*<td>{ result.results.find(item => item.name === this.state.chosenParameter).range }</td>\r\n                        <td>{ result.results.find(item => item.name === this.state.chosenParameter).unit }</td>*/}\r\n                        <td>{result.orderingDoctor}</td>\r\n                        <td>{result.labTechnician}</td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n              <button>Zapisz do PDF</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Raport;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Document from \"./Document\";\r\nimport MedicalProcess from \"./MedicalProcess\";\r\nimport Documentation from \"./Documentation\";\r\nimport Recommendations from \"./Recommendations\";\r\nimport SideBar from \"./SideBar\";\r\nimport \"../css/PatientDoctorPage.css\";\r\nimport Report from \"./Report\";\r\n\r\nclass PatientPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data.sort(this.compare)  }));\r\n  }\r\n\r\n  editTask = async id => {\r\n    await fetch(\"https://medical-documentation.herokuapp.com/edit-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: document.querySelector(\"#title\").value,\r\n        details: document.querySelector(\"#details\").value,\r\n        date: document.querySelector(\"#date\").value,\r\n        id: id\r\n      })\r\n    })\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data.sort(this.compare)  }));\r\n  };\r\n\r\n  toggleComplete = e => {\r\n    const id = e.target.id;\r\n    let isCompleted = \"\";\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = !task.completed;\r\n          isCompleted = task.completed;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n    //dodanie do bazy\r\n    fetch(\"https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id, completed: isCompleted })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data.sort(this.compare) }));\r\n  };\r\n\r\n  compare = (a, b) => {\r\n    const dateA =\r\n      parseInt(\r\n        a.date\r\n          .split(\" \")[0]\r\n          .split(\"-\")\r\n          .join(\"\")\r\n      ) || 0;\r\n    const dateB =\r\n      parseInt(\r\n        b.date\r\n          .split(\" \")[0]\r\n          .split(\"-\")\r\n          .join(\"\")\r\n      ) || 0;\r\n    console.log(dateA);\r\n    console.log(dateB);\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SideBar tasks={this.state.tasks} />\r\n\r\n        <HashRouter>\r\n          <nav>\r\n            <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n              Dokumentacja\r\n            </NavLink>\r\n            <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n              Zalecenia\r\n            </NavLink>\r\n            <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n              Proces medyczny\r\n            </NavLink>\r\n          </nav>\r\n          <Switch>\r\n            <Route exact path=\"/documentation\" component={Documentation} />\r\n            <Route exact path=\"/recommendations\" component={Recommendations} />\r\n            <Route\r\n              path=\"/medical-process\"\r\n              render={props => (\r\n                <MedicalProcess\r\n                  {...props}\r\n                  tasks={this.state.tasks}\r\n                  editTask={this.editTask}\r\n                />\r\n              )}\r\n            />\r\n            <Route exact path=\"/documentation/report\" component={Report} />}\r\n            <Route\r\n              exact\r\n              path=\"/documentation/document:documentId\"\r\n              component={Document}\r\n            />\r\n            <Redirect from=\"/\" to=\"/documentation\" />\r\n          </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PatientPage;\r\n","const transformDateTime = date => {\r\n  const day = `${\r\n    date.getDate().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMonth()+1}`;\r\n  const year = date.getYear() - 100;\r\n  const hour = `${\r\n    date.getHours().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getHours()}`;\r\n  const minutes = `${\r\n    date.getMinutes().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMinutes()}`;\r\n\r\n  return `20${year}-${month}-${day} ${hour}:${minutes}`;\r\n};\r\n\r\nconst transformDate = date => {\r\n  const day = `${\r\n    date.getDate().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMonth()+1}`;\r\n  const year = date.getYear() - 100;\r\n  return `20${year}-${month}-${day}`;\r\n};\r\n\r\nconst today = transformDate(new Date());\r\nconst threeDaysAgo = transformDate(new Date(Date.now() - 3 * 24 * 3600 * 1000));\r\nconst dateWithTime = `${threeDaysAgo} 07:00`\r\n\r\nconst now = transformDateTime(new Date());\r\n\r\nexport { today, threeDaysAgo, now, dateWithTime, transformDate, transformDateTime };\r\n","import React, { Component } from \"react\";\r\nimport \"../../css/NewDocument.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\nclass NewDocument extends Component {\r\n  state = {\r\n    documentType: \"\",\r\n    referrals: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/attached-documents\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ referrals: data.filter(document=>document.type===\"skierowanie\") }));\r\n  }\r\n\r\n  chooseDocumentType = e => {\r\n    this.setState({ documentType: e.target.value });\r\n  };\r\n\r\n  createDocument = e => {\r\n    //console.log(e.target);\r\n    e.preventDefault();\r\n    const title = `${this.state.documentType}: ${\r\n      e.target.region ? e.target.region.value : \"\"\r\n    }  ${e.target.testDate.value.split(\"T\")[0]}`;\r\n    //console.log(title);\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-document\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        documentType: this.state.documentType,\r\n        title,\r\n        testDate: e.target.testDate.value.split(\"T\").join(\" \"),\r\n        referralID: e.target.referral.value,\r\n        orderingDoctor: e.target.orderingDoctor.value,\r\n        performingDoctor: e.target.performingDoctor.value,\r\n        content: e.target.content.value\r\n      })\r\n    });\r\n\r\n    this.props.history.push(\"/documentation\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to=\"/documentation\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n\r\n        <h2 style={{ textAlign: \"center\" }}>Nowy dokument</h2>\r\n\r\n        <div className=\"new-document\">\r\n          <label style={{ width: \"70%\", margin: \"auto\" }}>\r\n            Typ dokumentu:\r\n            <select\r\n              name=\"documentType\"\r\n              onChange={this.chooseDocumentType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled>\r\n                Wybierz typ\r\n              </option>\r\n              <option value=\"Badanie USG\">Badanie USG</option>\r\n\r\n              <option value=\"Badanie EKG\">Badanie EKG</option>\r\n              <option value=\"Echokardiografia\">Echokardiografia</option>\r\n              <option value=\"Tomografia komputerowa\">\r\n                Tomografia komputerowa\r\n              </option>\r\n              <option value=\"Rezonans magnetyczny\">Rezonans magnetyczny</option>\r\n              <option value=\"Angiografia\">Angiografia / Koronarografia</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.documentType && (\r\n            <form className=\"document-form\" onSubmit={this.createDocument}>\r\n              {(this.state.documentType === \"Rezonans magnetyczny\" ||\r\n                this.state.documentType === \"Tomografia komputerowa\") && (\r\n                <label>\r\n                  {\" \"}\r\n                  Badany obszar: <input type=\"text\" name=\"region\" required />\r\n                </label>\r\n              )}\r\n\r\n              <label>\r\n                {\" \"}\r\n                Data badania:{\" \"}\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  name=\"testDate\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Skierowanie:{\" \"}\r\n                <select className=\"referrals\" name=\"referral\" defaultValue=\"\">\r\n                  <option value=\"\" disabled>Wybierz skierowanie</option>\r\n                  {this.state.referrals.map((referral, i) => {\r\n                      return (\r\n                        <option key={i} value={referral._id}>\r\n                          {referral.title}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </label>\r\n\r\n              <label>\r\n                {\" \"}\r\n                Lekarz zlecający:{\" \"}\r\n                <input type=\"text\" name=\"orderingDoctor\" required />\r\n              </label>\r\n\r\n              <label>\r\n                {\" \"}\r\n                Lekarz wykonujący:{\" \"}\r\n                <input type=\"text\" name=\"performingDoctor\" required />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Treść: <textarea required name=\"content\" />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Załączniki: <input type=\"file\" multiple=\"multiple\" />\r\n              </label>\r\n\r\n              <input type=\"submit\" value=\"Dodaj dokument\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewDocument;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\nimport \"../../css/NewRecommendation.css\";\r\n\r\nclass NewRecommendation extends Component {\r\n  state = {\r\n    dataSaved: JSON.parse(sessionStorage.getItem(\"saved\")),\r\n    data: JSON.parse(sessionStorage.getItem(\"recommendationData\")) || {},\r\n    attachments: JSON.parse(sessionStorage.getItem(\"attachments\")) || []\r\n  };\r\n\r\n  toggleSave = async e => {\r\n    e.preventDefault();\r\n\r\n    const { date, content } = e.target.parentElement;\r\n    if (!this.state.dataSaved) {\r\n      await this.setState({\r\n        dataSaved: true,\r\n        data: {\r\n          content: content.value,\r\n          date: date.value\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        dataSaved: false,\r\n        data: {\r\n          content: \"\",\r\n          date: \"\"\r\n        }\r\n      });\r\n    }\r\n    await sessionStorage.setItem(\r\n      \"recommendationData\",\r\n      JSON.stringify(this.state.data)\r\n    );\r\n    await sessionStorage.setItem(\"saved\", JSON.stringify(this.state.dataSaved));\r\n  };\r\n\r\n  submitRecommendation = () => {\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-recommendation\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        date: document.getElementById(\"date\").value,\r\n        content: document.getElementById(\"content\").value,\r\n        attachments: this.state.attachments\r\n      })\r\n    });\r\n    sessionStorage.removeItem(\"saved\");\r\n    sessionStorage.removeItem(\"recommendationData\");\r\n    sessionStorage.removeItem(\"attachments\");\r\n    this.props.history.push(\"/recommendations\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container form-container\">\r\n        <Link to=\"/recommendations\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <h2>Nowe zalecenie</h2>\r\n\r\n        <form>\r\n          <label>\r\n            Data:\r\n            <input\r\n              type=\"date\"\r\n              disabled={this.state.dataSaved}\r\n              name=\"date\"\r\n              id=\"date\"\r\n              min={threeDaysAgo}\r\n              max={today}\r\n              defaultValue={this.state.data.date || today}\r\n            />\r\n          </label>\r\n          <label>\r\n            Treść:{\" \"}\r\n            <textarea\r\n              id=\"content\"\r\n              disabled={this.state.dataSaved}\r\n              name=\"content\"\r\n              defaultValue={this.state.data.content || \"\"}\r\n            />\r\n          </label>\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.dataSaved ? \"Edytuj\" : \"Zapisz\"}\r\n            onClick={this.toggleSave}\r\n          />\r\n        </form>\r\n        {this.state.attachments && (\r\n          <p className=\"attachments-info\">\r\n            Załączniki:\r\n            {this.state.attachments.map((attachment, i) => {\r\n              return (\r\n                <Link\r\n                  key={i}\r\n                  className=\"attachments\"\r\n                  to=\"/recommendations/attachments/:document\"\r\n                >\r\n                  {attachment.title}\r\n                </Link>\r\n              );\r\n            })}\r\n          </p>\r\n        )}\r\n        <section className=\"attachments-choice\">\r\n          Wygeneruj załącznik:{\" \"}\r\n          <div className=\"attachment-links\">\r\n            <Link to=\"/recommendations/create-new/generate-prescription\">\r\n              <button className=\"attachment-button\">Recepta</button>\r\n            </Link>\r\n            <Link to=\"/recommendations/create-new/generate-sickleave\">\r\n              <button className=\"attachment-button\">Zwolnienie</button>\r\n            </Link>\r\n            <Link to=\"/recommendations/create-new/generate-referral\">\r\n              <button className=\"attachment-button\">Skierowanie</button>\r\n            </Link>\r\n            <Link to=\"/recommendations/create-new/generate-lab-order\">\r\n              <button className=\"attachment-button\">Zlecenie badania</button>\r\n            </Link>\r\n          </div>\r\n        </section>\r\n        <button className=\"submit-button\" onClick={this.submitRecommendation}>\r\n          Dodaj zalecenie\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewRecommendation;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/NewAttachment.css\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\n\r\nclass NewAttachment extends Component {\r\n  state = {\r\n    startDate: \"\"\r\n  };\r\n\r\n  submitAttachment = async e => {\r\n    e.preventDefault();\r\n\r\n    let attachedDocument = {};\r\n    const { date, startDate } = e.target;\r\n    switch (this.props.documentType) {\r\n      case \"prescription\":\r\n        const { medicine, payment } = e.target;\r\n        attachedDocument = {\r\n          title: `Recepta ${medicine.value}`,\r\n          medicine: medicine.value,\r\n          payment: payment.value,\r\n          issueDate: date.value,\r\n          startDate: startDate.value,\r\n          type: \"recepta\"\r\n        };\r\n        break;\r\n      case \"sickleave\":\r\n        const { placeOfWork, endDate } = e.target;\r\n        attachedDocument = {\r\n          title: `Zwolnienie ${startDate.value}-${endDate.value}`,\r\n          issueDate: date.value,\r\n          placeOfWork: placeOfWork.value,\r\n          startDate: startDate.value,\r\n          endDate: endDate.value,\r\n          type: \"zwolnienie\"\r\n        };\r\n        break;\r\n\r\n      case \"referral\":\r\n        const { place, examination, diagnosis, aim } = e.target;\r\n        attachedDocument = {\r\n          title: `Skierowanie na ${examination.value} ${date.value}`,\r\n          issueDate: date.value,\r\n          place: place.value,\r\n          examination: examination.value,\r\n          diagnosis: diagnosis.value,\r\n          aim: aim.value,\r\n          type: \"skierowanie\"\r\n        };\r\n        break;\r\n      case \"lab-order\":\r\n        const checkboxes = [...e.target.test];\r\n        const labTests = checkboxes\r\n          .filter(checkbox => checkbox.checked === true)\r\n          .map(checkbox => checkbox.value);\r\n\r\n        console.log(labTests);\r\n        attachedDocument = {\r\n          title: `Zlecenie badań laboratoryjnych ${date.value}`,\r\n          date: date.value,\r\n          labTests: labTests,\r\n          type: \"zlecenie badań\"\r\n        };\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    await fetch(\"https://medical-documentation.herokuapp.com/attach-document\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(attachedDocument)\r\n    })\r\n      .then(result => result.json())\r\n      .then(data => (attachedDocument.id = data));\r\n    console.log(attachedDocument.id);\r\n    let attachments = JSON.parse(sessionStorage.getItem(\"attachments\")) || [];\r\n    attachments.push(attachedDocument);\r\n    sessionStorage.setItem(\"attachments\", JSON.stringify(attachments));\r\n    this.props.history.push(\"/recommendations/create-new\");\r\n  };\r\n\r\n  setStartDate = e => {\r\n    this.setState({ startDate: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const documentType = this.props.documentType;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to=\"/recommendations/create-new\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        {documentType === \"prescription\" && (\r\n          <div>\r\n            <h2>Nowa recepta</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Informacje o leku:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Nazwa, ilość, dawkowanie\"\r\n                  name=\"medicine\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Odpłatność: <input type=\"text\" name=\"payment\" required />\r\n              </label>\r\n              <label>\r\n                Data od dnia: <input type=\"date\" name=\"startDate\" />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"sickleave\" && (\r\n          <div>\r\n            <h2>Nowe zwolnienie lekarskie</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Miejsce pracy: <input type=\"text\" name=\"placeOfWork\" required />\r\n              </label>\r\n              <label>\r\n                od:{\" \"}\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"startDate\"\r\n                  min={threeDaysAgo}\r\n                  required\r\n                  id=\"startDate\"\r\n                  onChange={this.setStartDate}\r\n                />\r\n              </label>\r\n              <label>\r\n                do:{\" \"}\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"endDate\"\r\n                  required\r\n                  min={this.state.startDate}\r\n                />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"referral\" && (\r\n          <div>\r\n            <h2>Nowe skierowanie</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Skierowanie do:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"place\"\r\n                  placeholder=\"poradni specjalistycznej, pracowni diagnostycznej\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Badanie:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"examination\"\r\n                  placeholder=\"konsultacja, badanie USG\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Rozpoznanie: <input type=\"text\" name=\"diagnosis\" required />\r\n              </label>\r\n              <label>\r\n                Cel: <input type=\"text\" name=\"aim\" required />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"lab-order\" && (\r\n          <div>\r\n            <h2>Nowe zlecenie na badanie</h2>\r\n            <form className=\"lab-order-form\" onSubmit={this.submitAttachment}>\r\n              <label className=\"date-label\">\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n\r\n              <div className=\"tests\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Morfologia\" />\r\n                  Morfologia\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"LDL\" />\r\n                  LDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"HDL\" />\r\n                  HDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TC\" />\r\n                  TC\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Glukoza\" />\r\n                  Glukoza\r\n                </label>\r\n\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TG\" />\r\n                  Trójglicerydy\r\n                </label>\r\n\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Kwas moczowy\" />\r\n                  Keas moczowy\r\n                </label>\r\n\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TP\" />\r\n                  TP\r\n                </label>\r\n\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TBIL\" />\r\n                  TBIL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Magnez\" />\r\n                  Magnez\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Sód\" />\r\n                  Sód\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Potas\" />\r\n                  Potas\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Żelazo\" />\r\n                  Żelazo\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Wapń\" />\r\n                  Wapń\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"ALAT\" />\r\n                  ALAT\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"ASPAT\" />\r\n                  ASPAT\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TSH\" />\r\n                  TSH\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"FT3\" />\r\n                  FT3\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"FT4\" />\r\n                  FT4\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"OB\" />\r\n                  OB\r\n                </label>\r\n              </div>\r\n\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewAttachment;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Recommendations from \"../Recommendations\";\r\nimport MedicalProcess from \"../MedicalProcess\";\r\nimport Documentation from \"../Documentation\";\r\nimport NewDocument from \"./NewDocument\";\r\nimport Document from \"../Document\";\r\nimport Report from \"../Report\";\r\nimport SideBar from \"../SideBar\";\r\nimport \"../../css/PatientDoctorPage.css\";\r\nimport NewRecommendation from \"./NewRecommendation\";\r\nimport NewAttachment from \"./NewAttachment\";\r\n\r\nclass DoctorPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    tasks: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks:  data.sort(this.compare) }));\r\n  }\r\n  //MEDICAL PROCESS\r\n  addTask = async e => {\r\n    e.preventDefault();\r\n    const completed = e.target.completed.value === \"done\" ? true : false;\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-task\", {\r\n      method: \"post\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\"\r\n      },\r\n      body: JSON.stringify({\r\n        title: e.target.title.value,\r\n        date: e.target.date.value.split(\"T\").join(\" \"),\r\n        completed,\r\n        details: e.target.details.value,\r\n        previousTask: e.target.previousTask.value\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n\r\n    e.target.title.value = \"\";\r\n    e.target.details.value = \"\";\r\n    e.target.date.value = \"\";\r\n  };\r\n\r\n  //SIDE BAR\r\n  addTaskFromSideBar = e => {\r\n    e.preventDefault();\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-task\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: e.target.title.value,\r\n        date: \"\",\r\n        completed: false,\r\n        details: \"\"\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks:  data.sort(this.compare) }));\r\n\r\n    e.target.title.value = \"\";\r\n  };\r\n\r\n  editTask = async id => {\r\n    await fetch(\"https://medical-documentation.herokuapp.com/edit-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: document.querySelector(\"#title\").value,\r\n        details: document.querySelector(\"#details\").value,\r\n        date: document.querySelector(\"#date\").value,\r\n        previousTaskId: document.querySelector(\"#previous-task\").value,\r\n        id: id\r\n      })\r\n    })\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data.sort(this.compare) }));\r\n  };\r\n\r\n  setCompleted = e => {\r\n\r\n    const id = e.target.id;\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = true;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id, completed: true })\r\n    });\r\n  };\r\n\r\n  toggleComplete = async e => {\r\n    const id = e.target.id;\r\n    let isCompleted = \"\";\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = !task.completed;\r\n          isCompleted = task.completed;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n    //dodanie do bazy\r\n    await fetch(\"https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id, completed: isCompleted })\r\n    });\r\n  };\r\n\r\n  searchPatient = async e => {\r\n    e.preventDefault();\r\n    /* e.target.patientID.setCustomValidity(\r\n      \"Wprowadź poprawne 5-cyfrowe ID pacjenta\"\r\n    ); */\r\n    let patientID;\r\n    if (!this.state.patientID) {\r\n      e.preventDefault();\r\n      patientID = e.target.patientID.value;\r\n      e.target.patientID.required = false;\r\n\r\n      await fetch(\r\n        \"https://medical-documentation.herokuapp.com/get-patient-data\",\r\n        {\r\n          method: \"put\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ patientID })\r\n        }\r\n      ).then(result => {\r\n        if (result.status === 400) {\r\n          alert(\"Nie ma takiego pacjenta\");\r\n        } else {\r\n          result.json().then(data => this.setState({ patientID: data }));\r\n        }\r\n      });\r\n\r\n      await fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n        .then(result => result.json())\r\n        .then(data => {\r\n\r\n          this.setState({ tasks: data.sort(this.compare) });\r\n        });\r\n    } else {\r\n      this.setState({ patientID: \"\" });\r\n      e.target.patientID.value = \"\";\r\n      fetch(\"https://medical-documentation.herokuapp.com/get-patient-data\", {\r\n        method: \"put\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ patientID: \"\" })\r\n      });\r\n      e.target.patientID.required = true;\r\n    }\r\n  };\r\n\r\n  compare = (a, b) => {\r\n    const dateA = parseInt(\r\n      a.date\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    ) || 0;\r\n    const dateB = parseInt(\r\n      b.date\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    ) || 0;\r\n\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"ID-form\" onSubmit={this.searchPatient}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Wpisz ID pacjenta\"\r\n            name=\"patientID\"\r\n            pattern=\"[0-9]{5}\"\r\n            required\r\n          />\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.patientID ? \"Zmień pacienta\" : \"Znajdź pacjenta\"}\r\n          />\r\n        </form>\r\n\r\n        {this.state.patientID && (\r\n          <div>\r\n            <SideBar\r\n              activeAccount=\"doctor\"\r\n              patient={this.state.patientID}\r\n              tasks={this.state.tasks}\r\n              addTask={this.addTaskFromSideBar}\r\n              toggleComplete={this.toggleComplete}\r\n            />\r\n            <HashRouter>\r\n              <nav>\r\n                <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n                  Dokumentacja\r\n                </NavLink>\r\n                <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n                  Zalecenia\r\n                </NavLink>\r\n                <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n                  Proces medyczny\r\n                </NavLink>\r\n              </nav>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-prescription\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"prescription\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-sickleave\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"sickleave\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-referral\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"referral\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-lab-order\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"lab-order\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/document:documentId\"\r\n                  component={Document}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new\"\r\n                  component={NewRecommendation}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/create-new\"\r\n                  component={NewDocument}\r\n                />\r\n                <Route exact path=\"/documentation/report\" component={Report} />}\r\n                />\r\n                <Route\r\n                  path=\"/documentation\"\r\n                  render={props => (\r\n                    <Documentation {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/recommendations\"\r\n                  render={props => (\r\n                    <Recommendations {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/medical-process\"\r\n                  render={props => (\r\n                    <MedicalProcess\r\n                      {...props}\r\n                      activeAccount=\"doctor\"\r\n                      tasks={this.state.tasks}\r\n                      addTask={this.addTask}\r\n                      setCompleted={this.setCompleted}\r\n                      editTask={this.editTask}\r\n                    />\r\n                  )}\r\n                />\r\n                <Redirect from=\"/\" to=\"/documentation\" />\r\n              </Switch>\r\n            </HashRouter>\r\n            <div />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoctorPage;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/LabTechnicianPage.css\";\r\nimport { today } from \"../DateParser\";\r\n\r\nclass LabTechnicianPage extends Component {\r\n  state = {\r\n    resultType: \"\",\r\n    results: [],\r\n    parameters: [],\r\n    labOrders: [],\r\n    patientID: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/lab-data\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ parameters: data }));\r\n\r\n    \r\n  }\r\n\r\n  chooseResultType = e => {\r\n    console.log(e.target.value);\r\n    this.setState({ resultType: e.target.value });\r\n  };\r\n\r\n  addParameter = e => {\r\n    e.preventDefault();\r\n    let name = document.querySelector(\"#parameter\").value;\r\n    let value = document.querySelector(\"#result\").value;\r\n    let range = this.state.parameters.find(parameter => parameter.name === name)\r\n      .range;\r\n    let unit = this.state.parameters.find(parameter => parameter.name === name)\r\n      .unit;\r\n    if (value) {\r\n      const newParameter = {\r\n        name,\r\n        value,\r\n        type: this.state.resultType,\r\n        range,\r\n        unit\r\n      };\r\n      this.setState({ results: [...this.state.results, newParameter] });\r\n      document.querySelector(\"#result\").value = \"\";\r\n    }\r\n  };\r\n\r\n  submitResult = e => {\r\n    e.preventDefault();\r\n    const collectionDate = e.target.collectionDate.value.split(\"T\");\r\n    const title = `Badanie krwi ${collectionDate[0]}`;\r\n    const issueDate = today;\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/lab-result\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        labPatientID: e.target.patientID.value,\r\n        labOrder: e.target.labOrder.value,\r\n        orderingDoctor: e.target.orderingDoctor.value,\r\n        title,\r\n        testDate: collectionDate.join(\" \"),\r\n        issueDate,\r\n\r\n        results: this.state.results\r\n      })\r\n    });\r\n    this.setState({ resultType: \"\", results: [] });\r\n    window.location.reload();\r\n  };\r\n\r\n  choosePatient = async e => {\r\n    let patientID = e.target.value;\r\n    if (patientID.match(/[0-9]{5}/)) {\r\n      \r\n\r\n      await fetch(\r\n        \"https://medical-documentation.herokuapp.com/get-patient-data\",\r\n        {\r\n          method: \"put\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ patientID })\r\n        }\r\n      ).then(result => {\r\n        if (result.status === 400) {\r\n          alert(\"Nie ma takiego pacjenta\");\r\n        } else {\r\n          result.json().then(data => this.setState({ patientID: data }));\r\n        }\r\n      });\r\n\r\n      await fetch(\"https://medical-documentation.herokuapp.com/attached-documents\")\r\n      .then(result => result.json())\r\n      .then(data =>\r\n        this.setState({\r\n          labOrders: data.filter(document => document.type === \"zlecenie badań\")\r\n        })\r\n      );\r\n\r\n      \r\n    } else {\r\n      await fetch(\r\n        \"https://medical-documentation.herokuapp.com/get-patient-data\",\r\n        {\r\n          method: \"put\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ patientID: \"\" })\r\n        }\r\n      );\r\n      this.setState({patientID: \"\"});\r\n      \r\n\r\n    }\r\n   \r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container lab-container\">\r\n        <h2>Dodaj wynik badania krwi</h2>\r\n        <form className=\"form\" onSubmit={this.submitResult}>\r\n          <label htmlFor=\"patientID\" className=\"mainLabel\">\r\n            ID pacjenta{\" \"}\r\n            <input name=\"patientID\" type=\"text\" required pattern=\"[0-9]{5}\" onChange={this.choosePatient}/>\r\n          </label>\r\n\r\n          <label className=\"mainLabel\">\r\n            Zlecenie:{\" \"}\r\n            <select className=\"lab-orders\" name=\"labOrder\" defaultValue=\"\" disabled={!this.state.patientID}>\r\n              <option value=\"\" disabled>\r\n                Wybierz zlecenie\r\n              </option>\r\n              {this.state.labOrders.map((labOrder, i) => {\r\n                return (\r\n                  <option key={i} value={labOrder._id}>\r\n                    {labOrder.title}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </label>\r\n          <label htmlFor=\"orderingDoctor\" className=\"mainLabel\">\r\n            Lekarz zlecający{\" \"}\r\n            <input name=\"orderingDoctor\" type=\"text\" required  disabled={!this.state.patientID}/>\r\n          </label>\r\n          <label htmlFor=\"collectionDate\" className=\"mainLabel\">\r\n            Data pobrania <input name=\"collectionDate\" type=\"datetime-local\"  disabled={!this.state.patientID} />\r\n          </label>\r\n\r\n          <label className=\"mainLabel\">\r\n            Typ badania\r\n            <select\r\n             disabled={!this.state.patientID}\r\n              name=\"result-type\"\r\n              onChange={this.chooseResultType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled={true}>\r\n                Wybierz typ badania\r\n              </option>\r\n              <option value=\"Morfologia\">Morfologia krwi</option>\r\n              <option value=\"Biochemia\">Biochemia krwi</option>\r\n              <option value=\"Immunochemia\">Immunochemia</option>\r\n              <option value=\"OB\">OB</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.resultType && (\r\n            <div className=\"result-display\">\r\n              <div className=\"inner-form\">\r\n                <label>\r\n                  Wybierz parametr\r\n                  {this.state.resultType === \"Morfologia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      {this.state.parameters\r\n                        .filter(\r\n                          parameter => parameter.testType === \"Morfologia\"\r\n                        )\r\n                        .map((parameter, i) => {\r\n                          return (\r\n                            <option key={i} value={parameter.name}>\r\n                              {parameter.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"Biochemia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      {this.state.parameters\r\n                        .filter(parameter => parameter.testType === \"Biochemia\")\r\n                        .map((parameter, i) => {\r\n                          return (\r\n                            <option key={i} value={parameter.name}>\r\n                              {parameter.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"Immunochemia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      {this.state.parameters\r\n                        .filter(\r\n                          parameter => parameter.testType === \"Immunochemia\"\r\n                        )\r\n                        .map((parameter, i) => {\r\n                          return (\r\n                            <option key={i} value={parameter.name}>\r\n                              {parameter.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"OB\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      <option value=\"OB\">OB</option>\r\n                    </select>\r\n                  )}\r\n                </label>\r\n                <label>\r\n                  Wartość\r\n                  <input type=\"text\" name=\"result\" id=\"result\" />\r\n                </label>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Dodaj parametr\"\r\n                  onClick={this.addParameter}\r\n                />\r\n              </div>\r\n\r\n              {this.state.results.length > 0 && (\r\n                <div className=\"table\">\r\n                  <table border=\"1\">\r\n                    <thead>\r\n                      <tr>\r\n                        <th className=\"mobile-out\">Lp.</th>\r\n                        <th>Parametr</th>\r\n                        <th>Wartość</th>\r\n                        <th>Zakres</th>\r\n                        <th>Jednostka</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {this.state.results.map((item, i) => {\r\n                      return (\r\n                        <tbody key={i}>\r\n                          <tr>\r\n                            <td className=\"mobile-out\">{i + 1}</td>\r\n                            <td>{this.state.results[i].name}</td>\r\n                            <td>{this.state.results[i].value}</td>\r\n                            <td>{this.state.results[i].range}</td>\r\n                            <td>{this.state.results[i].unit}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      );\r\n                    })}\r\n                  </table>\r\n                  <input type=\"submit\" value=\"Zapisz i prześlij\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n   \r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabTechnicianPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PatientPage from \"./Patient-Doctor/PatientPage\";\r\nimport DoctorPage from \"./Patient-Doctor/Doctor/DoctorPage\";\r\nimport LabTechnicianPage from \"./LabTechnician/LabTechnicianPage\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    activeAccount: JSON.parse(sessionStorage.getItem(\"account\"))\r\n      ? JSON.parse(sessionStorage.getItem(\"account\"))\r\n      : \"\",\r\n    isLoggedIn: JSON.parse(sessionStorage.getItem(\"isLoggedIn\")) || \"false\",\r\n    activeUser: JSON.parse(sessionStorage.getItem(\"user\")) || []\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    //because setState is asynchronous\r\n    sessionStorage.setItem(\"isLoggedIn\", JSON.stringify(this.state.isLoggedIn));\r\n    sessionStorage.setItem(\"account\", JSON.stringify(this.state.activeAccount));\r\n    sessionStorage.setItem(\"user\", JSON.stringify(this.state.activeUser));\r\n  }\r\n\r\n  changeAccount = e => {\r\n    this.setState({ activeAccount: e.target.value });\r\n  };\r\n\r\n  logIn = async e => {\r\n    e.preventDefault();\r\n    await fetch(\"https://medical-documentation.herokuapp.com/login\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        login: e.target.login.value,\r\n        password: e.target.password.value\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        if (data === \"FAIL\") {\r\n          document.querySelector(\"#login-info\").innerHTML =\r\n            \"Niepoprawny login i hasło\";\r\n        } else {\r\n          this.setState({\r\n            activeAccount: data.accountType,\r\n            isLoggedIn: \"true\",\r\n            activeUser: data\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  logOut = async () => {\r\n    this.setState({ activeAccount: \"\", isLoggedIn: \"false\" });\r\n    //await sessionStorage.setItem(\"isLoggedIn\", false);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    let infoText;\r\n    if (sessionStorage.getItem(\"generatedLogin\")) {\r\n      infoText = `Twój wygenerowany login: ${sessionStorage.getItem(\r\n        \"generatedLogin\"\r\n      )}`;\r\n      sessionStorage.removeItem(\"generatedLogin\");\r\n    } else {\r\n      infoText = <br />;\r\n    }\r\n    return (\r\n      <div>\r\n        {this.state.isLoggedIn === \"false\" ? (\r\n          <div className=\"login-container\">\r\n            <h2>Zaloguj się</h2>\r\n            <p id=\"login-info\">{infoText}</p>\r\n            <form onSubmit={this.logIn}>\r\n              <label htmlFor=\"login\">Użytkownik: </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"login\"\r\n                pattern=\"[PDL]\\d{5}\"\r\n                placeholder=\"np. P12345, D12345, L12345\"\r\n                required\r\n              />\r\n              <label htmlFor=\"password\">Hasło: </label>\r\n              <input type=\"password\" name=\"password\" required />\r\n              <input type=\"submit\" value=\"Zaloguj\" />\r\n            </form>\r\n            <p>Nie masz konta?</p>\r\n            <Link to=\"/register\">\r\n              <button>Zarejestruj się</button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <header>\r\n              {/*<div className=\"radio-buttons\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Patient\"\r\n                  value=\"patient\"\r\n                  checked={this.state.activeAccount === \"patient\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Pacjent\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Doctor\"\r\n                  value=\"doctor\"\r\n                  checked={this.state.activeAccount === \"doctor\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Lekarz\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Lab\"\r\n                  value=\"lab\"\r\n                  checked={this.state.activeAccount === \"lab\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Laborant\r\n              </label>\r\n        </div>*/}\r\n              <p className=\"login-info\">\r\n                Zalogowano jako: {this.state.activeUser.name}\r\n              </p>\r\n\r\n              <button className=\"log-out\" onClick={this.logOut}>\r\n                Wyloguj się\r\n              </button>\r\n            </header>\r\n\r\n            {this.state.activeAccount === \"patient\" ? (\r\n              <PatientPage />\r\n            ) : this.state.activeAccount === \"doctor\" ? (\r\n              <DoctorPage />\r\n            ) : (\r\n              <LabTechnicianPage />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\n\r\nimport Main from \"./Main\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nclass App extends Component {\r\n  async componentWillMount() {\r\n    if (!sessionStorage.getItem(\"account\")) {\r\n      console.log(\"no account\");\r\n      const text = \"\";\r\n      await sessionStorage.setItem(\"account\", JSON.stringify(text));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/\" component={Main} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n//basename - because of /dokumenty_cyfrowe_w_medycynie in url (gh-pages)\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}> \r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}