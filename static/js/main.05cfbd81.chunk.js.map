{"version":3,"sources":["Register.js","Patient-Doctor/Document.js","Patient-Doctor/MedicalProcess.js","Patient-Doctor/Documentation.js","Patient-Doctor/Recommendations.js","Patient-Doctor/SideBar.js","Patient-Doctor/PatientPage.js","DateParser.js","Patient-Doctor/Doctor/NewDocument.js","Patient-Doctor/Doctor/NewRecommendation.js","Patient-Doctor/Doctor/NewAttachment.js","Patient-Doctor/Doctor/DoctorPage.js","LabTechnician/LabTechnicianPage.js","Main.js","App.js","index.js"],"names":["Register","state","accountType","generatedLogin","chooseAccountType","e","_this","setState","target","value","goBack","props","history","push","validatePassword","password","document","getElementById","confirmPassword","setCustomValidity","registerUser","_callee","regenerator_default","a","wrap","_context","prev","next","preventDefault","fetch","method","headers","Content-Type","body","JSON","stringify","name","surname","pesel","PWZ","specialization","then","result","json","data","login","localStorage","setItem","dob","sex","address","stop","react_default","createElement","className","onClick","this","onSubmit","onChange","htmlFor","type","required","id","pattern","Fragment","Component","Document","documents","patients","_this2","currentDocument","currentPatient","_this3","length","forEach","_id","match","params","documentId","console","log","react_router_dom","to","style","fontWeight","title","includes","textAlign","width","margin","testDate","orderingDoctor","performingDoctor","describingDoctor","content","issueDate","labTechnician","results","map","item","i","key","range","unit","handleClick","filePatient","File","FileSaver","saveAs","fileResults","MedicalProcess","tasks","activeAccount","addTask","placeholder","filter","task","completed","setCompleted","details","float","date","Documentation","compare","b","dateA","parseInt","split","join","dateB","filterResults","fromDate","toDate","tag","filtered","tags","documentType","sort","height","textDecoration","concat","Recommendations","recommendations","activeUser","recommendation","color","doctor","background","attachedDocuments","attachment","SideBar","patient","age","PESEL","dateOfBirth","telephone","icd10","checked","toggleComplete","disabled","PatientPage","patientID","Patient_Doctor_SideBar","activeClassName","react_router","exact","path","component","render","Patient_Doctor_MedicalProcess","Object","assign","from","transformDate","day","getDate","toString","month","getMonth","year","getYear","today","Date","threeDaysAgo","now","NewDocument","hour","getHours","minutes","getMinutes","transformDateTime","chooseDocumentType","createDocument","region","position","top","left","defaultValue","min","max","multiple","NewRecommendation","dataSaved","parse","getItem","attachments","toggleSave","_e$target$parentEleme","parentElement","submitRecommendation","removeItem","NewAttachment","submitAttachment","attachedDocument","_e$target","startDate","_e$target2","medicine","payment","_e$target3","placeOfWork","endDate","_e$target4","place","examination","diagnosis","aim","checkboxes","labTests","t0","abrupt","toConsumableArray","test","checkbox","DoctorPage","mode","Access-Control-Allow-Origin","response","addTaskFromSideBar","isCompleted","searchPatient","_callee2","_context2","Doctor_NewAttachment","Patient_Doctor_Documentation","Patient_Doctor_Recommendations","LabTechnicianPage","resultType","parameters","chooseResultType","addParameter","querySelector","find","parameter","newParameter","submitResult","collectionDate","labPatientID","window","location","reload","testType","Main","isLoggedIn","changeAccount","logIn","innerHTML","logOut","infoText","Patient_Doctor_PatientPage","Doctor_DoctorPage","LabTechnician_LabTechnicianPage","App","ReactDOM","basename","process","src_App"],"mappings":"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","file":"static/js/main.05cfbd81.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n/* import { withRouter } from 'react-router-dom'; */\r\n//import { history } from 'react-router-dom';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    accountType: \"patient\",\r\n    generatedLogin: \"\"\r\n  };\r\n\r\n  chooseAccountType = e => {\r\n    this.setState({ accountType: e.target.value });\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  validatePassword = () => {\r\n    let password = document.getElementById(\"password\");\r\n    let confirmPassword = document.getElementById(\"confirm-password\");\r\n\r\n    if (password.value !== confirmPassword.value) {\r\n      confirmPassword.setCustomValidity(\"Hasła nie są jednakowe\");\r\n    } else {\r\n      confirmPassword.setCustomValidity(\"\");\r\n    }\r\n  };\r\n\r\n  registerUser = async e => {\r\n    e.preventDefault();\r\n    if (this.state.accountType === \"doctor\") {\r\n      await fetch(\"https://medical-documentation.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          accountType: this.state.accountType,\r\n          name: e.target.name.value,\r\n          surname: e.target.surname.value,\r\n          pesel: e.target.pesel.value,\r\n          PWZ: e.target.PWZ.value,\r\n          specialization: e.target.specialization.value,\r\n          password: e.target.password.value\r\n        })\r\n      })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          this.setState({ generatedLogin: data.login });\r\n        });\r\n      await localStorage.setItem(\"generatedLogin\", this.state.generatedLogin);\r\n    } else {\r\n      await fetch(\"https://medical-documentation.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          accountType: this.state.accountType,\r\n          name: e.target.name.value,\r\n          surname: e.target.surname.value,\r\n          pesel: e.target.pesel.value,\r\n          dob: e.target.dob.value,\r\n          sex: e.target.sex.value,\r\n          address: e.target.address.value,\r\n          password: e.target.password.value\r\n        })\r\n      })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          this.setState({ generatedLogin: data.login });\r\n        });\r\n      await localStorage.setItem(\"generatedLogin\", this.state.generatedLogin);\r\n    }\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container register-container\">\r\n        <h2>Zarejestruj się</h2>\r\n        <button className=\"backButton\" onClick={this.goBack}>\r\n          Powrót do logowania\r\n        </button>\r\n        <form onSubmit={this.registerUser}>\r\n          <span>\r\n            <label>Typ konta: </label>\r\n            <select name=\"accountType\" onChange={this.chooseAccountType}>\r\n              <option value=\"patient\">Pacjent</option>\r\n              <option value=\"doctor\">Lekarz</option>\r\n              <option value=\"lab\">Laborant</option>\r\n            </select>\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"name\">Imię </label>\r\n            <input type=\"text\" name=\"name\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"surname\">Nazwisko </label>\r\n            <input type=\"text\" name=\"surname\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"surname\">Płeć </label>\r\n            <input type=\"text\" name=\"sex\" required />\r\n          </span>\r\n          {this.state.accountType !== \"doctor\" && (\r\n            <span>\r\n              <label htmlFor=\"dob\">Data urodzenia </label>\r\n              <input type=\"date\" name=\"dob\" required />\r\n            </span>\r\n          )}\r\n          <span>\r\n            <label htmlFor=\"pesel\">PESEL </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"pesel\"\r\n              id=\"pesel\"\r\n              required\r\n              pattern=\"[0-9]{11}\"\r\n            />\r\n          </span>\r\n          {this.state.accountType === \"doctor\" && (\r\n            <>\r\n              {\" \"}\r\n              <span>\r\n                <label>Numer PWZ</label>\r\n                <input type=\"text\" name=\"PWZ\" required />\r\n              </span>\r\n              <span>\r\n                <label>Specjalizacja</label>\r\n                <input type=\"text\" name=\"specialization\" required />\r\n              </span>\r\n            </>\r\n          )}\r\n          {this.state.accountType !== \"doctor\" && (\r\n            <span>\r\n              <label htmlFor=\"surname\">Adres </label>\r\n              <input type=\"text\" name=\"address\" required />\r\n            </span>\r\n          )}\r\n          <span>\r\n            <label htmlFor=\"password\">Hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"password\"\r\n              //pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"password\">Powtórz hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"confirm-password\"\r\n              //pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n              onChange={this.validatePassword}\r\n            />\r\n          </span>\r\n          <input type=\"submit\" value=\"Zarejestruj się\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Document.css\";\r\nimport FileSaver from 'file-saver'\r\n\r\nclass Document extends Component {\r\n  state = {\r\n    documents: [],\r\n\tpatients: []\r\n  };\r\n\r\n  async componentDidMount() {\r\n    await fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data }));\r\n\tawait fetch(\"https://medical-documentation.herokuapp.com/patient\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ patients: data }));\r\n  }\r\n\r\n  render() {\r\n\r\n    if (this.state.documents.length && this.state.patients) {\r\n\r\n      let currentDocument;\r\n      this.state.documents.forEach(document => {\r\n        \r\n        if (document._id === this.props.match.params.documentId) {\r\n          currentDocument = document;\r\n        }\r\n      });\r\n\t  \r\n\t  let currentPatient;\r\n\t  currentPatient = this.state.patients;\r\n      /*this.state.patients.forEach(document => {\r\n\t\t  alert(document.patientID + \" \" + currentDocument.patientID);\r\n        if (document.patientID === currentDocument.patientID) {\r\n          currentPatient = document;\r\n        }\r\n      });*/\r\n\r\n      console.log(currentDocument);\r\n      return (\r\n        <div className=\"container document-container\">\r\n          <Link to=\"/documentation\" className=\"backButton\">\r\n            <button>Powrót</button>\r\n          </Link>\r\n          <p style={{ fontWeight: \"700\" }}>{currentDocument.title}</p>\r\n          {!currentDocument.title.includes(\"Badanie krwi\") && (\r\n            <div style={{ textAlign: \"left\", width: \"30%\", margin: \"0 auto\" }}>\r\n              <p>Data: {currentDocument.testDate}</p>\r\n              <p>Lekarz zlecający: {currentDocument.orderingDoctor}</p>\r\n              <p>Lekarz wykonujący: {currentDocument.performingDoctor}</p>\r\n              <p>Lekarz opisujący: {currentDocument.describingDoctor}</p>\r\n              <p>\r\n                <br />\r\n                {currentDocument.content}\r\n              </p>\r\n            </div>\r\n          )}\r\n          {currentDocument.title.includes(\"Badanie krwi\") && (\r\n            <div className=\"table\">\r\n            <div style={{ textAlign: \"left\", width: \"50%\", margin: \"0 auto\" }}>\r\n            <p>Data pobrania: {currentDocument.testDate} </p>\r\n               <p>Data wydania: {currentDocument.issueDate}</p>\r\n              <p>Lekarz zlecający: {currentDocument.orderingDoctor}</p>\r\n              <p>Laborant: {currentDocument.labTechnician}</p>\r\n            </div>\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Lp</th>\r\n                    <th>Parametr</th>\r\n                    <th>Wartość</th>\r\n                    <th>Zakres</th>\r\n                    <th>Jednostka</th>\r\n                  </tr>\r\n                </thead>\r\n                {currentDocument.results.map((item, i) => {\r\n                  return (\r\n                    <tbody key={i}>\r\n                      <tr>\r\n                        <td>{i + 1}</td>\r\n                        <td>{currentDocument.results[i].name}</td>\r\n                        <td>{currentDocument.results[i].value}</td>\r\n                        <td>{currentDocument.results[i].range}</td>\r\n                        <td>{currentDocument.results[i].unit}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </table>\r\n            </div>\r\n          )}\r\n\r\n          <button onClick={() => this.handleClick(currentDocument, currentPatient)}>Zapisz do PDF</button>\r\n\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  handleClick(currentDocument, currentPatient) {\r\n\t//const FileSaver = require('file-saver');\r\n\tconst filePatient = new File([JSON.stringify(currentPatient)], 'patient.json', {type: \"text/plain;charset=utf-8\"});\r\n\tFileSaver.saveAs(filePatient);\r\n\tconst fileResults = new File([JSON.stringify(currentDocument)], 'results.json', {type: \"text/plain;charset=utf-8\"});\r\n\tFileSaver.saveAs(fileResults);\r\n  }\r\n}\r\n\r\nexport default Document;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/MedicalProcess.css\";\r\nimport \"../css/App.css\";\r\n\r\n\r\nclass MedicalProcess extends Component {\r\n  state = {\r\n    tasks: []\r\n  };\r\n  \r\n  render() {\r\n  \r\n    return (\r\n      <div className=\"container medical-process-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <form onSubmit={this.props.addTask}>\r\n            <input type=\"text\" placeholder=\"Tytuł\" name=\"title\" />\r\n            <select name=\"completed\">\r\n              <option value=\"done\">Wykonane</option>\r\n              <option value=\"todo\">Do zrobienia</option>\r\n            </select>\r\n            Data: <input type=\"datetime-local\" name=\"date\" />\r\n            <textarea placeholder=\"Szczegóły\" name=\"details\" />\r\n            <input type=\"submit\" value=\"Dodaj zadanie\" />\r\n          </form>\r\n        )}\r\n        <div className=\"content\">\r\n          <h3>Do zrobienia</h3>\r\n          <ul>\r\n            {this.props.tasks\r\n              .filter(task => task.completed === false)\r\n              .map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <strong>{task.title}</strong>\r\n                    {this.props.activeAccount === \"doctor\" && (\r\n                      <button\r\n                        className=\"set-done\"\r\n                        id={task._id}\r\n                        onClick={this.props.setCompleted}\r\n                      >\r\n                        ✓\r\n                      </button>\r\n                    )}\r\n\r\n                    <button className=\"edit\" id={i}>\r\n                      🖉\r\n                    </button>\r\n\r\n                    <br />\r\n                    {task.details}\r\n                    <span style={{ float: \"right\" }}>{task.date}</span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n          <hr />\r\n          <h3>Wykonane</h3>\r\n          <ul>\r\n            {this.props.tasks\r\n              .filter(task => task.completed === true)\r\n              .map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <strong>{task.title}</strong>\r\n\r\n                    <button className=\"edit\" id={i}>\r\n                      🖉\r\n                    </button>\r\n\r\n                    <br />\r\n                    {task.details}\r\n                    <span style={{ float: \"right\" }}>{task.date}</span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicalProcess;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Documentation.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Documentation extends Component {\r\n  state = {\r\n    documents: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data.sort(this.compare) }));\r\n\r\n    \r\n  }\r\n\r\n  compare = (a, b) => {\r\n    const dateA = parseInt(\r\n      a.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    const dateB = parseInt(\r\n      b.testDate\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n\r\n  filterResults = async e => {\r\n    e.preventDefault();\r\n    const fromDate =\r\n      parseInt(e.target.fromDate.value.split(\"-\").join(\"\")) || null;\r\n    const toDate = parseInt(e.target.toDate.value.split(\"-\").join(\"\")) || null;\r\n    const tag = e.target.tags.value;\r\n    await fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data }));\r\n\r\n    console.log(fromDate, toDate);\r\n    const filtered = this.state.documents\r\n      .filter(document => {\r\n        if (tag !== \"all\") {\r\n          return document.documentType === tag;\r\n        } else {\r\n          return true;\r\n        }\r\n      })\r\n      .filter(document => {\r\n        if (fromDate && toDate) {\r\n          return (\r\n            parseInt(\r\n              document.date\r\n                .split(\" \")[0]\r\n                .split(\"-\")\r\n                .join(\"\")\r\n            ) >= fromDate &&\r\n            parseInt(\r\n              document.date\r\n                .split(\" \")[0]\r\n                .split(\"-\")\r\n                .join(\"\")\r\n            ) <= toDate\r\n          );\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n\r\n    this.setState({ documents: filtered });\r\n  };\r\n\r\n  render() {\r\n\r\n    const height = this.props.activeAccount === \"doctor\" ? \"41vh\" : \"65vh\"\r\n    return (\r\n      <div className=\"container documentation-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <Link to=\"documentation/create-new\">\r\n            <button>Dodaj wynik badania</button>\r\n          </Link>\r\n        )}\r\n        <form className=\"filterForm\" onSubmit={this.filterResults}>\r\n          <label>\r\n            Filtruj po tagu:{\" \"}\r\n            <select name=\"tags\">\r\n              <option value=\"all\">Wszystko</option>\r\n              <option value=\"Badanie krwi\">Badanie krwi</option>\r\n              <option value=\"Badanie USG\">Badanie USG</option>\r\n              <option value=\"Badanie EKG\">Badanie EKG</option>\r\n              <option value=\"Echokardiografia\">Echokardiografia</option>\r\n              <option value=\"Tomografia komputerowa\">\r\n                Tomografia komputerowa\r\n              </option>\r\n              <option value=\"Rezonans magnetyczny\">Rezonans magnetyczny</option>\r\n              <option value=\"Angiografia\">Angiografia / Koronarografia</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Filtruj po dacie: od <input type=\"date\" name=\"fromDate\" /> do{\" \"}\r\n            <input type=\"date\" name=\"toDate\" />\r\n          </label>\r\n          <input type=\"submit\" value=\"Filtruj\" />\r\n        </form>\r\n        <div className=\"documents content\" style={{height: height}}>\r\n          <ul>\r\n            {this.state.documents.map((document, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <Link\r\n                    style={{ fontWeight: \"600\", textDecoration: \"underline\" }}\r\n                    to={`/documentation/document${document._id}`}\r\n                  >\r\n                    {document.title}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Documentation;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Recommendations.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Recommendations extends Component {\r\n  state = {\r\n    recommendations: [],\r\n    activeUser: []\r\n  };\r\n  /*https://medical-documentation.herokuapp.com*/\r\n  componentWillMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/recommendations\")\r\n      .then(result => result.json())\r\n      .then(data =>\r\n        this.setState({ recommendations: data.sort(this.compare) })\r\n      );\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/active-user\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ activeUser: data }));\r\n  }\r\n\r\n  compare = (a, b) => {\r\n    const dateA = parseInt(\r\n      a.date\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    const dateB = parseInt(\r\n      b.date\r\n        .split(\" \")[0]\r\n        .split(\"-\")\r\n        .join(\"\")\r\n    );\r\n    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container recommendations-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <Link to=\"/recommendations/create-new\">\r\n            <button>Dodaj zalecenie</button>\r\n          </Link>\r\n        )}\r\n\r\n        <div className=\"content\">\r\n          {this.state.recommendations.map((recommendation, i) => {\r\n            const color =\r\n              recommendation.doctor === this.state.activeUser.name\r\n                ? \"rgb(138, 159, 138)\"\r\n                : \"grey\";\r\n            return (\r\n              <div\r\n                className=\"recommendation\"\r\n                key={i}\r\n                style={{ background: color }}\r\n              >\r\n                <p>Data: {recommendation.date} </p>\r\n                <p>Lekarz: {recommendation.doctor} </p>\r\n                <p>Treść: {recommendation.content}</p>\r\n                <p>\r\n                  Załączone dokumenty:{\" \"}\r\n                  {recommendation.attachedDocuments.map((attachment, i) => (\r\n                    <Link\r\n                      key={i}\r\n                      style={{\r\n                        margin: \"10px\",\r\n                        color: \"white\",\r\n                        textDecoration: \"underline\"\r\n                      }}\r\n                      to={`/recommendations/attached-document-:${\r\n                        attachment.id\r\n                      }`}\r\n                    >\r\n                      {attachment.title}\r\n                    </Link>\r\n                  ))}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recommendations;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/SideBar.css\";\r\n\r\nclass SideBar extends Component {\r\n  state = {\r\n    patient: [],\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/patient\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ patient: data }));\r\n  }\r\n\r\n  render() {\r\n    const patient = this.state.patient;\r\n    return (\r\n      <div className=\"side-bar\">\r\n        <div className=\"patient-info\">\r\n          <h3>Dane osobowe</h3>\r\n\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Imię i nazwisko: </td>\r\n                <td>\r\n                  {\" \"}\r\n                  {patient.name} {patient.surname}{\" \"}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Płeć: </td>\r\n                <td> {patient.sex} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Wiek: </td>\r\n                <td> {patient.age} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>PESEL: </td>\r\n                <td> {patient.PESEL} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Data urodzenia: </td>\r\n                <td> {patient.dateOfBirth} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Adres: </td>\r\n                <td> {patient.address} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Telefon: </td>\r\n                <td> {patient.telephone} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>ICD10: </td>\r\n                <td> {patient.icd10} </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          {this.props.activeAccount === \"doctor\" && <button>Edytuj</button>}\r\n        </div>\r\n        <div className=\"todo-list\">\r\n          <h3>Zadania do wykonania</h3>\r\n          <ul>\r\n            {this.props.tasks.map((task, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.completed}\r\n                    onChange={this.props.toggleComplete}\r\n                    id={task._id}\r\n                    disabled={this.props.activeAccount !== \"doctor\"}\r\n                  />{\" \"}\r\n                  {task.title}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          {this.props.activeAccount === \"doctor\" && (\r\n            <form onSubmit={this.props.addTask}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Wpisz nowe zadanie\"\r\n                name=\"title\"\r\n              />\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Document from \"./Document\";\r\nimport MedicalProcess from \"./MedicalProcess\";\r\nimport Documentation from \"./Documentation\";\r\nimport Recommendations from \"./Recommendations\";\r\nimport SideBar from \"./SideBar\";\r\nimport \"../css/PatientDoctorPage.css\";\r\n\r\nclass PatientPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SideBar tasks={this.state.tasks} />\r\n\r\n        <HashRouter>\r\n          <nav>\r\n            <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n              Dokumentacja\r\n            </NavLink>\r\n            <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n              Zalecenia lekarskie\r\n            </NavLink>\r\n            <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n              Proces medyczny\r\n            </NavLink>\r\n          </nav>\r\n          <Switch>\r\n            <Route exact path=\"/documentation\" component={Documentation} />\r\n            <Route exact path=\"/recommendations\" component={Recommendations} />\r\n            <Route\r\n              path=\"/medical-process\"\r\n              render={props => (\r\n                <MedicalProcess {...props} tasks={this.state.tasks} />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/documentation/document:documentId\"\r\n              component={Document}\r\n            />\r\n\r\n            <Redirect from=\"/\" to=\"/documentation\" />\r\n          </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PatientPage;\r\n","const transformDateTime = date => {\r\n  const day = `${\r\n    date.getDate().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMonth()+1}`;\r\n  const year = date.getYear() - 100;\r\n  const hour = `${\r\n    date.getHours().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getHours()}`;\r\n  const minutes = `${\r\n    date.getMinutes().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMinutes()}`;\r\n\r\n  return `20${year}-${month}-${day} ${hour}:${minutes}`;\r\n};\r\n\r\nconst transformDate = date => {\r\n  const day = `${\r\n    date.getDate().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMonth()+1}`;\r\n  const year = date.getYear() - 100;\r\n  return `20${year}-${month}-${day}`;\r\n};\r\n\r\n/* const transformFromDB = date => {\r\n  if (date !== null) {\r\n    const dateTime = date.split(\"T\");\r\n    const time = dateTime[1].slice(0, 5);\r\n    return `${dateTime[0]} ${time}`\r\n    \r\n  }\r\n\r\n}; */\r\n\r\n/* const sort = (a, b) => {\r\n  a.date = a.date.split('-').join('');\r\n  b.date = b.date.split('-').join('');\r\n  return a.date > b.date ? 1 : a.date < b.date ? -1 : 0;\r\n}\r\n */\r\nconst today = transformDate(new Date());\r\nconst threeDaysAgo = transformDate(new Date(Date.now() - 3 * 24 * 3600 * 1000));\r\nconst now = transformDateTime(new Date());\r\n\r\nexport { today, threeDaysAgo, now, transformDate, transformDateTime };\r\n","import React, { Component } from \"react\";\r\nimport \"../../css/NewDocument.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\nclass NewDocument extends Component {\r\n  state = {\r\n    documentType: \"\"\r\n  };\r\n\r\n  chooseDocumentType = e => {\r\n    this.setState({ documentType: e.target.value });\r\n  };\r\n\r\n  createDocument = e => {\r\n    //console.log(e.target);\r\n    e.preventDefault();\r\n    const title = `${this.state.documentType}: ${\r\n      e.target.region ? e.target.region.value : \"\"\r\n    }  ${e.target.testDate.value.split(\"T\")[0]}`;\r\n    //console.log(title);\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-document\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        documentType: this.state.documentType,\r\n        title,\r\n        testDate: e.target.testDate.value.split(\"T\").join(\" \"),\r\n\r\n        orderingDoctor: e.target.orderingDoctor.value,\r\n        performingDoctor: e.target.performingDoctor.value,\r\n        content: e.target.content.value\r\n      })\r\n    });\r\n\r\n    this.props.history.push(\"/documentation\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Link\r\n          to=\"/documentation\"\r\n          className=\"backButton\"\r\n          style={{ position: \"absolute\", top: \"2%\", left: \"30px\" }}\r\n        >\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <div className=\"new-document\">\r\n          <h2 style={{ textAlign: \"center\" }}>Nowy dokument</h2>\r\n          <label style={{ width: \"70%\", margin: \"auto\" }}>\r\n            Typ dokumentu:\r\n            <select\r\n              name=\"documentType\"\r\n              onChange={this.chooseDocumentType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled>\r\n                Wybierz typ\r\n              </option>\r\n              <option value=\"Badanie USG\">Badanie USG</option>\r\n\r\n              <option value=\"Badanie EKG\">Badanie EKG</option>\r\n              <option value=\"Echokardiografia\">Echokardiografia</option>\r\n              <option value=\"Tomografia komputerowa\">\r\n                Tomografia komputerowa\r\n              </option>\r\n              <option value=\"Rezonans magnetyczny\">Rezonans magnetyczny</option>\r\n              <option value=\"Angiografia\">Angiografia / Koronarografia</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.documentType && (\r\n            <form className=\"document-form\" onSubmit={this.createDocument}>\r\n              {(this.state.documentType === \"Rezonans magnetyczny\" ||\r\n                this.state.documentType === \"Tomografia komputerowa\") && (\r\n                <label>\r\n                  {\" \"}\r\n                  Badany obszar: <input type=\"text\" name=\"region\" required />\r\n                </label>\r\n              )}\r\n\r\n              <label>\r\n                {\" \"}\r\n                Data badania:{\" \"}\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  name=\"testDate\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                  required\r\n                />\r\n              </label>\r\n\r\n              <label>\r\n                {\" \"}\r\n                Lekarz zlecający:{\" \"}\r\n                <input type=\"text\" name=\"orderingDoctor\" required />\r\n              </label>\r\n\r\n              <label>\r\n                {\" \"}\r\n                Lekarz wykonujący:{\" \"}\r\n                <input type=\"text\" name=\"performingDoctor\" required />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Treść: <textarea required name=\"content\" />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Załączniki: <input type=\"file\" multiple=\"multiple\" />\r\n              </label>\r\n\r\n              <input type=\"submit\" value=\"Dodaj dokument\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewDocument;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\nimport \"../../css/NewRecommendation.css\";\r\n\r\nclass NewRecommendation extends Component {\r\n  state = {\r\n    dataSaved: JSON.parse(localStorage.getItem(\"saved\")),\r\n    data: JSON.parse(localStorage.getItem(\"recommendationData\")) || {},\r\n    attachments: JSON.parse(localStorage.getItem(\"attachments\")) || []\r\n  };\r\n\r\n  toggleSave = async e => {\r\n    e.preventDefault();\r\n\r\n    const { date, content } = e.target.parentElement;\r\n    if (!this.state.dataSaved) {\r\n      await this.setState({\r\n        dataSaved: true,\r\n        data: {\r\n          content: content.value,\r\n          date: date.value\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        dataSaved: false,\r\n        data: {\r\n          content: \"\",\r\n          date: \"\"\r\n        }\r\n      });\r\n    }\r\n    await localStorage.setItem(\r\n      \"recommendationData\",\r\n      JSON.stringify(this.state.data)\r\n    );\r\n    await localStorage.setItem(\"saved\", JSON.stringify(this.state.dataSaved));\r\n  };\r\n\r\n  submitRecommendation = () => {\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-recommendation\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        date: document.getElementById(\"date\").value,\r\n        content: document.getElementById(\"content\").value,\r\n        attachments: this.state.attachments\r\n      })\r\n    });\r\n    localStorage.removeItem(\"saved\");\r\n    localStorage.removeItem(\"recommendationData\");\r\n    localStorage.removeItem(\"attachments\");\r\n    this.props.history.push(\"/recommendations\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container form-container\">\r\n        <h2>Nowe zalecenie</h2>\r\n        <Link to=\"/recommendations\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <form>\r\n          <label>\r\n            Data:\r\n            <input\r\n              type=\"date\"\r\n              disabled={this.state.dataSaved}\r\n              name=\"date\"\r\n              id=\"date\"\r\n              min={threeDaysAgo}\r\n              max={today}\r\n              defaultValue={this.state.data.date || today}\r\n            />\r\n          </label>\r\n          <label>\r\n            Treść:{\" \"}\r\n            <textarea\r\n              id=\"content\"\r\n              disabled={this.state.dataSaved}\r\n              name=\"content\"\r\n              defaultValue={this.state.data.content || \"\"}\r\n            />\r\n          </label>\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.dataSaved ? \"Edytuj\" : \"Zapisz\"}\r\n            onClick={this.toggleSave}\r\n          />\r\n        </form>\r\n        {this.state.attachments && (\r\n          <p className=\"attachments-info\">\r\n            Załączniki:\r\n            {this.state.attachments.map((attachment, i) => {\r\n              return (\r\n                <Link\r\n                  key={i}\r\n                  className=\"attachments\"\r\n                  to=\"/recommendations/attachments/:document\"\r\n                >\r\n                  {attachment.title}\r\n                </Link>\r\n              );\r\n            })}\r\n          </p>\r\n        )}\r\n        <p>\r\n          Wygeneruj załącznik:{\" \"}\r\n          <Link to=\"/recommendations/create-new/generate-prescription\">\r\n            <button className=\"attachment-button\">Recepta</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-sickleave\">\r\n            <button className=\"attachment-button\">Zwolnienie</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-referral\">\r\n            <button className=\"attachment-button\">Skierowanie</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-lab-order\">\r\n            <button className=\"attachment-button\">Zlecenie badania</button>\r\n          </Link>\r\n        </p>\r\n        <button className=\"submit-button\" onClick={this.submitRecommendation}>\r\n          Dodaj zalecenie\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewRecommendation;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/NewAttachment.css\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\n\r\nclass NewAttachment extends Component {\r\n  submitAttachment = async e => {\r\n    e.preventDefault();\r\n\r\n    let attachedDocument = {};\r\n    const { date, startDate } = e.target;\r\n    switch (this.props.documentType) {\r\n      case \"prescription\":\r\n        const { medicine, payment } = e.target;\r\n        attachedDocument = {\r\n          title: `Recepta ${medicine.value}`,\r\n          medicine: medicine.value,\r\n          payment: payment.value,\r\n          issueDate: date.value,\r\n          startDate: startDate.value,\r\n          type: \"recepta\",\r\n\r\n        };\r\n        break;\r\n      case \"sickleave\":\r\n        const { placeOfWork, endDate } = e.target;\r\n        attachedDocument = {\r\n          title: `Zwolnienie ${startDate.value}-${endDate.value}`,\r\n          issueDate: date.value,\r\n          placeOfWork: placeOfWork.value,\r\n          startDate: startDate.value,\r\n          endDate: endDate.value,\r\n          type: \"zwolnienie\",\r\n\r\n        };\r\n        break;\r\n\r\n      case \"referral\":\r\n        const { place, examination, diagnosis, aim } = e.target;\r\n        attachedDocument = {\r\n          title: `Skierowanie do ${place.value}`,\r\n          issueDate: date.value,\r\n          place: place.value,\r\n          examination: examination.value,\r\n          diagnosis: diagnosis.value,\r\n          aim: aim.value,\r\n          type: \"skierowanie\",\r\n\r\n        };\r\n        break;\r\n      case \"lab-order\":\r\n        const checkboxes = [...e.target.test];\r\n        const labTests = checkboxes\r\n          .filter(checkbox => checkbox.checked === true)\r\n          .map(checkbox => checkbox.value);\r\n\r\n        console.log(labTests);\r\n        attachedDocument = {\r\n          title: `Zlecenie badań laboratoryjnych ${date.value}`,\r\n          labTests: labTests,\r\n          type: \"zlecenie badań\",\r\n\r\n          };\r\n         break;\r\n        default:\r\n        return;\r\n    }\r\n\r\n    await fetch(\"https://medical-documentation.herokuapp.com/attach-document\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(attachedDocument)\r\n    })\r\n     .then(result => result.json())\r\n      .then(data => attachedDocument.id = data);\r\n    console.log(attachedDocument.id);\r\n    let attachments = JSON.parse(localStorage.getItem(\"attachments\")) || [];\r\n    attachments.push(attachedDocument);\r\n    localStorage.setItem(\"attachments\", JSON.stringify(attachments));\r\n    this.props.history.push(\"/recommendations/create-new\");\r\n  };\r\n\r\n  render() {\r\n    const documentType = this.props.documentType;\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to=\"/recommendations/create-new\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        {documentType === \"prescription\" && (\r\n          <div>\r\n            <h2>Nowa recepta</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Informacje o leku:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Nazwa, ilość, dawkowanie\"\r\n                  name=\"medicine\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Odpłatność: <input type=\"text\" name=\"payment\" required />\r\n              </label>\r\n              <label>\r\n                Data od dnia: <input type=\"date\" name=\"startDate\" />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"sickleave\" && (\r\n          <div>\r\n            <h2>Nowe zwolnienie lekarskie</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Miejsce pracy: <input type=\"text\" name=\"placeOfWork\" required />\r\n              </label>\r\n              <label>\r\n                od:{\" \"}\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"startDate\"\r\n                  min={threeDaysAgo}\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                do: <input type=\"date\" name=\"endDate\" required />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"referral\" && (\r\n          <div>\r\n            <h2>Nowe skierowanie</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Skierowanie do:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"place\"\r\n                  placeholder=\"poradni specjalistycznej, pracowni diagnostycznej\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Badanie:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"examination\"\r\n                  placeholder=\"konsultacja, badanie USG\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Rozpoznanie: <input type=\"text\" name=\"diagnosis\" required />\r\n              </label>\r\n              <label>\r\n                Cel: <input type=\"text\" name=\"aim\" required />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"lab-order\" && (\r\n          <div>\r\n            <h2>Nowe zlecenie na badanie</h2>\r\n            <form className=\"lab-order-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <div className=\"tests\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"OB\" />\r\n                  OB\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Glukoza\" />\r\n                  Glukoza\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"LDL\" />\r\n                  LDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"HDL\" />\r\n                  HDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TG\" />\r\n                  Trójglicerydy\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Morfologia\" />\r\n                  Morfologia\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Magnez\" />\r\n                  Magnez\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Sód\" />\r\n                  Sód\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Potas\" />\r\n                  Potas\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Żelazo\" />\r\n                  Żelazo\r\n                </label>\r\n              </div>\r\n\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewAttachment;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Recommendations from \"../Recommendations\";\r\nimport MedicalProcess from \"../MedicalProcess\";\r\nimport Documentation from \"../Documentation\";\r\nimport NewDocument from \"./NewDocument\";\r\nimport Document from \"../Document\";\r\n\r\nimport SideBar from \"../SideBar\";\r\nimport \"../../css/PatientDoctorPage.css\";\r\nimport NewRecommendation from \"./NewRecommendation\";\r\nimport NewAttachment from \"./NewAttachment\";\r\n\r\nclass DoctorPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  }\r\n  //MEDICAL PROCESS\r\n  addTask = async e => {\r\n    e.preventDefault();\r\n    const completed = e.target.completed.value === \"done\" ? true : false;\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-task\", {\r\n      method: \"post\",\r\n      mode: 'cors',\r\n      headers: { \"Content-Type\": \"application/json\", 'Access-Control-Allow-Origin':'*' },\r\n      body: JSON.stringify({\r\n        title: e.target.title.value,\r\n        date: e.target.date.value.split(\"T\").join(\" \"),\r\n        completed,\r\n        details: e.target.details.value\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n\r\n    e.target.title.value = \"\";\r\n    e.target.details.value = \"\";\r\n    e.target.date.value = \"\";\r\n  };\r\n\r\n  setCompleted = e => {\r\n    console.log(e.target.id);\r\n    const id = e.target.id;\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = true;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id })\r\n    });\r\n  };\r\n  //SIDE BAR\r\n  addTaskFromSideBar = e => {\r\n    e.preventDefault();\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-task\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: e.target.title.value,\r\n        date: \"\",\r\n        completed: false,\r\n        details: \"\"\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n\r\n    e.target.title.value = \"\";\r\n  };\r\n\r\n  toggleComplete = e => {\r\n    const id = e.target.id;\r\n    let isCompleted = \"\";\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = !task.completed;\r\n          isCompleted = task.completed;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n    //add to db\r\n    fetch(\"https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id, completed: isCompleted })\r\n    });\r\n  };\r\n\r\n  searchPatient = async e => {\r\n    e.preventDefault();\r\n    /* e.target.patientID.setCustomValidity(\r\n      \"Wprowadź poprawne 5-cyfrowe ID pacjenta\"\r\n    ); */\r\n    let patientID;\r\n    if (!this.state.patientID) {\r\n      e.preventDefault();\r\n      patientID = e.target.patientID.value;\r\n      await fetch(\r\n        \"https://medical-documentation.herokuapp.com/get-patient-data\",\r\n        {\r\n          method: \"put\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ patientID })\r\n        }\r\n      )\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ patientID: data }));\r\n\r\n      await fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          console.log(data);\r\n          this.setState({ tasks: data });\r\n        });\r\n    } else {\r\n      this.setState({ patientID: \"\" });\r\n      e.target.patientID.value = \"\";\r\n      fetch(\"https://medical-documentation.herokuapp.com/get-patient-data\", {\r\n        method: \"put\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ patientID: \"\" })\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"ID-form\" onSubmit={this.searchPatient}>\r\n        <label>Testowe ID pacjentów: 11111 i 12345\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Wpisz ID pacjenta\"\r\n            name=\"patientID\"\r\n            pattern=\"[0-9]{5}\"\r\n          /></label>\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.patientID ? \"Zmień pacienta\" : \"Znajdź pacjenta\"}\r\n          />\r\n        </form>\r\n\r\n        {this.state.patientID && (\r\n          <div>\r\n            <SideBar\r\n              activeAccount=\"doctor\"\r\n              patient={this.state.patientID}\r\n              tasks={this.state.tasks}\r\n              addTask={this.addTaskFromSideBar}\r\n              toggleComplete={this.toggleComplete}\r\n            />\r\n            <HashRouter>\r\n              <nav>\r\n                <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n                  Dokumentacja\r\n                </NavLink>\r\n                <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n                  Zalecenia lekarskie\r\n                </NavLink>\r\n                <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n                  Proces medyczny\r\n                </NavLink>\r\n              </nav>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-prescription\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"prescription\" />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-sickleave\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"sickleave\" />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-referral\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"referral\" />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-lab-order\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"lab-order\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/document:documentId\"\r\n                  component={Document}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new\"\r\n                  component={NewRecommendation}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/create-new\"\r\n                  component={NewDocument}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/documentation\"\r\n                  render={props => (\r\n                    <Documentation {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/recommendations\"\r\n                  render={props => (\r\n                    <Recommendations {...props} activeAccount=\"doctor\"/>\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/medical-process\"\r\n                  render={props => (\r\n                    <MedicalProcess\r\n                      {...props}\r\n                      activeAccount=\"doctor\"\r\n                      tasks={this.state.tasks}\r\n                      addTask={this.addTask}\r\n                      setCompleted={this.setCompleted}\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                <Redirect from=\"/\" to=\"/documentation\" />\r\n              </Switch>\r\n            </HashRouter>\r\n            <div />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoctorPage;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/LabTechnicianPage.css\";\r\nimport { today } from \"../DateParser\";\r\n\r\nclass LabTechnicianPage extends Component {\r\n  state = {\r\n    resultType: \"\",\r\n    results: [],\r\n    parameters: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/lab-data\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ parameters: data }));\r\n  }\r\n\r\n  chooseResultType = e => {\r\n    console.log(e.target.value);\r\n    this.setState({ resultType: e.target.value });\r\n  };\r\n\r\n  addParameter = e => {\r\n    e.preventDefault();\r\n    let name = document.querySelector(\"#parameter\").value;\r\n    let value = document.querySelector(\"#result\").value;\r\n    let range = this.state.parameters.find(parameter => parameter.name === name).range;\r\n    let unit = this.state.parameters.find(parameter => parameter.name === name).unit;\r\n    if (value) {\r\n      const newParameter = {\r\n        name,\r\n        value,\r\n        type: this.state.resultType,\r\n        range,\r\n        unit\r\n      };\r\n      this.setState({ results: [...this.state.results, newParameter] });\r\n      document.querySelector(\"#result\").value = \"\";\r\n    }\r\n  };\r\n\r\n  submitResult = e => {\r\n    e.preventDefault();\r\n    const collectionDate = e.target.collectionDate.value.split(\"T\");\r\n    const title = `Badanie krwi ${collectionDate[0]}`;\r\n    const issueDate = today;\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/lab-result\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        labPatientID: e.target.patientID.value,\r\n        orderingDoctor: e.target.orderingDoctor.value,\r\n        title,\r\n        testDate: collectionDate.join(\" \"),\r\n        issueDate,\r\n\r\n        results: this.state.results\r\n      })\r\n    });\r\n    this.setState({ resultType: \"\", results: [] });\r\n    window.location.reload();\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div className=\"container lab-container\">\r\n        <h2>Dodaj wynik badania krwi</h2>\r\n        <form className=\"form\" onSubmit={this.submitResult}>\r\n          <label htmlFor=\"patientID\" className=\"mainLabel\">\r\n            ID pacjenta{\" \"}\r\n            <input name=\"patientID\" type=\"text\" required pattern=\"[0-9]{5}\" />\r\n          </label>\r\n          <label htmlFor=\"orderingDoctor\" className=\"mainLabel\">\r\n            Lekarz zlecający{\" \"}\r\n            <input name=\"orderingDoctor\" type=\"text\" required />\r\n          </label>\r\n          <label htmlFor=\"collectionDate\" className=\"mainLabel\">\r\n            Data pobrania <input name=\"collectionDate\" type=\"datetime-local\" />\r\n          </label>\r\n\r\n          <label className=\"mainLabel\">\r\n            Typ badania\r\n            <select\r\n              name=\"result-type\"\r\n              onChange={this.chooseResultType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled={true}>\r\n                Wybierz typ badania\r\n              </option>\r\n              <option value=\"Morfologia\">Morfologia krwi</option>\r\n              <option value=\"Biochemia\">Biochemia krwi</option>\r\n              <option value=\"Immunochemia\">Immunochemia</option>\r\n              <option value=\"OB\">OB</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.resultType && (\r\n            <div>\r\n              <div className=\"inner-form\">\r\n                <label>\r\n                  Wybierz parametr\r\n                  {this.state.resultType === \"Morfologia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      {this.state.parameters\r\n                        .filter(\r\n                          parameter => parameter.testType === \"Morfologia\"\r\n                        )\r\n                        .map((parameter, i) => {\r\n                          return (\r\n                            <option key={i} value={parameter.name}>\r\n                              {parameter.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"Biochemia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      {this.state.parameters\r\n                        .filter(parameter => parameter.testType === \"Biochemia\")\r\n                        .map((parameter, i) => {\r\n                          return (\r\n                            <option key={i} value={parameter.name}>\r\n                              {parameter.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"Immunochemia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      {this.state.parameters\r\n                        .filter(\r\n                          parameter => parameter.testType === \"Immunochemia\"\r\n                        )\r\n                        .map((parameter, i) => {\r\n                          return (\r\n                            <option key={i} value={parameter.name}>\r\n                              {parameter.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"OB\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      <option value=\"OB\">OB</option>\r\n                    </select>\r\n                  )}\r\n                </label>\r\n                <label>\r\n                  Wartość\r\n                  <input type=\"text\" name=\"result\" id=\"result\" />\r\n                </label>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Dodaj parametr\"\r\n                  onClick={this.addParameter}\r\n                />\r\n              </div>\r\n\r\n              {this.state.results.length > 0 && (\r\n                <div className=\"table\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Lp</th>\r\n                        <th>Parametr</th>\r\n                        <th>Wartość</th>\r\n                        <th>Zakres</th>\r\n                        <th>Jednostka</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {this.state.results.map((item, i) => {\r\n                      return (\r\n                        <tbody key={i}>\r\n                          <tr>\r\n                            <td>{i + 1}</td>\r\n                            <td>{this.state.results[i].name}</td>\r\n                            <td>{this.state.results[i].value}</td>\r\n                            <td>{this.state.results[i].range}</td>\r\n                            <td>{this.state.results[i].unit}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      );\r\n                    })}\r\n                  </table>\r\n                  <input type=\"submit\" value=\"Zapisz i prześlij\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabTechnicianPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PatientPage from \"./Patient-Doctor/PatientPage\";\r\nimport DoctorPage from \"./Patient-Doctor/Doctor/DoctorPage\";\r\nimport LabTechnicianPage from \"./LabTechnician/LabTechnicianPage\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    activeAccount: JSON.parse(localStorage.getItem(\"account\"))\r\n      ? JSON.parse(localStorage.getItem(\"account\"))\r\n      : \"\",\r\n    isLoggedIn: JSON.parse(localStorage.getItem(\"isLoggedIn\")) || \"false\", \r\n    activeUser:  []\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    //because setState is asynchronous\r\n    localStorage.setItem(\"isLoggedIn\", JSON.stringify(this.state.isLoggedIn));\r\n    localStorage.setItem(\"account\", JSON.stringify(this.state.activeAccount));\r\n    \r\n  }\r\n\r\n\r\n  changeAccount = e => {\r\n    this.setState({ activeAccount: e.target.value });\r\n  };\r\n\r\n  logIn = async e => {\r\n    e.preventDefault();\r\n    await fetch(\"https://medical-documentation.herokuapp.com/login\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        login: e.target.login.value,\r\n        password: e.target.password.value\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        if (data === \"FAIL\") {\r\n          document.querySelector(\"#login-info\").innerHTML =\r\n            \"Niepoprawny login i hasło\";\r\n        } else {\r\n          this.setState({\r\n            activeAccount: data.accountType,\r\n            isLoggedIn: \"true\",\r\n            activeUser: data\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  logOut = async () => {\r\n    this.setState({ activeAccount: \"\", isLoggedIn: \"false\" });\r\n    //await localStorage.setItem(\"isLoggedIn\", false);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    let infoText;\r\n    if (localStorage.getItem(\"generatedLogin\")) {\r\n      infoText = `Twój wygenerowany login: ${localStorage.getItem(\r\n        \"generatedLogin\"\r\n      )}`;\r\n      localStorage.removeItem(\"generatedLogin\");\r\n    } else {\r\n      infoText = <br />;\r\n    }\r\n    return (\r\n      <div>\r\n        {this.state.isLoggedIn === \"false\" ? (\r\n          <div className=\"container login-container\">\r\n            <h2>Zaloguj się</h2>\r\n            <p id=\"login-info\">{infoText}</p>\r\n            <form onSubmit={this.logIn}>\r\n              <label htmlFor=\"login\">Użytkownik: </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"login\"\r\n                pattern=\"[PDL]\\d{5}\"\r\n                placeholder=\"np. P12345, D12345, L12345\"\r\n                required\r\n              />\r\n              <label htmlFor=\"password\">Hasło: </label>\r\n              <input type=\"password\" name=\"password\" required />\r\n              <input type=\"submit\" value=\"Zaloguj\" />\r\n            </form>\r\n            <p>Nie masz konta?</p>\r\n            <Link to=\"/register\">\r\n              <button>Zarejestruj się</button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"header\">\r\n            <div className=\"radio-buttons\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Patient\"\r\n                  value=\"patient\"\r\n                  checked={this.state.activeAccount === \"patient\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Pacjent\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Doctor\"\r\n                  value=\"doctor\"\r\n                  checked={this.state.activeAccount === \"doctor\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Lekarz\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Lab\"\r\n                  value=\"lab\"\r\n                  checked={this.state.activeAccount === \"lab\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Laborant\r\n              </label>\r\n            </div>\r\n\r\n            <button className=\"log-out\" onClick={this.logOut}>\r\n              Wyloguj się\r\n            </button>\r\n\r\n            {this.state.activeAccount === \"patient\" ? (\r\n              <PatientPage />\r\n            ) : this.state.activeAccount === \"doctor\" ? (\r\n              <DoctorPage />\r\n            ) : (\r\n              <LabTechnicianPage />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\n\r\nimport Main from \"./Main\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nclass App extends Component {\r\n  async componentWillMount() {\r\n    if (!localStorage.getItem(\"account\")) {\r\n      console.log(\"no account\");\r\n      const text = \"\";\r\n      await localStorage.setItem(\"account\", JSON.stringify(text));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/\" component={Main} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n//basename - because of /dokumenty_cyfrowe_w_medycynie in url (gh-pages)\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}> \r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}