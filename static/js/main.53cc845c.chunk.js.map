{"version":3,"sources":["Register.js","Patient-Doctor/Document.js","DateParser.js","Patient-Doctor/MedicalProcess.js","Patient-Doctor/Documentation.js","Patient-Doctor/Recommendations.js","Patient-Doctor/SideBar.js","Patient-Doctor/PatientPage.js","Patient-Doctor/Doctor/NewDocument.js","Patient-Doctor/Doctor/NewRecommendation.js","Patient-Doctor/Doctor/NewAttachemnt.js","Patient-Doctor/Doctor/DoctorPage.js","LabTechnician/LabTechnicianPage.js","Main.js","App.js","index.js"],"names":["Register","state","accountType","chooseAccountType","e","_this","setState","target","value","goBack","props","history","push","validatePassword","password","document","getElementById","confirmPassword","setCustomValidity","react_default","a","createElement","className","style","position","top","left","onClick","this","name","onChange","htmlFor","type","required","id","pattern","Fragment","Component","Document","documents","_this2","fetch","then","result","json","data","currentDocument","_this3","length","console","log","forEach","match","params","documentId","react_router_dom","to","fontWeight","title","resultType","content","results","map","item","i","key","range","unit","transformDate","date","day","concat","getDate","toString","month","getMonth","year","getYear","transformFromDB","dateTime","split","time","slice","today","Date","threeDaysAgo","now","MedicalProcess","hour","getHours","minutes","getMinutes","transformDateTime","tasks","addTask","preventDefault","completed","newTask","details","Object","toConsumableArray","setCompleted","index","task","activeAccount","onSubmit","placeholder","filter","float","Documentation","textDecoration","Recommendations","recommendations","recommendation","doctor","attachedDocuments","attachment","margin","color","SideBar","patient","toggleComplete","surname","sex","age","PESEL","dateOfBirth","address","telephone","icd10","checked","disabled","PatientPage","Patient_Doctor_SideBar","activeClassName","react_router","exact","path","component","from","NewDocument","documentType","chooseDocumentType","textAlign","width","defaultValue","NewRecommendationForm","dataSaved","toggleSave","_e$target$parentEleme","parentElement","min","max","NewAttachment","DoctorPage","patientID","dob","searchPatient","render","NewAttachemnt","assign","NewRecommendation","Patient_Doctor_Documentation","Patient_Doctor_Recommendations","Patient_Doctor_MedicalProcess","LabTechnicianPage","chooseResultType","addParameter","querySelector","amount","newParameter","Main","localStorage","getItem","isLoggedIn","changeAccount","logIn","login","logOut","setItem","Patient_Doctor_PatientPage","Doctor_DoctorPage","LabTechnician_LabTechnicianPage","App","ReactDOM","basename","process","src_App"],"mappings":"mcAwHeA,6MAnHbC,MAAQ,CACNC,YAAa,aAGfC,kBAAoB,SAAAC,GAClBC,EAAKC,SAAS,CAAEJ,YAAaE,EAAEG,OAAOC,WAGxCC,OAAS,WACPJ,EAAKK,MAAMC,QAAQC,KAAK,QAG1BC,iBAAmB,WACjB,IAAIC,EAAWC,SAASC,eAAe,YACnCC,EAAkBF,SAASC,eAAe,oBAE1CF,EAASN,QAAUS,EAAgBT,MACrCS,EAAgBC,kBAAkB,oCAElCD,EAAgBC,kBAAkB,6EAIpC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,UACEE,MAAO,CAAEC,SAAU,WAAYC,IAAK,KAAMC,KAAM,SAChDC,QAASC,KAAKnB,QAFhB,0BAMAU,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,UAAQQ,KAAK,cAAcC,SAAUF,KAAKzB,mBACxCgB,EAAAC,EAAAC,cAAA,UAAQb,MAAM,WAAd,WACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,UAAd,UACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,OAAd,cAGJW,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,QAAf,cACAZ,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,OAAOI,UAAQ,KAEzCd,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,WAAf,aACAZ,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,UAAUI,UAAQ,KAEhB,WAA3BL,KAAK3B,MAAMC,aACViB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,OAAf,mBACAZ,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,MAAMI,UAAQ,KAG1Cd,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,SAAf,UACAZ,EAAAC,EAAAC,cAAA,SACEW,KAAK,OACLH,KAAK,QACLK,GAAG,QACHD,UAAQ,EACRE,QAAQ,eAGgB,WAA3BP,KAAK3B,MAAMC,aACViB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgB,SAAA,KACG,IACDjB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,MAAMI,UAAQ,KAExCd,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,iBAAiBI,UAAQ,MAIvDd,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,YAAf,eACAZ,EAAAC,EAAAC,cAAA,SACEW,KAAK,WACLC,UAAQ,EACRC,GAAG,WACHC,QAAQ,oEAGZhB,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,YAAf,0BACAZ,EAAAC,EAAAC,cAAA,SACEW,KAAK,WACLC,UAAQ,EACRC,GAAG,mBACHC,QAAQ,iEACRL,SAAUF,KAAKf,oBAIS,YAA3Be,KAAK3B,MAAMC,aACViB,EAAAC,EAAAC,cAAA,sDAE0B,WAA3BO,KAAK3B,MAAMC,aACViB,EAAAC,EAAAC,cAAA,sDAE0B,QAA3BO,KAAK3B,MAAMC,aACViB,EAAAC,EAAAC,cAAA,sDAGFF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASxB,MAAM,kCA7Gd6B,oBCmHRC,oNAlHbrC,MAAQ,CACNsC,UAAW,uFA8CO,IAAAC,EAAAZ,KAClBa,MAAM,uCACHC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAG,GAAI,OAAIL,EAAKlC,SAAS,CAAEiC,UAAWM,uCAGpC,IAGDC,EAHCC,EAAAnB,KACP,OAAIA,KAAK3B,MAAMsC,UAAUS,QACvBC,QAAQC,IAAItB,KAAK3B,MAAMsC,WAEvBX,KAAK3B,MAAMsC,UAAUY,QAAQ,SAAApC,GAC3BkC,QAAQC,IAAInC,GACRA,EAASmB,KAAOa,EAAKrC,MAAM0C,MAAMC,OAAOC,aAC1CR,EAAkB/B,KAItBkC,QAAQC,IAAIJ,GAEV3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEC,GAAG,iBACHlC,UAAU,aACVC,MAAO,CAAEC,SAAU,WAAYC,IAAK,QAASC,KAAM,UAEnDP,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAAA,KAAGE,MAAO,CAAEkC,WAAY,QAAUX,EAAgBY,OAClB,iBAA/BZ,EAAgBa,YACfxC,EAAAC,EAAAC,cAAA,SAAIyB,EAAgBc,SAEU,iBAA/Bd,EAAgBa,YACfxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,yBAGHyB,EAAgBe,QAAQC,IAAI,SAACC,EAAMC,GAClC,OACE7C,EAAAC,EAAAC,cAAA,SAAO4C,IAAKD,GACV7C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAK2C,EAAI,GACT7C,EAAAC,EAAAC,cAAA,UAAKyB,EAAgBe,QAAQG,GAAGnC,MAChCV,EAAAC,EAAAC,cAAA,UAAKyB,EAAgBe,QAAQG,GAAGxD,OAChCW,EAAAC,EAAAC,cAAA,UAAKyB,EAAgBe,QAAQG,GAAGE,OAChC/C,EAAAC,EAAAC,cAAA,UAAKyB,EAAgBe,QAAQG,GAAGG,YAQ9ChD,EAAAC,EAAAC,cAAA,iCAIC,YA/GYgB,sBCcjB+B,eAAgB,SAAAC,GACpB,IAAMC,EAAG,GAAAC,OAC6B,GAApCF,EAAKG,UAAUC,WAAWzB,OAAc,IAAM,IADvCuB,OAENF,EAAKG,WACFE,EAAK,GAAAH,OAC4B,GAArCF,EAAKM,WAAWF,WAAWzB,OAAc,IAAM,IADtCuB,OAERF,EAAKM,YACFC,EAAOP,EAAKQ,UAAY,IAC9B,WAAAN,OAAYK,EAAZ,KAAAL,OAAoBG,EAApB,KAAAH,OAA6BD,KAGzBQ,EAAkB,SAAAT,GACtB,GAAa,OAATA,EAAe,CACjB,IAAMU,EAAWV,EAAKW,MAAM,KACtBC,EAAOF,EAAS,GAAGG,MAAM,EAAG,GAClC,SAAAX,OAAUQ,EAAS,GAAnB,KAAAR,OAAyBU,KAKvBE,EAAQf,EAAc,IAAIgB,MAC1BC,EAAejB,EAAc,IAAIgB,KAAKA,KAAKE,MAAQ,SCmF1CC,GD1HW,SAAAlB,GACxB,IAAMC,EAAG,GAAAC,OAC6B,GAApCF,EAAKG,UAAUC,WAAWzB,OAAc,IAAM,IADvCuB,OAENF,EAAKG,WACFE,EAAK,GAAAH,OAC4B,GAArCF,EAAKM,WAAWF,WAAWzB,OAAc,IAAM,IADtCuB,OAERF,EAAKM,YACFC,EAAOP,EAAKQ,UAAY,IACxBW,EAAI,GAAAjB,OAC6B,GAArCF,EAAKoB,WAAWhB,WAAWzB,OAAc,IAAM,IADvCuB,OAEPF,EAAKoB,YACFC,EAAO,GAAAnB,OAC4B,GAAvCF,EAAKsB,aAAalB,WAAWzB,OAAc,IAAM,IADtCuB,OAEVF,EAAKsB,cAER,KAAApB,OAAYK,EAAZ,KAAAL,OAAoBG,EAApB,KAAAH,OAA6BD,EAA7B,KAAAC,OAAoCiB,EAApC,KAAAjB,OAA4CmB,GAyBlCE,CAAkB,IAAIR,iNCjChCnF,MAAQ,CACN4F,MAAO,MASTC,QAAU,SAAA1F,GACRA,EAAE2F,iBACF,IAAMC,EAAyC,SAA7B5F,EAAEG,OAAOyF,UAAUxF,MAE/ByF,EAAU,CACd/D,GAAI7B,EAAKJ,MAAM4F,MAAM7C,OAAO,EAC5BU,MAAOtD,EAAEG,OAAOmD,MAAMlD,MACtBwF,YACAE,QAAS9F,EAAEG,OAAO2F,QAAQ1F,OAG5BH,EAAKC,SAAS,CAAEuF,MAAK,GAAAtB,OAAA4B,OAAAC,EAAA,EAAAD,CAAM9F,EAAKJ,MAAM4F,OAAjB,CAAwBI,MAC7C7F,EAAEG,OAAOmD,MAAMlD,MAAQ,GACvBJ,EAAEG,OAAO2F,QAAQ1F,MAAQ,MAG3B6F,aAAe,SAAAjG,GACb6C,QAAQC,IAAI9C,EAAEG,OAAO2B,IACrB,IAAMoE,EAAQlG,EAAEG,OAAO2B,GACvB7B,EAAKC,SAAS,CACZuF,MAAOxF,EAAKJ,MAAM4F,MAAM/B,IAAI,SAACyC,EAAMvC,GAIjC,OAHIA,GAAKsC,IACPC,EAAKP,WAAY,GAEZO,0FA9BO,IAAA/D,EAAAZ,KAClBa,MAAM,yCACHC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAG,GAAI,OAAIL,EAAKlC,SAAS,CAAEuF,MAAOhD,uCAgChC,IAAAE,EAAAnB,KAKP,OAJAA,KAAK3B,MAAM4F,MAAM1C,QAAQ,SAACoD,EAAMvC,GAC9BuC,EAAKrE,GAAK8B,IAEZf,QAAQC,IAAItB,KAAK3B,MAAM4F,OAErB1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACiB,WAA7BM,KAAKlB,MAAM8F,eACVrF,EAAAC,EAAAC,cAAA,QAAMoF,SAAU7E,KAAKkE,SACnB3E,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAO0E,YAAY,aAAQ7E,KAAK,UAE5CV,EAAAC,EAAAC,cAAA,UAAQQ,KAAK,aACXV,EAAAC,EAAAC,cAAA,UAAQb,MAAM,QAAd,YACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,QAAd,iBAEFW,EAAAC,EAAAC,cAAA,YAAUqF,YAAY,oBAAY7E,KAAK,YACvCV,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASxB,MAAM,WAG/BW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,UACGO,KAAK3B,MAAM4F,MACTc,OAAO,SAAAJ,GAAI,OAAuB,IAAnBA,EAAKP,YACpBlC,IAAI,SAACyC,EAAMvC,GACV,OACE7C,EAAAC,EAAAC,cAAA,MAAI4C,IAAKD,GACP7C,EAAAC,EAAAC,cAAA,cAASkF,EAAK7C,OACgB,WAA7BX,EAAKrC,MAAM8F,eACVrF,EAAAC,EAAAC,cAAA,UACEC,UAAU,WACVY,GAAIqE,EAAKrE,GACTP,QAASoB,EAAKsD,cAHhB,UASFlF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOY,GAAI8B,GAA7B,gBAIA7C,EAAAC,EAAAC,cAAA,WACCkF,EAAKL,QACN/E,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEqF,MAAO,UAAY9B,EAAgByB,EAAKlC,WAKjElD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,UACGO,KAAK3B,MAAM4F,MACTc,OAAO,SAAAJ,GAAI,OAAuB,IAAnBA,EAAKP,YACpBlC,IAAI,SAACyC,EAAMvC,GACV,OACE7C,EAAAC,EAAAC,cAAA,MAAI4C,IAAKD,GACP7C,EAAAC,EAAAC,cAAA,cAASkF,EAAK7C,OAEdvC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOY,GAAI8B,GAA7B,gBAIA7C,EAAAC,EAAAC,cAAA,WACCkF,EAAKL,QACN/E,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEqF,MAAO,UAAY9B,EAAgByB,EAAKlC,oBAzG9ChC,cC0FdwE,oNA3Fb5G,MAAQ,CACNsC,UAAW,uFA6BO,IAAAC,EAAAZ,KAClBa,MAAM,uCACHC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAG,GAAI,OAAIL,EAAKlC,SAAS,CAAEiC,UAAWM,uCAO3C,OAFAI,QAAQC,IAAItB,KAAK3B,MAAMsC,WAGrBpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACiB,WAA7BM,KAAKlB,MAAM8F,eACVrF,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,GAAG,4BACPrC,EAAAC,EAAAC,cAAA,iCAGJF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACdH,EAAAC,EAAAC,cAAA,gCACmB,IACjBF,EAAAC,EAAAC,cAAA,UAAQQ,KAAK,QACXV,EAAAC,EAAAC,cAAA,UAAQb,MAAM,OAAd,YACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,cAAd,gBACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,OAAd,eAEAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,OAAd,eACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,QAAd,cACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,WAAd,iCACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,eAAd,gCACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,cAAd,oBAGJW,EAAAC,EAAAC,cAAA,qCACuBF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SADnC,OACgDb,EAAAC,EAAAC,cAAA,SAAOW,KAAK,UAE5Db,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASxB,MAAM,aAE7BW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,UACGO,KAAK3B,MAAMsC,UAAUuB,IAAI,SAAC/C,EAAUiD,GACnC,OACE7C,EAAAC,EAAAC,cAAA,MAAI4C,IAAKD,GACP7C,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEhC,MAAO,CAAEkC,WAAY,MAAOqD,eAAgB,aAC5CtD,GAAE,0BAAAe,OAC0BxD,EAASmB,KAIpCnB,EAAS2C,oBAhFFrB,cC2Eb0E,oNAzEb9G,MAAQ,CACN+G,gBAAiB,uFA0BC,IAAAxE,EAAAZ,KAClBa,MAAM,yCACHC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAG,GAAI,OAAIL,EAAKlC,SAAS,CAAE0G,gBAAiBnE,uCAGjD,OACE1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACiB,WAA7BM,KAAKlB,MAAM8F,eACVrF,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,GAAG,+BACPrC,EAAAC,EAAAC,cAAA,kCAIJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZM,KAAK3B,MAAM+G,gBAAgBlD,IAAI,SAACmD,EAAgBjD,GAC/C,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB2C,IAAKD,GACnC7C,EAAAC,EAAAC,cAAA,kBAAUyD,EAAgBmC,EAAe5C,MAAzC,KACAlD,EAAAC,EAAAC,cAAA,oBAAY4F,EAAeC,OAA3B,KACA/F,EAAAC,EAAAC,cAAA,6BAAW4F,EAAerD,SAC1BzC,EAAAC,EAAAC,cAAA,0CACuB,IACpB4F,EAAeE,kBAAkBrD,IAAI,SAACsD,EAAYpD,GAAb,OACpC7C,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEU,IAAKD,EACLzC,MAAO,CACL8F,OAAQ,OACRC,MAAO,QACPR,eAAgB,aAElBtD,GAAE,qBAAAe,OAAuB6C,IAExBA,kBA7DO/E,cC8HfkF,oNA/HbtH,MAAQ,CACNuH,QAAS,GACT3B,MAAO,MAaTC,QAAU,SAAA1F,GACRA,EAAE2F,iBACF9C,QAAQC,IAAI9C,EAAEG,OAAOqD,QAAQpD,OAC7B,IAAMyF,EAAU,CACdvC,MAAOtD,EAAEG,OAAOqD,QAAQpD,MACxBwF,WAAW,EACXE,QAAS,IAKX7F,EAAKC,SAAS,CAAEuF,MAAK,GAAAtB,OAAA4B,OAAAC,EAAA,EAAAD,CAAM9F,EAAKJ,MAAM4F,OAAjB,CAAwBI,MAC7C7F,EAAEG,OAAOqD,QAAQpD,MAAQ,MAG3BiH,eAAiB,SAAArH,GACf,IAAMkG,EAAQlG,EAAEG,OAAO2B,GAEvB7B,EAAKC,SAAS,CACZuF,MAAOxF,EAAKJ,MAAM4F,MAAM/B,IAAI,SAACyC,EAAMvC,GAIjC,OAHIA,GAAKsC,IACPC,EAAKP,WAAaO,EAAKP,WAElBO,0FAjCO,IAAA/D,EAAAZ,KAClBa,MAAM,iCACHC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAG,GAAI,OAAIL,EAAKlC,SAAS,CAAEkH,QAAS3E,MAEzCJ,MAAM,yCACHC,KAAK,SAAAC,GAAM,OAAIA,EAAOC,SACtBF,KAAK,SAAAG,GAAI,OAAIL,EAAKlC,SAAS,CAAEuF,MAAOhD,uCAgChC,IAAAE,EAAAnB,KACD4F,EAAU5F,KAAK3B,MAAMuH,QAC3B,OACErG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,0BAEAF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,UACG,IACAmG,EAAQ3F,KAFX,IAEkB2F,EAAQE,QAAS,MAGrCvG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,cAAMmG,EAAQG,IAAd,MAEFxG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,cAAMmG,EAAQI,IAAd,MAEFzG,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,cAAMmG,EAAQK,MAAd,MAEF1G,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,cAAMmG,EAAQM,YAAd,MAEF3G,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,cAAMmG,EAAQO,QAAd,MAEF5G,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,cAAMmG,EAAQQ,UAAd,MAEF7G,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,cAAMmG,EAAQS,MAAd,QAKwB,WAA7BrG,KAAKlB,MAAM8F,eAA8BrF,EAAAC,EAAAC,cAAA,yBAE5CF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,UACGO,KAAK3B,MAAM4F,MAAM/B,IAAI,SAACyC,EAAMvC,GAC3B,OACE7C,EAAAC,EAAAC,cAAA,MAAI4C,IAAKD,GACP7C,EAAAC,EAAAC,cAAA,SACEW,KAAK,WACLkG,QAAS3B,EAAKP,UACdlE,SAAUiB,EAAK0E,eACfvF,GAAI8B,EACJmE,SAAuC,WAA7BpF,EAAKrC,MAAM8F,gBACpB,IACFD,EAAK7C,UAKgB,WAA7B9B,KAAKlB,MAAM8F,eACVrF,EAAAC,EAAAC,cAAA,QAAMoF,SAAU7E,KAAKkE,SACnB3E,EAAAC,EAAAC,cAAA,SACEW,KAAK,OACL0E,YAAY,qBACZ7E,KAAK,YAEPV,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASxB,MAAM,oBAvHnB6B,cC8CP+F,oNAtCbnI,MAAQ,2EAIN,OACEkB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgH,EAAD,MAEAlH,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACEpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAASC,GAAG,iBAAiB8E,gBAAgB,UAA7C,gBAGAnH,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAASC,GAAG,mBAAmB8E,gBAAgB,UAA/C,uBAGAnH,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAASC,GAAG,mBAAmB8E,gBAAgB,UAA/C,oBAIFnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,KACEpH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iBAAiBC,UAAW7B,IAC9C1F,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,UAAW3B,IAChD5F,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,mBAAmBC,UAAWnD,IAChDpE,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,qCACLC,UAAWpG,IAGbnB,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAUI,KAAK,IAAInF,GAAG,6BAhCRnB,cC+DXuG,oNAnEb3I,MAAQ,CACN4I,aAAc,MAGhBC,mBAAqB,SAAA1I,GACnBC,EAAKC,SAAS,CAAEuI,aAAczI,EAAEG,OAAOC,iFAIvC,OACEW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEC,GAAG,iBACHlC,UAAU,aACVC,MAAO,CAAEC,SAAU,WAAYC,IAAK,QAASC,KAAM,UAEnDP,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAEwH,UAAW,WAAxB,iBACA5H,EAAAC,EAAAC,cAAA,SAAOE,MAAO,CAAEyH,MAAO,MAAO3B,OAAQ,SAAtC,iBAEElG,EAAAC,EAAAC,cAAA,UACEQ,KAAK,gBACLC,SAAUF,KAAKkH,mBACfG,aAAa,WAEb9H,EAAAC,EAAAC,cAAA,UAAQb,MAAM,UAAU2H,UAAQ,GAAhC,eAGAhH,EAAAC,EAAAC,cAAA,UAAQb,MAAM,OAAd,eAEAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,OAAd,eACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,QAAd,cACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,WAAd,iCACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,eAAd,kCAMHoB,KAAK3B,MAAM4I,cACV1H,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAEdH,EAAAC,EAAAC,cAAA,aACG,IADH,0BAEoBF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,qBAE5CV,EAAAC,EAAAC,cAAA,aACG,IADH,oBAESF,EAAAC,EAAAC,cAAA,kBAGPF,EAAAC,EAAAC,cAAA,aACG,IADH,yBAEcF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,UAG5Bb,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASxB,MAAM,6BA3Df6B,cCgFX6G,6MA/EbjJ,MAAQ,CACNkJ,WAAW,EAEXjC,OAAQ,GACRtD,QAAS,MAIXwF,WAAa,SAAAhJ,GACXA,EAAE2F,iBADc,IAAAsD,EAGUjJ,EAAEG,OAAO+I,cAA3BjF,EAHQgF,EAGRhF,KAAMT,EAHEyF,EAGFzF,QAEdvD,EAAKC,SAAS,CACZ6I,WAAY9I,EAAKJ,MAAMkJ,UACvBvF,QAASA,EAAQpD,MACjB6D,KAAMA,EAAK7D,iFAQb,OAGEW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEC,GAAG,mBACHlC,UAAU,aACVC,MAAO,CAAEC,SAAU,WAAYC,IAAK,QAASC,KAAM,UAEnDP,EAAAC,EAAAC,cAAA,4BAEFF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,qBAEEF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOmG,SAAUvG,KAAK3B,MAAMkJ,UAAWtH,KAAK,OAAOK,GAAG,OAAOqH,IAAKlE,EAAcmE,IAAKrE,EAAO8D,aAAc9D,KAEvHhE,EAAAC,EAAAC,cAAA,iCACQF,EAAAC,EAAAC,cAAA,YAAU8G,SAAUvG,KAAK3B,MAAMkJ,UAAWtH,KAAK,aAGxDV,EAAAC,EAAAC,cAAA,SACEW,KAAK,SACLxB,MAAOoB,KAAK3B,MAAMkJ,UAAY,SAAW,SACzCxH,QAASC,KAAKwH,cAIlBjI,EAAAC,EAAAC,cAAA,0CACuB,IACrBF,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,GAAG,qDACPrC,EAAAC,EAAAC,cAAA,UAAQE,MAAO,CAAE8F,OAAQ,OAAQ2B,MAAO,UAAxC,YAEF7H,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,GAAG,kDACPrC,EAAAC,EAAAC,cAAA,UAAQE,MAAO,CAAE8F,OAAQ,OAAQ2B,MAAO,UAAxC,eAIF7H,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,GAAG,iDACPrC,EAAAC,EAAAC,cAAA,UAAQE,MAAO,CAAE8F,OAAQ,OAAQ2B,MAAO,UAAxC,gBAIF7H,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,GAAG,kDACPrC,EAAAC,EAAAC,cAAA,UAAQE,MAAO,CAAE8F,OAAQ,OAAQ2B,MAAO,UAAxC,sBAKJ7H,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAlB,2BA1E4Be,aCgJrBoH,0LA9IX,IAAMZ,EAAejH,KAAKlB,MAAMmI,aAChC,OACE1H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CACEC,GAAG,8BACHlC,UAAU,aACVC,MAAO,CAAEC,SAAU,WAAYC,IAAK,QAASC,KAAM,UAEnDP,EAAAC,EAAAC,cAAA,4BAEgB,iBAAjBwH,GACC1H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,kCACqB,IACnBF,EAAAC,EAAAC,cAAA,SACEW,KAAK,OACL0E,YAAY,qCACZ7E,KAAK,WACLI,UAAQ,KAGZd,EAAAC,EAAAC,cAAA,2CACcF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,UAAUI,UAAQ,KAExDd,EAAAC,EAAAC,cAAA,8BACgBF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,gBAExCV,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASxB,MAAM,YAKf,cAAjBqI,GACC1H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,8BACiB,IACfF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,gBAAgBI,UAAQ,KAElDd,EAAAC,EAAAC,cAAA,oBACMF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,aAAaI,UAAQ,KAEnDd,EAAAC,EAAAC,cAAA,oBACMF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,WAAWI,UAAQ,KAEjDd,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASxB,MAAM,YAKf,aAAjBqI,GACC1H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,+BACkB,IAChBF,EAAAC,EAAAC,cAAA,SACEW,KAAK,OACLH,KAAK,gBACL6E,YAAY,oDACZzE,UAAQ,KAGZd,EAAAC,EAAAC,cAAA,wBACW,IACTF,EAAAC,EAAAC,cAAA,SACEW,KAAK,OACLH,KAAK,cACL6E,YAAY,2BACZzE,UAAQ,KAGZd,EAAAC,EAAAC,cAAA,6BACeF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,YAAYI,UAAQ,KAE3Dd,EAAAC,EAAAC,cAAA,qBACOF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,MAAMI,UAAQ,KAE7Cd,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASxB,MAAM,YAKf,cAAjBqI,GACC1H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWH,KAAK,OAAOrB,MAAM,OAD3C,MAIAW,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWH,KAAK,OAAOrB,MAAM,YAD3C,WAIAW,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWH,KAAK,OAAOrB,MAAM,QAD3C,OAIAW,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWH,KAAK,OAAOrB,MAAM,QAD3C,OAIAW,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWH,KAAK,OAAOrB,MAAM,OAD3C,oBAIAW,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWH,KAAK,OAAOrB,MAAM,eAD3C,cAIAW,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWH,KAAK,OAAOrB,MAAM,WAD3C,UAIAW,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWH,KAAK,OAAOrB,MAAM,WAD3C,UAIAW,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWH,KAAK,OAAOrB,MAAM,UAD3C,SAIAW,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWH,KAAK,OAAOrB,MAAM,gBAD3C,gBAMFW,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASxB,MAAM,oBAvIb6B,cC4IbqH,6MAlIbzJ,MAAQ,CACN0J,UAAW,GACXnC,QAAS,CACPtF,GAAI,QACJL,KAAM,MACN6F,QAAS,WACTE,IAAK,KACLC,MAAO,cACP+B,IAAK,aACLjC,IAAK,IACLI,QAAS,iCACTE,MAAO,kBAIX4B,cAAgB,SAAAzJ,GACdA,EAAE2F,iBAKF1F,EAAKC,SAAS,CAAEqJ,UAAWvJ,EAAEG,OAAOoJ,UAAUnJ,iFAG9C,OACEW,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAUmF,SAAU7E,KAAKiI,eACvC1I,EAAAC,EAAAC,cAAA,SACEW,KAAK,OACL0E,YAAY,oBACZ7E,KAAK,YACLM,QAAQ,aAEVhB,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASxB,MAAM,0BAG5BoB,KAAK3B,MAAM0J,WACVxI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgH,EAAD,CAAS7B,cAAc,SAASgB,QAAS5F,KAAK3B,MAAMuH,UACpDrG,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACEpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAASC,GAAG,iBAAiB8E,gBAAgB,UAA7C,gBAGAnH,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAASC,GAAG,mBAAmB8E,gBAAgB,UAA/C,uBAGAnH,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAASC,GAAG,mBAAmB8E,gBAAgB,UAA/C,oBAIFnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,KACEpH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,oDACLqB,OAAQ,SAAApJ,GAAK,OACXS,EAAAC,EAAAC,cAAC0I,EAAD5D,OAAA6D,OAAA,GAAmBtJ,EAAnB,CAA0BmI,aAAa,qBAI3C1H,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,iDACLqB,OAAQ,SAAApJ,GAAK,OACXS,EAAAC,EAAAC,cAAC0I,EAAD5D,OAAA6D,OAAA,GAAmBtJ,EAAnB,CAA0BmI,aAAa,kBAI3C1H,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,gDACLqB,OAAQ,SAAApJ,GAAK,OACXS,EAAAC,EAAAC,cAAC0I,EAAD5D,OAAA6D,OAAA,GAAmBtJ,EAAnB,CAA0BmI,aAAa,iBAI3C1H,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,iDACLqB,OAAQ,SAAApJ,GAAK,OACXS,EAAAC,EAAAC,cAAC0I,EAAD5D,OAAA6D,OAAA,GAAmBtJ,EAAnB,CAA0BmI,aAAa,kBAG3C1H,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,qCACLC,UAAWpG,IAEbnB,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,8BACLC,UAAWuB,IAGb9I,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,4BACLC,UAAWE,IAGbzH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEE,KAAK,iBACLqB,OAAQ,SAAApJ,GAAK,OACXS,EAAAC,EAAAC,cAAC6I,EAAD/D,OAAA6D,OAAA,GAAmBtJ,EAAnB,CAA0B8F,cAAc,eAG5CrF,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEE,KAAK,mBACLqB,OAAQ,SAAApJ,GAAK,OACXS,EAAAC,EAAAC,cAAC8I,EAADhE,OAAA6D,OAAA,GAAqBtJ,EAArB,CAA4B8F,cAAc,eAG9CrF,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CACEE,KAAK,mBACLqB,OAAQ,SAAApJ,GAAK,OACXS,EAAAC,EAAAC,cAAC+I,EAADjE,OAAA6D,OAAA,GAAoBtJ,EAApB,CAA2B8F,cAAc,eAI7CrF,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAUI,KAAK,IAAInF,GAAG,qBAG1BrC,EAAAC,EAAAC,cAAA,qBA3HagB,aCqHVgI,oNA9HbpK,MAAQ,CACN0D,WAAY,GACZE,QAAS,MAGXyG,iBAAmB,SAAAlK,GACjB6C,QAAQC,IAAI9C,EAAEG,OAAOC,OACrBH,EAAKC,SAAS,CAAEqD,WAAYvD,EAAEG,OAAOC,WAGvC+J,aAAe,SAAAnK,GACbA,EAAE2F,iBACF,IAAIlE,EAAOd,SAASyJ,cAAc,cAAchK,MAC5CiK,EAAS1J,SAASyJ,cAAc,WAAWhK,MAC/C,GAAIiK,EAAQ,CACV,IAAMC,EAAe,CACnB7I,OACA4I,UAEFpK,EAAKC,SAAS,CAAEuD,QAAO,GAAAU,OAAA4B,OAAAC,EAAA,EAAAD,CAAM9F,EAAKJ,MAAM4D,SAAjB,CAA0B6G,MACnD3J,SAASyJ,cAAc,WAAWhK,MAAQ,6EAOnC,IAAAgC,EAAAZ,KACP,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QACdH,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,cAAf,cACc,IACZZ,EAAAC,EAAAC,cAAA,SAAOa,GAAG,aAAaF,KAAK,OAAOC,UAAQ,EAACE,QAAQ,cAEtDhB,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,mBAAf,gBACgB,IACdZ,EAAAC,EAAAC,cAAA,SAAOa,GAAG,aAAaF,KAAK,UAG9Bb,EAAAC,EAAAC,cAAA,0BAEEF,EAAAC,EAAAC,cAAA,UACEQ,KAAK,cACLC,SAAUF,KAAK0I,iBACfrB,aAAa,WAEb9H,EAAAC,EAAAC,cAAA,UAAQb,MAAM,UAAU2H,UAAU,GAAlC,uBAGAhH,EAAAC,EAAAC,cAAA,UAAQb,MAAM,cAAd,mBACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,aAAd,oBAIHoB,KAAK3B,MAAM0D,YACVxC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,gCAE6B,eAA1BO,KAAK3B,MAAM0D,YACVxC,EAAAC,EAAAC,cAAA,UAAQQ,KAAK,YAAYK,GAAG,aAC1Bf,EAAAC,EAAAC,cAAA,UAAQb,MAAM,OAAd,OACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,OAAd,OACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,OAAd,QAGuB,cAA1BoB,KAAK3B,MAAM0D,YACVxC,EAAAC,EAAAC,cAAA,UAAQQ,KAAK,YAAYK,GAAG,aAC1Bf,EAAAC,EAAAC,cAAA,UAAQb,MAAM,OAAd,OACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,OAAd,OACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,WAAd,WACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,gBAAd,gBACAW,EAAAC,EAAAC,cAAA,UAAQb,MAAM,gBAAd,kBAINW,EAAAC,EAAAC,cAAA,iCAEEF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,SAASK,GAAG,SAASD,UAAQ,KAEvDd,EAAAC,EAAAC,cAAA,SACEW,KAAK,SACLxB,MAAM,iBACNmB,QAASC,KAAK2I,gBAIjB3I,KAAK3B,MAAM4D,QAAQb,OAAS,GAC3B7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,yBAGHO,KAAK3B,MAAM4D,QAAQC,IAAI,SAACC,EAAMC,GAC7B,OACE7C,EAAAC,EAAAC,cAAA,SAAO4C,IAAKD,GACV7C,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAK2C,EAAI,GACT7C,EAAAC,EAAAC,cAAA,UAAKmB,EAAKvC,MAAM4D,QAAQG,GAAGnC,MAC3BV,EAAAC,EAAAC,cAAA,UAAKmB,EAAKvC,MAAM4D,QAAQG,GAAGyG,QAC3BtJ,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,4BAMVF,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASxB,MAAM,sCApHb6B,cCsHjBsI,6MAlHb1K,MAAQ,CACNuG,cAAeoE,aAAaC,QAAQ,YAAc,GAClDC,YAAY,KASdC,cAAgB,SAAA3K,GACdC,EAAKC,SAAS,CAAEkG,cAAepG,EAAEG,OAAOC,WAG1CwK,MAAQ,SAAA5K,GACNA,EAAE2F,iBACF9C,QAAQC,IAAI9C,EAAEG,OAAO0K,MAAMzK,OAC3B,IAAIgG,EAAgB,GACpB,OAAQpG,EAAEG,OAAO0K,MAAMzK,MAAM,IAC3B,IAAK,IACHgG,EAAgB,UAChB,MACF,IAAK,IACHA,EAAgB,SAChB,MACF,IAAK,IACHA,EAAgB,MAChB,MACF,QACEA,EAAgB,GAEpBnG,EAAKC,SAAS,CAAEkG,gBAAesE,YAAY,OAG7CI,OAAS,WACP7K,EAAKC,SAAS,CAAEkG,cAAe,GAAIsE,YAAY,IAC/CzK,EAAKK,MAAMC,QAAQC,KAAK,0FA9BxBgK,aAAaO,QAAQ,WAAYvJ,KAAK3B,MAAM6K,YAC5CF,aAAaO,QAAQ,UAAWvJ,KAAK3B,MAAMuG,gDAiC3C,OACErF,EAAAC,EAAAC,cAAA,WACIO,KAAK3B,MAAM6K,WAgBX3J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SACEW,KAAK,QACLH,KAAK,UACLK,GAAG,UACH1B,MAAM,UACN0H,QAAsC,YAA7BtG,KAAK3B,MAAMuG,cACpB1E,SAAUF,KAAKmJ,gBACd,IARL,WAWA5J,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SACEW,KAAK,QACLH,KAAK,UACLK,GAAG,SACH1B,MAAM,SACN0H,QAAsC,WAA7BtG,KAAK3B,MAAMuG,cACpB1E,SAAUF,KAAKmJ,gBACd,IARL,UAWA5J,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SACEW,KAAK,QACLH,KAAK,UACLK,GAAG,MACH1B,MAAM,MACN0H,QAAsC,QAA7BtG,KAAK3B,MAAMuG,cACpB1E,SAAUF,KAAKmJ,gBACd,IARL,aAaF5J,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUK,QAASC,KAAKsJ,QAA1C,oBAI8B,YAA7BtJ,KAAK3B,MAAMuG,cACVrF,EAAAC,EAAAC,cAAC+J,EAAD,MAC+B,WAA7BxJ,KAAK3B,MAAMuG,cACbrF,EAAAC,EAAAC,cAACgK,EAAD,MAEAlK,EAAAC,EAAAC,cAACiK,EAAD,OA7DJnK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,QAAMoF,SAAU7E,KAAKoJ,OACnB7J,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,SAAf,qBACAZ,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOH,KAAK,QAAQM,QAAQ,cAAaF,UAAQ,IAC7Dd,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,YAAf,gBACAZ,EAAAC,EAAAC,cAAA,SAAOW,KAAK,WAAWH,KAAK,WAAWI,UAAQ,IAC/Cd,EAAAC,EAAAC,cAAA,SAAOW,KAAK,SAASxB,MAAM,aAE7BW,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAMC,GAAG,aACPrC,EAAAC,EAAAC,cAAA,gDAxDKgB,aCgBJkJ,mLAXX,OACEpK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,KACEpH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAW1I,IACzCmB,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWiC,aANzBtI,aCHlBmJ,IAAS1B,OACP3I,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAekI,SAAUC,kCACvBvK,EAAAC,EAAAC,cAACsK,EAAD,OAEF5K,SAASC,eAAe","file":"static/js/main.53cc845c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n/* import { withRouter } from 'react-router-dom'; */\r\n//import { history } from 'react-router-dom';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    accountType: \"patient\"\r\n  };\r\n\r\n  chooseAccountType = e => {\r\n    this.setState({ accountType: e.target.value });\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  validatePassword = () => {\r\n    let password = document.getElementById(\"password\");\r\n    let confirmPassword = document.getElementById(\"confirm-password\");\r\n\r\n    if (password.value !== confirmPassword.value) {\r\n      confirmPassword.setCustomValidity(\"Hasła nie są jednakowe\");\r\n    } else {\r\n      confirmPassword.setCustomValidity(\"\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container register-container\">\r\n        <h2>Zarejestruj się</h2>\r\n        <button\r\n          style={{ position: \"absolute\", top: \"5%\", left: \"350px\" }}\r\n          onClick={this.goBack}\r\n        >\r\n          Powrót do logowania\r\n        </button>\r\n        <form>\r\n          <span>\r\n            <label>Typ konta: </label>\r\n            <select name=\"accountType\" onChange={this.chooseAccountType}>\r\n              <option value=\"patient\">Pacjent</option>\r\n              <option value=\"doctor\">Lekarz</option>\r\n              <option value=\"lab\">Laborant</option>\r\n            </select>\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"name\">Imię </label>\r\n            <input type=\"text\" name=\"name\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"surname\">Nazwisko </label>\r\n            <input type=\"text\" name=\"surname\" required />\r\n          </span>\r\n          {this.state.accountType !== \"doctor\" && (\r\n            <span>\r\n              <label htmlFor=\"dob\">Data urodzenia </label>\r\n              <input type=\"date\" name=\"dob\" required />\r\n            </span>\r\n          )}\r\n          <span>\r\n            <label htmlFor=\"pesel\">PESEL </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"pesel\"\r\n              id=\"pesel\"\r\n              required\r\n              pattern=\"[0-9]{11}\"\r\n            />\r\n          </span>\r\n          {this.state.accountType === \"doctor\" && (\r\n            <>\r\n              {\" \"}\r\n              <span>\r\n                <label>Numer PWZ</label>\r\n                <input type=\"text\" name=\"PWZ\" required />\r\n              </span>\r\n              <span>\r\n                <label>Specjalizacja</label>\r\n                <input type=\"text\" name=\"specialization\" required />\r\n              </span>\r\n            </>\r\n          )}\r\n          <span>\r\n            <label htmlFor=\"password\">Hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"password\"\r\n              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"password\">Powtórz hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"confirm-password\"\r\n              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n              onChange={this.validatePassword}\r\n            />\r\n          </span>\r\n\r\n          {this.state.accountType === \"patient\" && (\r\n            <p>Wygenerowany dla Ciebie login to: P12345 </p>\r\n          )}\r\n          {this.state.accountType === \"doctor\" && (\r\n            <p>Wygenerowany dla Ciebie login to: D12321 </p>\r\n          )}\r\n          {this.state.accountType === \"lab\" && (\r\n            <p>Wygenerowany dla Ciebie login to: L10010 </p>\r\n          )}\r\n\r\n          <input type=\"submit\" value=\"Zarejestruj się\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Document.css\";\r\n\r\nclass Document extends Component {\r\n  state = {\r\n    documents: []\r\n    /*  {\r\n        title: \"Wynik badania krwi 2019-03-15\",\r\n        documentType: \"blood-test\",\r\n        id: 1,\r\n        content: [\r\n          {\r\n            name: \"HDL\",\r\n            amount: 12\r\n          },\r\n          {\r\n            name: \"LDL\",\r\n            amount: 100\r\n          },\r\n          {\r\n            name: \"HGB\",\r\n            amount: 13\r\n          },\r\n          {\r\n            name: \"RBC\",\r\n            amount: 400\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: \"Konsultacja kardiologiczna 2019-01-17\",\r\n        documentType: \"consultation\",\r\n        id: 2,\r\n        content: \"Opis wizyty u kardiologa\"\r\n      },\r\n\r\n      {\r\n        title: \"Wynik badania USG 2018-12-11\",\r\n        documentType: \"usg\",\r\n        id: 3,\r\n        content: \"USG opis\"\r\n      },\r\n      {\r\n        title: \"Wynik badania EKG 2018-09-22\",\r\n        documentType: \"ekg\",\r\n        id: 4,\r\n        content: \"EKG zrobione!\"\r\n      }\r\n    ] */\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:3000/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data }));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.documents.length) {\r\n      console.log(this.state.documents);\r\n      let currentDocument;\r\n      this.state.documents.forEach(document => {\r\n        console.log(document);\r\n        if (document.id === this.props.match.params.documentId) {\r\n          currentDocument = document;\r\n        }\r\n      });\r\n\r\n      console.log(currentDocument);\r\n      return (\r\n        <div className=\"container document-container\">\r\n          <Link\r\n            to=\"/documentation\"\r\n            className=\"backButton\"\r\n            style={{ position: \"absolute\", top: \"200px\", left: \"170px\" }}\r\n          >\r\n            <button>Powrót</button>\r\n          </Link>\r\n          <p style={{ fontWeight: \"700\" }}>{currentDocument.title}</p>\r\n          {currentDocument.resultType !== \"Badanie krwi\" && (\r\n            <p>{currentDocument.content}</p>\r\n          )}\r\n          {currentDocument.resultType === \"Badanie krwi\" && (\r\n            <div className=\"table\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Lp</th>\r\n                    <th>Parametr</th>\r\n                    <th>Wartość</th>\r\n                    <th>Zakres</th>\r\n                    <th>Jednostka</th>\r\n                  </tr>\r\n                </thead>\r\n                {currentDocument.results.map((item, i) => {\r\n                  return (\r\n                    <tbody key={i}>\r\n                      <tr>\r\n                        <td>{i + 1}</td>\r\n                        <td>{currentDocument.results[i].name}</td>\r\n                        <td>{currentDocument.results[i].value}</td>\r\n                        <td>{currentDocument.results[i].range}</td>\r\n                        <td>{currentDocument.results[i].unit}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </table>\r\n            </div>\r\n          )}\r\n          <button>Zapisz do PDF</button>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Document;\r\n","const transformDateTime = date => {\r\n  const day = `${\r\n    date.getDate().toString().length == 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length == 1 ? \"0\" : \"\"\r\n  }${date.getMonth()}`;\r\n  const year = date.getYear() - 100;\r\n  const hour = `${\r\n    date.getHours().toString().length == 1 ? \"0\" : \"\"\r\n  }${date.getHours()}`;\r\n  const minutes = `${\r\n    date.getMinutes().toString().length == 1 ? \"0\" : \"\"\r\n  }${date.getMinutes()}`;\r\n\r\n  return `20${year}-${month}-${day} ${hour}:${minutes}`;\r\n};\r\n\r\nconst transformDate = date => {\r\n  const day = `${\r\n    date.getDate().toString().length == 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length == 1 ? \"0\" : \"\"\r\n  }${date.getMonth()}`;\r\n  const year = date.getYear() - 100;\r\n  return `20${year}-${month}-${day}`;\r\n};\r\n\r\nconst transformFromDB = date => {\r\n  if (date !== null) {\r\n    const dateTime = date.split(\"T\");\r\n    const time = dateTime[1].slice(0, 5);\r\n    return `${dateTime[0]} ${time}`\r\n  }\r\n\r\n};\r\n\r\nconst today = transformDate(new Date());\r\nconst threeDaysAgo = transformDate(new Date(Date.now() - 3 * 24 * 3600 * 1000));\r\nconst now = transformDateTime(new Date());\r\n\r\nexport { today, threeDaysAgo, now, transformDate, transformDateTime, transformFromDB };\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/MedicalProcess.css\";\r\nimport \"../css/App.css\";\r\nimport { transformFromDB } from '../DateParser'\r\n\r\nclass MedicalProcess extends Component {\r\n  state = {\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:3000/medical-process\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  }\r\n\r\n  addTask = e => {\r\n    e.preventDefault();\r\n    const completed = e.target.completed.value === \"done\" ? true : false;\r\n\r\n    const newTask = {\r\n      id: this.state.tasks.length-1,\r\n      title: e.target.title.value,\r\n      completed,\r\n      details: e.target.details.value\r\n    };\r\n\r\n    this.setState({ tasks: [...this.state.tasks, newTask] });\r\n    e.target.title.value = \"\";\r\n    e.target.details.value = \"\";\r\n  };\r\n\r\n  setCompleted = e => {\r\n    console.log(e.target.id);\r\n    const index = e.target.id;\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (i == index) {\r\n          task.completed = true;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n  };\r\n\r\n  render() {\r\n    this.state.tasks.forEach((task, i) => {\r\n      task.id = i;\r\n    });\r\n    console.log(this.state.tasks);\r\n    return (\r\n      <div className=\"container medical-process-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <form onSubmit={this.addTask}>\r\n            <input type=\"text\" placeholder=\"Tytuł\" name=\"title\" />\r\n\r\n            <select name=\"completed\">\r\n              <option value=\"done\">Wykonane</option>\r\n              <option value=\"todo\">Do zrobienia</option>\r\n            </select>\r\n            <textarea placeholder=\"Szczegóły\" name=\"details\" />\r\n            <input type=\"submit\" value=\"Dodaj\" />\r\n          </form>\r\n        )}\r\n        <div className=\"content\">\r\n          <h3>Do zrobienia</h3>\r\n          <ul>\r\n            {this.state.tasks\r\n              .filter(task => task.completed === false)\r\n              .map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <strong>{task.title}</strong>\r\n                    {this.props.activeAccount === \"doctor\" && (\r\n                      <button\r\n                        className=\"set-done\"\r\n                        id={task.id}\r\n                        onClick={this.setCompleted}\r\n                      >\r\n                        ✓\r\n                      </button>\r\n                    )}\r\n\r\n                    <button className=\"edit\" id={i}>\r\n                      🖉\r\n                    </button>\r\n\r\n                    <br />\r\n                    {task.details}\r\n                    <span style={{ float: \"right\" }}>{transformFromDB(task.date)}</span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n          <hr />\r\n          <h3>Wykonane</h3>\r\n          <ul>\r\n            {this.state.tasks\r\n              .filter(task => task.completed === true)\r\n              .map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <strong>{task.title}</strong>\r\n\r\n                    <button className=\"edit\" id={i}>\r\n                      🖉\r\n                    </button>\r\n\r\n                    <br />\r\n                    {task.details}\r\n                    <span style={{ float: \"right\" }}>{transformFromDB(task.date)}</span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicalProcess;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Documentation.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Documentation extends Component {\r\n  state = {\r\n    documents: [\r\n      /*  {\r\n        title: \"Wynik badania krwi 2019-03-15\",\r\n        documentType: \"blood-test\",\r\n        id: 1,\r\n        content: \"Tabelka HTML z badaniami\"\r\n      },\r\n      {\r\n        title: \"Konsultacja kardiologiczna 2019-01-17\",\r\n        documentType: \"consultation\",\r\n        id: 2,\r\n        content: \"Opis wizyty u kardiologa\"\r\n      },\r\n\r\n      {\r\n        title: \"Wynik badania USG 2018-12-11\",\r\n        documentType: \"usg\",\r\n        id: 3,\r\n        content: \"USG opis\"\r\n      },\r\n      {\r\n        title: \"Wynik badania EKG 2018-09-22\",\r\n        documentType: \"ekg\",\r\n        id: 4,\r\n        content: \"EKG zrobione!\"\r\n      } */\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:3000/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data }));\r\n\r\n      //TODO sort by date\r\n  }\r\n  render() {\r\n    console.log(this.state.documents);\r\n\r\n    return (\r\n      <div className=\"container documentation-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <Link to=\"documentation/create-new\">\r\n            <button>Dodaj dokument</button>\r\n          </Link>\r\n        )}\r\n        <form className=\"filterForm\">\r\n          <label>\r\n            Filtruj po tagu:{\" \"}\r\n            <select name=\"tags\">\r\n              <option value=\"all\">Wszystko</option>\r\n              <option value=\"blood-test\">Badanie krwi</option>\r\n              <option value=\"usg\">Badanie USG</option>\r\n\r\n              <option value=\"ekg\">Badanie EKG</option>\r\n              <option value=\"echo\">Echo serca</option>\r\n              <option value=\"imaging\">Obrazowanie medyczne (TK/MRI)</option>\r\n              <option value=\"angiography\">Angiografia / Koronarografia</option>\r\n              <option value=\"cardiology\">Kardiologiczne</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Filtruj po dacie: od <input type=\"date\" /> do <input type=\"date\" />\r\n          </label>\r\n          <input type=\"submit\" value=\"Filtruj\" />\r\n        </form>\r\n        <div className=\"documents content\">\r\n          <ul>\r\n            {this.state.documents.map((document, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <Link\r\n                    style={{ fontWeight: \"600\", textDecoration: \"underline\" }}\r\n                    to={\r\n                      `/documentation/document${document.id}`\r\n           \r\n                    }\r\n                  >\r\n                    {document.title}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Documentation;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Recommendations.css\";\r\nimport { transformFromDB } from '../DateParser'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Recommendations extends Component {\r\n  state = {\r\n    recommendations: [\r\n      /*       {\r\n        id: 1,\r\n        date: \"2019-01-02\",\r\n        doctor: \"dr Anna Nowak\",\r\n        content:\r\n          \"dieta niskokaloryczna, Lek XXX 200mg 2x1, Lek YYY 1x1, unikanie wysiłku, kontrola za 2 tygodnie\",\r\n        attachments: [\"receptaXXX\", \"receptaYYY\"]\r\n      },\r\n      {\r\n        id: 2,\r\n        date: \"2018-11-22\",\r\n        doctor: \"dr Artur Bąk\",\r\n        content: \"zwolnienie z pracy 2 tyg, pić dużo płynów\",\r\n        attachments: [\"zwolnienie-2211-0512\"]\r\n      },\r\n      {\r\n        id: 3,\r\n        date: \"2018-10-26\",\r\n        doctor: \"dr Joanna Lubelska\",\r\n        content: \"zrobić USG serca\",\r\n        attachments: [\"skierowanieUSG\"]\r\n      } */\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:3000/recommendations\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ recommendations: data }));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container recommendations-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <Link to=\"/recommendations/create-new\">\r\n            <button>Dodaj zalecenie</button>\r\n          </Link>\r\n        )}\r\n\r\n        <div className=\"content\">\r\n          {this.state.recommendations.map((recommendation, i) => {\r\n            return (\r\n              <div className=\"recommendation\" key={i}>\r\n                <p>Data: {transformFromDB(recommendation.date)} </p>\r\n                <p>Lekarz: {recommendation.doctor} </p>\r\n                <p>Treść: {recommendation.content}</p>\r\n                <p>\r\n                  Załączone dokumenty:{\" \"}\r\n                  {recommendation.attachedDocuments.map((attachment, i) => (\r\n                    <Link\r\n                      key={i}\r\n                      style={{\r\n                        margin: \"10px\",\r\n                        color: \"white\",\r\n                        textDecoration: \"underline\"\r\n                      }}\r\n                      to={`/recommendations/:${attachment}`}\r\n                    >\r\n                      {attachment}\r\n                    </Link>\r\n                  ))}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recommendations;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/SideBar.css\";\r\n\r\nclass SideBar extends Component {\r\n  state = {\r\n    patient: [],\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:3000/patient\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ patient: data }));\r\n\r\n    fetch(\"http://localhost:3000/medical-process\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  }\r\n\r\n  addTask = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.content.value);\r\n    const newTask = {\r\n      title: e.target.content.value,\r\n      completed: false,\r\n      details: \"\"\r\n\r\n      //add to db\r\n    };\r\n\r\n    this.setState({ tasks: [...this.state.tasks, newTask] });\r\n    e.target.content.value = \"\";\r\n  };\r\n\r\n  toggleComplete = e => {\r\n    const index = e.target.id;\r\n\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (i == index) {\r\n          task.completed = !task.completed;\r\n        }\r\n        return task;\r\n\r\n        //add to db\r\n      })\r\n    });\r\n  };\r\n  render() {\r\n    const patient = this.state.patient;\r\n    return (\r\n      <div className=\"side-bar\">\r\n        <div className=\"patient-info\">\r\n          <h3>Dane osobowe</h3>\r\n\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Imię i nazwisko: </td>\r\n                <td>\r\n                  {\" \"}\r\n                  {patient.name} {patient.surname}{\" \"}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Płeć: </td>\r\n                <td> {patient.sex} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Wiek: </td>\r\n                <td> {patient.age} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>PESEL: </td>\r\n                <td> {patient.PESEL} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Data urodzenia: </td>\r\n                <td> {patient.dateOfBirth} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Adres: </td>\r\n                <td> {patient.address} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Telefon: </td>\r\n                <td> {patient.telephone} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>ICD10: </td>\r\n                <td> {patient.icd10} </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          {this.props.activeAccount === \"doctor\" && <button>Edytuj</button>}\r\n        </div>\r\n        <div className=\"todo-list\">\r\n          <h3>Zadania do wykonania</h3>\r\n          <ul>\r\n            {this.state.tasks.map((task, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.completed}\r\n                    onChange={this.toggleComplete}\r\n                    id={i}\r\n                    disabled={this.props.activeAccount !== \"doctor\"}\r\n                  />{\" \"}\r\n                  {task.title}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          {this.props.activeAccount === \"doctor\" && (\r\n            <form onSubmit={this.addTask}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Wpisz nowe zadanie\"\r\n                name=\"content\"\r\n              />\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Document from \"./Document\";\r\nimport MedicalProcess from \"./MedicalProcess\";\r\nimport Documentation from \"./Documentation\";\r\nimport Recommendations from \"./Recommendations\";\r\nimport SideBar from \"./SideBar\";\r\nimport \"../css/PatientDoctorPage.css\";\r\n\r\nclass PatientPage extends Component {\r\n\r\n  state = {\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SideBar />\r\n\r\n        <HashRouter>\r\n          <nav>\r\n            <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n              Dokumentacja\r\n            </NavLink>\r\n            <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n              Zalecenia lekarskie\r\n            </NavLink>\r\n            <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n              Proces medyczny\r\n            </NavLink>\r\n          </nav>\r\n          <Switch>\r\n            <Route exact path=\"/documentation\" component={Documentation} />\r\n            <Route exact path=\"/recommendations\" component={Recommendations} />\r\n            <Route exact path=\"/medical-process\" component={MedicalProcess} />\r\n            <Route\r\n              exact\r\n              path=\"/documentation/document:documentId\"\r\n              component={Document}\r\n            />\r\n\r\n            <Redirect from=\"/\" to=\"/documentation\" />\r\n          </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PatientPage;\r\n","import React, { Component } from \"react\";\r\nimport \"../../css/NewDocument.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NewDocument extends Component {\r\n  state = {\r\n    documentType: \"\"\r\n  };\r\n\r\n  chooseDocumentType = e => {\r\n    this.setState({ documentType: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Link\r\n          to=\"/documentation\"\r\n          className=\"backButton\"\r\n          style={{ position: \"absolute\", top: \"200px\", left: \"170px\" }}\r\n        >\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <div className=\"new-document\">\r\n          <h2 style={{ textAlign: \"center\" }}>Nowy dokument</h2>\r\n          <label style={{ width: \"70%\", margin: \"auto\" }}>\r\n            Typ dokumentu:\r\n            <select\r\n              name=\"document-type\"\r\n              onChange={this.chooseDocumentType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled>\r\n                Wybierz typ\r\n              </option>\r\n              <option value=\"usg\">Badanie USG</option>\r\n\r\n              <option value=\"ekg\">Badanie EKG</option>\r\n              <option value=\"echo\">Echo serca</option>\r\n              <option value=\"imaging\">Obrazowanie medyczne (TK/MRI)</option>\r\n              <option value=\"angiography\">Angiografia / Koronarografia</option>\r\n\r\n      \r\n            </select>\r\n          </label>\r\n\r\n          {this.state.documentType && (\r\n            <form className=\"document-form\">\r\n            \r\n              <label>\r\n                {\" \"}\r\n                Lekarz zlecający: <input type=\"text\" name=\"ordering-doctor\" />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Treść: <textarea />\r\n              </label>\r\n       \r\n                <label>\r\n                  {\" \"}\r\n                  Załączniki: <input type=\"file\" />\r\n                </label>\r\n              \r\n              <input type=\"submit\" value=\"Dodaj dokument\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewDocument;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from '../../DateParser'\r\n\r\nclass NewRecommendationForm extends Component {\r\n  state = {\r\n    dataSaved: false,\r\n\r\n    doctor: \"\",\r\n    content: \"\"\r\n  };\r\n  \r\n\r\n  toggleSave = e => {\r\n    e.preventDefault();\r\n\r\n    const { date, content } = e.target.parentElement;\r\n\r\n    this.setState({\r\n      dataSaved: !this.state.dataSaved,\r\n      content: content.value,\r\n      date: date.value\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n\r\n    return (\r\n\r\n   \r\n      <div className=\"container form-container\">\r\n        <h2>Nowe zalecenie</h2>\r\n        <Link\r\n          to=\"/recommendations\"\r\n          className=\"backButton\"\r\n          style={{ position: \"absolute\", top: \"200px\", left: \"170px\" }}\r\n        >\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <form>\r\n          <label>\r\n            Data:\r\n            <input type=\"date\" disabled={this.state.dataSaved} name=\"date\" id=\"date\" min={threeDaysAgo} max={today} defaultValue={today} />\r\n          </label> \r\n           <label>\r\n            Treść: <textarea disabled={this.state.dataSaved} name=\"content\" />\r\n          </label>\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.dataSaved ? \"Edytuj\" : \"Zapisz\"}\r\n            onClick={this.toggleSave}\r\n          />\r\n        </form>\r\n\r\n        <p>\r\n          Wygeneruj załącznik:{\" \"}\r\n          <Link to=\"/recommendations/create-new/generate-prescription\">\r\n            <button style={{ margin: \"10px\", width: \"150px\" }}>Recepta</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-sickleave\">\r\n            <button style={{ margin: \"10px\", width: \"150px\" }}>\r\n              Zwolnienie\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-referral\">\r\n            <button style={{ margin: \"10px\", width: \"150px\" }}>\r\n              Skierowanie\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-lab-order\">\r\n            <button style={{ margin: \"10px\", width: \"150px\" }}>\r\n              Zlecenie badania\r\n            </button>\r\n          </Link>\r\n        </p>\r\n        <button className=\"submit-button\">Dodaj zalecenie</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewRecommendationForm;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/NewAttachment.css\";\r\n\r\nclass NewAttachment extends Component {\r\n  render() {\r\n    const documentType = this.props.documentType;\r\n    return (\r\n      <div className=\"container\">\r\n        <Link\r\n          to=\"/recommendations/create-new\"\r\n          className=\"backButton\"\r\n          style={{ position: \"absolute\", top: \"200px\", left: \"170px\" }}\r\n        >\r\n          <button>Powrót</button>\r\n        </Link>\r\n        {documentType === \"prescription\" && (\r\n          <div>\r\n            <h2>Nowa recepta</h2>\r\n            <form className=\"attachment-form\">\r\n              <label>\r\n                Informacje o leku:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Nazwa, ilość, dawkowanie\"\r\n                  name=\"medicine\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Odpłatność: <input type=\"text\" name=\"payment\" required />\r\n              </label>\r\n              <label>\r\n                Data od dnia: <input type=\"date\" name=\"start-date\" />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"sickleave\" && (\r\n          <div>\r\n            <h2>Nowe zwolnienie lekarskie</h2>\r\n            <form className=\"attachment-form\">\r\n              <label>\r\n                Miejsce pracy:{\" \"}\r\n                <input type=\"text\" name=\"place-of-work\" required />\r\n              </label>\r\n              <label>\r\n                od: <input type=\"date\" name=\"start-date\" required />\r\n              </label>\r\n              <label>\r\n                do: <input type=\"date\" name=\"end-date\" required />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"referral\" && (\r\n          <div>\r\n            <h2>Nowe skierowanie</h2>\r\n            <form className=\"attachment-form\">\r\n              <label>\r\n                Skierowanie do:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"referral-type\"\r\n                  placeholder=\"poradni specjalistycznej, pracowni diagnostycznej\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Badanie:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"examination\"\r\n                  placeholder=\"konsultacja, badanie USG\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Rozpoznanie: <input type=\"text\" name=\"diagnosis\" required />\r\n              </label>\r\n              <label>\r\n                Cel: <input type=\"text\" name=\"aim\" required />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"lab-order\" && (\r\n          <div>\r\n            <h2>Nowe zlecenie na badanie</h2>\r\n            <form className=\"lab-order-form\">\r\n              <div className=\"tests\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"OB\" />\r\n                  OB\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"glukoza\" />\r\n                  Glukoza\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"LDL\" />\r\n                  LDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"HDL\" />\r\n                  HDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TG\" />\r\n                  Trójglicerydy\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"morfologia\" />\r\n                  Morfologia\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"magnez\" />\r\n                  Magnez\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"sód\" />\r\n                  Sód\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"potas\" />\r\n                  Potas\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"żelazo\" />\r\n                  Żelazo\r\n                </label>\r\n              </div>\r\n              {/* TO DO przesłanie dokumentu do bazy danych, powrót do ekranu dodawania nowego zalecenia z dodanym załącznikiem */}\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewAttachment;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Recommendations from \"../Recommendations\";\r\nimport MedicalProcess from \"../MedicalProcess\";\r\nimport Documentation from \"../Documentation\";\r\nimport NewDocument from \"./NewDocument\";\r\nimport Document from \"../Document\";\r\n\r\nimport SideBar from \"../SideBar\";\r\nimport \"../../css/PatientDoctorPage.css\";\r\nimport NewRecommendation from \"./NewRecommendation\";\r\nimport NewAttachment from \"./NewAttachemnt\";\r\n\r\nclass DoctorPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    patient: {\r\n      id: \"12345\",\r\n      name: \"Jan\",\r\n      surname: \"Kowalski\",\r\n      age: \"39\",\r\n      PESEL: \"80052212345\",\r\n      dob: \"22-05-1980\",\r\n      sex: \"M\",\r\n      address: \"ul. Tuwima 23, 73-123 Warszawa\",\r\n      icd10: \"G4.2, K13.1\"\r\n    }\r\n  };\r\n\r\n  searchPatient = e => {\r\n    e.preventDefault();\r\n    /* e.target.patientID.setCustomValidity(\r\n      \"Wprowadź poprawne 5-cyfrowe ID pacjenta\"\r\n    ); */\r\n    \r\n    this.setState({ patientID: e.target.patientID.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"ID-form\" onSubmit={this.searchPatient}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Wpisz ID pacjenta\"\r\n            name=\"patientID\"\r\n            pattern=\"[0-9]{5}\"\r\n          />\r\n          <input type=\"submit\" value=\"Znajdź pacjenta\" />\r\n        </form>\r\n\r\n        {this.state.patientID && (\r\n          <div>\r\n            <SideBar activeAccount=\"doctor\" patient={this.state.patient} />\r\n            <HashRouter>\r\n              <nav>\r\n                <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n                  Dokumentacja\r\n                </NavLink>\r\n                <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n                  Zalecenia lekarskie\r\n                </NavLink>\r\n                <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n                  Proces medyczny\r\n                </NavLink>\r\n              </nav>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-prescription\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"prescription\" />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-sickleave\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"sickleave\" />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-referral\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"referral\" />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-lab-order\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"lab-order\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/document:documentId\"\r\n                  component={Document}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new\"\r\n                  component={NewRecommendation}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/create-new\"\r\n                  component={NewDocument}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/documentation\"\r\n                  render={props => (\r\n                    <Documentation {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/recommendations\"\r\n                  render={props => (\r\n                    <Recommendations {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/medical-process\"\r\n                  render={props => (\r\n                    <MedicalProcess {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n\r\n                <Redirect from=\"/\" to=\"/documentation\" />\r\n              </Switch>\r\n            </HashRouter>\r\n            <div />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoctorPage;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/LabTechnicianPage.css\";\r\n\r\nclass LabTechnicianPage extends Component {\r\n  state = {\r\n    resultType: \"\",\r\n    results: []\r\n  };\r\n\r\n  chooseResultType = e => {\r\n    console.log(e.target.value);\r\n    this.setState({ resultType: e.target.value });\r\n  };\r\n\r\n  addParameter = e => {\r\n    e.preventDefault();\r\n    let name = document.querySelector(\"#parameter\").value;\r\n    let amount = document.querySelector(\"#result\").value;\r\n    if (amount) {\r\n      const newParameter = {\r\n        name,\r\n        amount\r\n      };\r\n      this.setState({ results: [...this.state.results, newParameter] });\r\n    document.querySelector(\"#result\").value = \"\";\r\n    }\r\n\r\n\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container lab-container\">\r\n        <h2>Dodaj wynik badania</h2>\r\n        <form className=\"form\">\r\n          <label htmlFor=\"patient-id\">\r\n            ID pacjenta{\" \"}\r\n            <input id=\"patient-id\" type=\"text\" required pattern=\"[0-9]{5}\" />\r\n          </label>\r\n          <label htmlFor=\"collection-date\">\r\n            Data pobrania{\" \"}\r\n            <input id=\"patient-id\" type=\"date\" />\r\n          </label>\r\n\r\n          <label>\r\n            Typ wyniku\r\n            <select\r\n              name=\"result-type\"\r\n              onChange={this.chooseResultType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled={true}>\r\n                Wybierz typ badania\r\n              </option>\r\n              <option value=\"morfologia\">Morfologia krwi</option>\r\n              <option value=\"biochemia\">Biochemia krwi</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.resultType && (\r\n            <div>\r\n              <div className=\"inner-form\">\r\n                <label>\r\n                  Wybierz parametr\r\n                  {this.state.resultType === \"morfologia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      <option value=\"HGB\">HGB</option>\r\n                      <option value=\"WGB\">WGB</option>\r\n                      <option value=\"RGB\">RGB</option>\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"biochemia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      <option value=\"LDL\">LDL</option>\r\n                      <option value=\"HDL\">HDL</option>\r\n                      <option value=\"Glukoza\">Glukoza</option>\r\n                      <option value=\"Kwas moczowy\">Kwas moczowy</option>\r\n                      <option value=\"Homocysteina\">Homocysteina</option>\r\n                    </select>\r\n                  )}\r\n                </label>\r\n                <label>\r\n                  Wartość\r\n                  <input type=\"text\" name=\"result\" id=\"result\" required/>\r\n                </label>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Dodaj parametr\"\r\n                  onClick={this.addParameter}\r\n                />\r\n              </div>\r\n\r\n              {this.state.results.length > 0 && (\r\n                <div className=\"table\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Lp</th>\r\n                        <th>Parametr</th>\r\n                        <th>Wartość</th>\r\n                        <th>Zakres</th>\r\n                        <th>Jednostka</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {this.state.results.map((item, i) => {\r\n                      return (\r\n                        <tbody key={i}>\r\n                          <tr>\r\n                            <td>{i + 1}</td>\r\n                            <td>{this.state.results[i].name}</td>\r\n                            <td>{this.state.results[i].amount}</td>\r\n                            <td>zakres</td>\r\n                            <td>jednostka</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      );\r\n                    })}\r\n                  </table>\r\n                  <input type=\"submit\" value=\"Zapisz i prześlij\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabTechnicianPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PatientPage from \"./Patient-Doctor/PatientPage\";\r\nimport DoctorPage from \"./Patient-Doctor/Doctor/DoctorPage\";\r\nimport LabTechnicianPage from \"./LabTechnician/LabTechnicianPage\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    activeAccount: localStorage.getItem(\"account\") || \"\",\r\n    isLoggedIn: true\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    //because setState is asynchronous\r\n    localStorage.setItem(\"loggedIn\", this.state.isLoggedIn);\r\n    localStorage.setItem(\"account\", this.state.activeAccount);\r\n  }\r\n\r\n  changeAccount = e => {\r\n    this.setState({ activeAccount: e.target.value });\r\n  };\r\n\r\n  logIn = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.login.value);\r\n    let activeAccount = \"\";\r\n    switch (e.target.login.value[0]) {\r\n      case \"P\":\r\n        activeAccount = \"patient\";\r\n        break;\r\n      case \"D\":\r\n        activeAccount = \"doctor\";\r\n        break;\r\n      case \"L\":\r\n        activeAccount = \"lab\";\r\n        break;\r\n      default:\r\n        activeAccount = \"\";\r\n    }\r\n    this.setState({ activeAccount, isLoggedIn: true });\r\n  };\r\n\r\n  logOut = () => {\r\n    this.setState({ activeAccount: \"\", isLoggedIn: false });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.isLoggedIn ? (\r\n          <div className=\"container login-container\">\r\n            <h2>Zaloguj się</h2>\r\n            <form onSubmit={this.logIn}>\r\n              <label htmlFor=\"login\">Użytkownik: </label>\r\n              <input type=\"text\" name=\"login\" pattern=\"[PDL]\\d{5}\" required />\r\n              <label htmlFor=\"password\">Hasło: </label>\r\n              <input type=\"password\" name=\"password\" required />\r\n              <input type=\"submit\" value=\"Zaloguj\" />\r\n            </form>\r\n            <p>Nie masz konta?</p>\r\n            <Link to=\"/register\">\r\n              <button>Zarejestruj się</button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"header\">\r\n            <div className=\"radio-buttons\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Patient\"\r\n                  value=\"patient\"\r\n                  checked={this.state.activeAccount === \"patient\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Pacjent\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Doctor\"\r\n                  value=\"doctor\"\r\n                  checked={this.state.activeAccount === \"doctor\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Lekarz\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Lab\"\r\n                  value=\"lab\"\r\n                  checked={this.state.activeAccount === \"lab\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Laborant\r\n              </label>\r\n            </div>\r\n\r\n            <button className=\"log-out\" onClick={this.logOut}>\r\n              Wyloguj się\r\n            </button>\r\n\r\n            {this.state.activeAccount === \"patient\" ? (\r\n              <PatientPage />\r\n            ) : this.state.activeAccount === \"doctor\" ? (\r\n              <DoctorPage />\r\n            ) : (\r\n              <LabTechnicianPage />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\n\r\nimport Main from \"./Main\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/\" component={Main} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n//basename - because of /dokumenty_cyfrowe_w_medycynie in url (gh-pages)\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}> \r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}