{"version":3,"sources":["Register.js","Patient-Doctor/Document.js","Patient-Doctor/MedicalProcess.js","Patient-Doctor/Documentation.js","Patient-Doctor/Recommendations.js","Patient-Doctor/SideBar.js","Patient-Doctor/NewRecommendationForm.js","Patient-Doctor/PatientPage.js","Patient-Doctor/DoctorPage.js","LabTechnician/LabTechnicianPage.js","Main.js","App.js","index.js"],"names":["Register","state","accountType","chooseAccountType","e","_this","setState","target","value","goBack","props","history","push","react_default","a","createElement","className","style","position","top","left","onClick","this","name","onChange","htmlFor","type","required","id","pattern","Fragment","Component","Document","documents","title","content","match","params","documentId","console","log","display","flexDirection","alignContent","textAlign","MedicalProcess","tasks","completed","details","addTask","preventDefault","newTask","concat","Object","toConsumableArray","setCompleted","index","map","task","i","_this2","activeAccount","onSubmit","placeholder","filter","key","Documentation","document","react_router_dom","fontWeight","textDecoration","to","Recommendations","recommendations","date","doctor","attachments","recommendation","attachment","margin","color","SideBar","toggleComplete","checked","disabled","NewRecommendationForm","PatientPage","Patient_Doctor_SideBar","activeClassName","react_router","exact","path","component","from","DoctorPage","patientID","searchPatient","render","Patient_Doctor_Documentation","assign","Patient_Doctor_Recommendations","Patient_Doctor_MedicalProcess","LabTechnicianPage","resultType","results","chooseResultType","addParameter","newParameter","querySelector","amount","defaultValue","length","item","Main","localStorage","getItem","isLoggedIn","changeAccount","logIn","login","logOut","setItem","Patient_Doctor_PatientPage","Patient_Doctor_DoctorPage","LabTechnician_LabTechnicianPage","App","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.ee89b05b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n/* import { withRouter } from 'react-router-dom'; */\r\n//import { history } from 'react-router-dom';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    accountType: \"patient\"\r\n  };\r\n\r\n  chooseAccountType = e => {\r\n    this.setState({ accountType: e.target.value });\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container register-container\">\r\n        <h2>Zarejestruj się</h2>\r\n        <button\r\n          style={{ position: \"absolute\", top: \"5%\", left: \"350px\" }}\r\n          onClick={this.goBack}\r\n        >\r\n          Powrót do logowania\r\n        </button>\r\n        <form>\r\n          <span>\r\n            <label>Typ konta: </label>\r\n            <select name=\"accoutType\" onChange={this.chooseAccountType}>\r\n              <option value=\"patient\">Pacjent</option>\r\n              <option value=\"doctor\">Lekarz</option>\r\n              <option value=\"lab\">Laborant</option>\r\n            </select>\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"name\">Imię </label>\r\n            <input type=\"text\" name=\"name\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"surname\">Nazwisko </label>\r\n            <input type=\"text\" name=\"surname\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"dob\">Data urodzenia </label>\r\n            <input type=\"date\" name=\"dob\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"pesel\">PESEL </label>\r\n            <input type=\"text\" name=\"pesel\" id=\"pesel\" required pattern=\"[0-9]{11}\"/>\r\n          </span>\r\n          {this.state.accountType === \"doctor\" && (\r\n            <>\r\n              {\" \"}\r\n              <span>\r\n                <label>Numer PWZ</label>\r\n                <input type=\"text\" name=\"PWZ\" required />\r\n              </span>\r\n              <span>\r\n                <label>Specjalizacja</label>\r\n                <input type=\"text\" name=\"specialization\" required />\r\n              </span>\r\n            </>\r\n          )}\r\n          <span>\r\n            <label htmlFor=\"password\">Hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n            />\r\n          </span>\r\n\r\n          {this.state.accountType === \"patient\" && (\r\n            <p>Wygenerowany dla Ciebie login to: P12345 </p>\r\n          )}\r\n          {this.state.accountType === \"doctor\" && (\r\n            <p>Wygenerowany dla Ciebie login to: D12321 </p>\r\n          )}\r\n          {this.state.accountType === \"lab\" && (\r\n            <p>Wygenerowany dla Ciebie login to: L10010 </p>\r\n          )}\r\n\r\n          <input type=\"submit\" value=\"Zarejestruj się\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Document extends Component {\r\n  state = {\r\n    documents: [\r\n      {\r\n        title: \"Wynik badania krwi 2019-03-15\",\r\n        id: 1,\r\n        content: \"Tabelka HTML z badaniami\"\r\n      },\r\n      {\r\n        title: \"Konsultacja kardiologiczna 2019-01-17\",\r\n        id: 2,\r\n        content: \"blablabla\"\r\n      },\r\n\r\n      {\r\n        title: \"Wypis ze szpitala 2018-12-11\",\r\n        id: 3,\r\n        content: \"Wypisik ze szpitala\"\r\n      },\r\n      {\r\n        title: \"Wynik badania EKG 2018-09-22\",\r\n        id: 4,\r\n        content: \"EKG zrobione!\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const id = this.props.match.params.documentId;\r\n    console.log(id);\r\n    return (\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignContent: \"center\",\r\n          textAlign: \"center\"\r\n        }}\r\n      >\r\n        <button onClick={this.goBack}>Powrót</button>\r\n        <p>{this.state.documents[id - 1].title}</p>\r\n        <p>{this.state.documents[id - 1].content}</p>\r\n        <button>Zapisz do PDF</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Document;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/MedicalProcess.css\";\r\nimport \"../css/App.css\";\r\n\r\nclass MedicalProcess extends Component {\r\n  state = {\r\n    tasks: [\r\n      {\r\n        title: \"Kontrola u lekarza prowadzącego\",\r\n        completed: false,\r\n        details: \"Za 2 tygodnie - w połowie kweitnia 2019 u dr Lubelskiej\"\r\n      },\r\n      {\r\n        title: \"Badanie USG\",\r\n        completed: false,\r\n        details: \"Zaplanowane na 15.04 16:00, Przychodnia XXX pokój 203\"\r\n      },\r\n      {\r\n        title: \"Wizyta u kardiologa\",\r\n        completed: true,\r\n        details: `13.03.2019, 9:00, opis wizyty (link?), zalecenia (link)`\r\n      }\r\n    ]\r\n  };\r\n\r\n  addTask = e => {\r\n    e.preventDefault();\r\n    const completed = e.target.completed.value === \"done\" ? true : false;\r\n\r\n    const newTask = {\r\n      title: e.target.title.value,\r\n      completed,\r\n      details: e.target.details.value\r\n    };\r\n\r\n    this.setState({ tasks: [...this.state.tasks, newTask] });\r\n    e.target.title.value = \"\";\r\n    e.target.details.value = \"\";\r\n  };\r\n\r\n  setCompleted = e => {\r\n    console.log(e.target.id);\r\n    const index = e.target.id;\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (i == index) {\r\n          task.completed = !task.completed;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container medical-process-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <form onSubmit={this.addTask}>\r\n            <input type=\"text\" placeholder=\"Tytuł\" name=\"title\" />\r\n\r\n            <select name=\"completed\">\r\n              <option value=\"done\">Wykonane</option>\r\n              <option value=\"todo\">Do zrobienia</option>\r\n            </select>\r\n            <textarea placeholder=\"Szczegóły\" name=\"details\" />\r\n            <input type=\"submit\" value=\"Dodaj\" />\r\n          </form>\r\n        )}\r\n        <div className=\"content\">\r\n          <h3>Do zrobienia</h3>\r\n          <ul>\r\n            {this.state.tasks\r\n              .filter(task => task.completed === false)\r\n              .map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <strong>{task.title}</strong>\r\n                    {this.props.activeAccount === \"doctor\" && (\r\n                      <button\r\n                        className=\"set-done\"\r\n                        id={i}\r\n                        onClick={this.setCompleted}\r\n                      >\r\n                        ✓\r\n                      </button>\r\n                    )}\r\n                    {this.props.activeAccount === \"doctor\" && (\r\n                      <button className=\"set-done\" id={i}>\r\n                        🖉\r\n                      </button>\r\n                    )}\r\n                    <br />\r\n                    {task.details}\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n          <hr />\r\n          <h3>Wykonane</h3>\r\n          <ul>\r\n            {this.state.tasks\r\n              .filter(task => task.completed === true)\r\n              .map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <strong>{task.title}</strong>\r\n                    {this.props.activeAccount === \"doctor\" && (\r\n                      <button className=\"set-done\" id={i}>\r\n                        🖉\r\n                      </button>\r\n                    )}\r\n                    <br />\r\n                    {task.details}\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicalProcess;\r\n","import React, { Component } from \"react\";\r\nimport '../css/Documentation.css';\r\nimport {Link } from 'react-router-dom'\r\n\r\n\r\nclass Documentation extends Component {\r\n\r\n  state = {\r\n    documents: [\r\n\r\n      {\r\n        title: \"Wynik badania krwi 2019-03-15\",\r\n        id: 1,\r\n        content: 'Tabelka HTML z badaniami'\r\n      },\r\n      {\r\n         title: \"Konsultacja kardiologiczna 2019-01-17\",\r\n         id: 2,\r\n         content: 'blablabla'\r\n\r\n      },\r\n\r\n       {\r\n       title: \"Wypis ze szpitala 2018-12-11\",\r\n       id: 3,\r\n       content: 'Wypisik ze szpitala'\r\n     },\r\n     {\r\n      title: \"Wynik badania EKG 2018-09-22\",\r\n      id: 4,\r\n      content: 'EKG zrobione!'\r\n     }\r\n    ]\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container documentation-container\">\r\n      {this.props.activeAccount === \"doctor\" && <button>Dodaj dokument</button>}\r\n      <form className=\"filterForm\">\r\n        <label>Filtruj po tagu: <select name=\"tags\">\r\n          <option value=\"wszystko\">Wszystko</option>\r\n          <option value=\"badania-krwi\">Badanie krwi</option>\r\n          <option value=\"badania-usg\">Badanie USG</option>\r\n         \r\n          <option value=\"badania-ekg\">Badanie EKG</option>\r\n          <option value=\"echo-serca\">Echo serca</option>\r\n          <option value=\"obrazowanie\">Obrazowanie medyczne (TK/MRI)</option>\r\n          <option value=\"angiografia\">Angiografia / Koronarogradia</option>\r\n          <option value=\"kardiologia\">Kardiologiczne</option>\r\n          <option value=\"wypis-szpital\">Wypis ze szpitala</option>\r\n\r\n\r\n          </select></label>\r\n        <label>Filtruj po dacie:  od <input type=\"date\"></input> do <input type=\"date\"/></label>\r\n        <input type=\"submit\" value=\"Filtruj\"></input>\r\n        </form>\r\n        <div className=\"documents content\">\r\n        <ul>\r\n        {this.state.documents.map((document, i) => {\r\n          \r\n          return( <li key={i}><Link style={{fontWeight: \"600\", textDecoration: \"underline\"}} to={`/documentation/document${document.id}`}>{document.title}</Link></li>)\r\n        })}\r\n\r\n\r\n        </ul>\r\n       \r\n        </div>\r\n   \r\n\r\n        \r\n      </div>\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Documentation;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Recommendations.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Recommendations extends Component {\r\n  state = {\r\n    recommendations: [\r\n      {\r\n        id: 1,\r\n        date: \"2019-01-02\",\r\n        doctor: \"dr Anna Nowak\",\r\n        content:\r\n          \"dieta niskokaloryczna, Lek XXX 200mg 2x1, Lek YYY 1x1, unikanie wysiłku, kontrola za 2 tygodnie\",\r\n        attachments: [\"receptaXXX\", \"receptaYYY\"]\r\n      },\r\n      {\r\n        id: 2,\r\n        date: \"2018-11-22\",\r\n        doctor: \"dr Artur Bąk\",\r\n        content: \"zwolnienie z pracy 2 tyg, pić dużo płynów\",\r\n        attachments: [\"zwolnienie-2211-0512\"]\r\n      },\r\n      {\r\n        id: 3,\r\n        date: \"2018-10-26\",\r\n        doctor: \"dr Joanna Lubelska\",\r\n        content: \"zrobić USG serca\",\r\n        attachments: [\"skierowanieUSG\"]\r\n      }\r\n    ]\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container recommendations-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <Link to=\"/recommendations/create-new\">\r\n            <button>Dodaj zalecenie</button>\r\n          </Link>\r\n        )}\r\n\r\n        <div className=\"content\">\r\n          {this.state.recommendations.map((recommendation, i) => {\r\n            return (\r\n              <div className=\"recommendation\" key={i}>\r\n                <p>Data: {recommendation.date} </p>\r\n                <p>Lekarz: {recommendation.doctor} </p>\r\n                <p>Treść: {recommendation.content}</p>\r\n                <p>\r\n                  Załączniki:{\" \"}\r\n                  {recommendation.attachments.map((attachment, i) => (\r\n                    <Link\r\n                      key={i}\r\n                      style={{\r\n                        margin: \"10px\",\r\n                        color: \"white\",\r\n                        textDecoration: \"underline\"\r\n                      }}\r\n                      to={`/recommendations/:${attachment}`}\r\n                    >\r\n                      {attachment}\r\n                    </Link>\r\n                  ))}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recommendations;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/SideBar.css\";\r\n\r\nclass SideBar extends Component {\r\n  state = {\r\n    tasks: [\r\n      {\r\n        title: \"Kontrola u lekarza prowadzącego\",\r\n        completed: false,\r\n        details: \"Za 2 tygodnie - w połowie kwietnia 2019 u dr Lubelskiej\"\r\n      },\r\n      {\r\n        title: \"Badanie USG\",\r\n        completed: false,\r\n        details: \"Zaplanowane na 15.04 16:00, Przychodnia XXX pokój 203\"\r\n      },\r\n      {\r\n        title: \"Wizyta u kardiologa\",\r\n        completed: true,\r\n        details: `13.03.2019, 9:00, opis wizyty (link?), zalecenia (link)`\r\n      }\r\n    ]\r\n  };\r\n\r\n  addTask = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.content.value);\r\n    const newTask = {\r\n      title: e.target.content.value,\r\n      completed: false,\r\n      details: \"\"\r\n    };\r\n\r\n    this.setState({ tasks: [...this.state.tasks, newTask] });\r\n    e.target.content.value = \"\";\r\n  };\r\n\r\n  toggleComplete = e => {\r\n    const index = e.target.id;\r\n    \r\n    \r\n    this.setState({tasks: this.state.tasks.map((task, i) => {\r\n     \r\n      if (i == index) {\r\n        task.completed = !task.completed;\r\n                   \r\n      }\r\n      return task;\r\n    })})\r\n     \r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"side-bar\">\r\n        <div className=\"patient-info\">\r\n          <h3>Dane osobowe</h3>\r\n\r\n          <ul>\r\n            <li>Imię i nazwisko: </li>\r\n            <li>PESEL: </li>\r\n            <li>Data urodzenia: </li>\r\n            <li>Adres: </li>\r\n            <li>Zdiagnozowane jednostki chorobowe: </li>\r\n          </ul>\r\n          {this.props.activeAccount === \"doctor\" && <button>Edytuj</button>}\r\n        </div>\r\n        <div className=\"todo-list\">\r\n          <h3>Zadania do wykonania</h3>\r\n          <ul>\r\n            {this.state.tasks.map((task, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.completed}\r\n                    onChange={this.toggleComplete}\r\n                    id={i}\r\n                    disabled={this.props.activeAccount !== \"doctor\"}\r\n                  />{\" \"}\r\n                  {task.title}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          {this.props.activeAccount === \"doctor\" && (\r\n            <form onSubmit={this.addTask}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Wpisz nowe zadanie\"\r\n                name=\"content\"\r\n              />\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NewRecommendationForm extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container form-container\">\r\n            <h2>Nowe zalecenie</h2>\r\n            <Link to=\"/recommendations\" className=\"backButton\" style={{ position: \"absolute\", top: \"200px\", left: \"170px\" }}><button>Powrót</button></Link>\r\n                <form>\r\n                    <label>Data: <input type=\"date\"></input></label>\r\n                    <label>Lekarz: <input type=\"text\"></input></label>\r\n                    <label>Treść: <textarea></textarea></label>\r\n              \r\n                   \r\n                    <input type=\"submit\" value=\"Zapisz\"></input>\r\n                </form>\r\n\r\n                <p>Załączniki: <Link style={{margin: \"10px\"}} to=\"/recommendations/create-new/generate-prescription\"><button>Wygeneruj receptę</button></Link>\r\n                <Link style={{margin: \"10px\"}} to=\"/recommendations/create-new/generate-sickleave\"><button>Wygeneruj zwolnienie</button></Link>\r\n                <Link style={{margin: \"10px\"}} to=\"/recommendations/create-new/generate-referral\"><button>Wygeneruj skierowanie</button></Link></p>\r\n                <button>Dodaj zalecenie</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default NewRecommendationForm;","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Document from \"./Document\";\r\n\r\nimport MedicalProcess from \"./MedicalProcess\";\r\nimport Documentation from \"./Documentation\";\r\nimport Recommendations from \"./Recommendations\";\r\nimport SideBar from \"./SideBar\";\r\nimport \"../css/PatientDoctorPage.css\";\r\nimport NewRecommendationForm from \"./NewRecommendationForm\";\r\n\r\nclass PatientPage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SideBar />\r\n\r\n        <HashRouter>\r\n          <nav>\r\n            <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n              Dokumentacja\r\n            </NavLink>\r\n            <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n              Zalecenia lekarskie\r\n            </NavLink>\r\n            <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n              Proces medyczny\r\n            </NavLink>\r\n          </nav>\r\n          <Switch>\r\n            <Route exact path=\"/documentation\" component={Documentation} />\r\n            <Route exact path=\"/recommendations\" component={Recommendations} />\r\n            <Route exact path=\"/medical-process\" component={MedicalProcess} />\r\n            <Route\r\n              exact\r\n              path=\"/documentation/document:documentId\"\r\n              component={Document}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/recommendations/create-new\"\r\n              component={NewRecommendationForm}\r\n            />\r\n             <Redirect from=\"/\" to=\"/documentation\" />  \r\n          </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PatientPage;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Recommendations from \"./Recommendations\";\r\nimport MedicalProcess from \"./MedicalProcess\";\r\nimport Documentation from \"./Documentation\";\r\n\r\nimport Document from \"./Document\";\r\n\r\nimport SideBar from \"./SideBar\";\r\nimport \"../css/PatientDoctorPage.css\";\r\nimport NewRecommendationForm from \"./NewRecommendationForm\";\r\n\r\nclass DoctorPage extends Component {\r\n  state = {\r\n    patientID: \"\"\r\n  };\r\n\r\n  searchPatient = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.patientID.value);\r\n    this.setState({ patientID: e.target.patientID.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"ID-form\" onSubmit={this.searchPatient}>\r\n          <input type=\"text\" placeholder=\"Wpisz ID pacjenta\" name=\"patientID\" />\r\n          <input type=\"submit\" value=\"Znajdź pacjenta\" />\r\n        </form>\r\n\r\n        {this.state.patientID && (\r\n          <div>\r\n            <SideBar activeAccount=\"doctor\" />\r\n            <HashRouter>\r\n              <nav>\r\n                <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n                  Dokumentacja\r\n                </NavLink>\r\n                <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n                  Zalecenia lekarskie\r\n                </NavLink>\r\n                <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n                  Proces medyczny\r\n                </NavLink>\r\n              </nav>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/document:documentId\"\r\n                  component={Document}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new\"\r\n                  component={NewRecommendationForm}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/documentation\"\r\n                  render={props => (\r\n                    <Documentation {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations\"\r\n                  render={props => (\r\n                    <Recommendations {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/medical-process\"\r\n                  render={props => (\r\n                    <MedicalProcess {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n\r\n                <Redirect from=\"/\" to=\"/documentation\" />\r\n              </Switch>\r\n            </HashRouter>\r\n            <div />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoctorPage;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/LabTechnicianPage.css\";\r\n\r\nclass LabTechnicianPage extends Component {\r\n  state = {\r\n    resultType: \"\",\r\n    results: []\r\n  };\r\n\r\n  chooseResultType = e => {\r\n    console.log(e.target.value);\r\n    this.setState({ resultType: e.target.value });\r\n  };\r\n\r\n  addParameter = e => {\r\n    e.preventDefault();\r\n    const name = document.querySelector(\"#parameter\").value;\r\n    const amount = document.querySelector(\"#result\").value;\r\n\r\n    const newParameter = {\r\n      name,\r\n      amount\r\n    };\r\n\r\n    this.setState({ results: [...this.state.results, newParameter] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container lab-container\">\r\n        <h2>Dodaj wynik badania</h2>\r\n        <form className=\"form\">\r\n          <label htmlFor=\"patient-id\">\r\n            ID pacjenta <input id=\"patient-id\" type=\"text\" required />\r\n          </label>\r\n\r\n          <label>\r\n            Typ wyniku\r\n            <select\r\n              name=\"result-type\"\r\n              onChange={this.chooseResultType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled={true}>\r\n                Wybierz typ badania\r\n              </option>\r\n              <option value=\"morfologia\">Morfologia krwi</option>\r\n              <option value=\"biochemia\">Biochemia krwi</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.resultType && (\r\n            <div>\r\n              <div className=\"inner-form\">\r\n                <label>\r\n                  Wybierz parametr\r\n                  {this.state.resultType === \"morfologia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      <option value=\"HGB\">HGB</option>\r\n                      <option value=\"WGB\">WGB</option>\r\n                      <option value=\"RGB\">RGB</option>\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"biochemia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      <option value=\"LDL\">LDL</option>\r\n                      <option value=\"HDL\">HDL</option>\r\n                      <option value=\"Glukoza\">Glukoza</option>\r\n                      <option value=\"Kwas moczowy\">Kwas moczowy</option>\r\n                      <option value=\"Homocysteina\">Homocysteina</option>\r\n                    </select>\r\n                  )}\r\n                </label>\r\n                <label>\r\n                  Wartość\r\n                  <input type=\"text\" name=\"result\" id=\"result\" />\r\n                </label>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Dodaj parametr\"\r\n                  onClick={this.addParameter}\r\n                />\r\n              </div>\r\n\r\n              {this.state.results.length > 0 && (\r\n                <div className=\"table\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Lp</th>\r\n                        <th>Parametr</th>\r\n                        <th>Wartość</th>\r\n                        <th>Zakres</th>\r\n                        <th>Jednostka</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {this.state.results.map((item, i) => {\r\n                      return (\r\n                        <tbody key={i}>\r\n                          <tr>\r\n                            <td>{i + 1}</td>\r\n                            <td>{this.state.results[i].name}</td>\r\n                            <td>{this.state.results[i].amount}</td>\r\n                            <td>zakres</td>\r\n                            <td>jednostka</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      );\r\n                    })}\r\n                  </table>\r\n                  <input type=\"submit\" value=\"Zapisz i prześlij\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabTechnicianPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PatientPage from \"./Patient-Doctor/PatientPage\";\r\nimport DoctorPage from \"./Patient-Doctor/DoctorPage\";\r\nimport LabTechnicianPage from \"./LabTechnician/LabTechnicianPage\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    activeAccount: localStorage.getItem(\"account\") || \"\",\r\n    isLoggedIn: false\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    //because setState is asynchronous\r\n    localStorage.setItem(\"loggedIn\", this.state.isLoggedIn);\r\n    localStorage.setItem(\"account\", this.state.activeAccount);\r\n  }\r\n\r\n  changeAccount = e => {\r\n    this.setState({ activeAccount: e.target.value });\r\n  };\r\n\r\n  logIn = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.login.value);\r\n    let activeAccount = \"\";\r\n    switch (e.target.login.value[0]) {\r\n      case \"P\":\r\n        activeAccount = \"patient\";\r\n        break;\r\n      case \"D\":\r\n        activeAccount = \"doctor\";\r\n        break;\r\n      case \"L\":\r\n        activeAccount = \"lab\";\r\n        break;\r\n      default:\r\n        activeAccount = \"\";\r\n    }\r\n    this.setState({ activeAccount, isLoggedIn: true });\r\n  };\r\n\r\n  logOut = () => {\r\n    this.setState({ activeAccount: \"\", isLoggedIn: false });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.isLoggedIn ? (\r\n          <div className=\"container login-container\">\r\n            <h2>Zaloguj się</h2>\r\n            <form onSubmit={this.logIn}>\r\n              <label htmlFor=\"name\">Użytkownik: </label>\r\n              <input type=\"text\" name=\"login\" pattern=\"[PDL]\\d{5}\" required />\r\n              <label htmlFor=\"password\">Hasło: </label>\r\n              <input type=\"password\" name=\"password\" required />\r\n              <input type=\"submit\" value=\"Zaloguj\" />\r\n            </form>\r\n            <p>Nie masz konta?</p>\r\n            <Link to=\"/register\">\r\n              <button>Zarejestruj się</button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"header\">\r\n            <div className=\"radio-buttons\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Patient\"\r\n                  value=\"patient\"\r\n                  checked={this.state.activeAccount === \"patient\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Pacjent\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Doctor\"\r\n                  value=\"doctor\"\r\n                  checked={this.state.activeAccount === \"doctor\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Lekarz\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Lab\"\r\n                  value=\"lab\"\r\n                  checked={this.state.activeAccount === \"lab\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Laborant\r\n              </label>\r\n            </div>\r\n\r\n            <button className=\"log-out\" onClick={this.logOut}>\r\n              Wyloguj się\r\n            </button>\r\n\r\n            {this.state.activeAccount === \"patient\" ? (\r\n              <PatientPage />\r\n            ) : this.state.activeAccount === \"doctor\" ? (\r\n              <DoctorPage />\r\n            ) : (\r\n              <LabTechnicianPage />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\n\r\nimport Main from \"./Main\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/\" component={Main} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n<BrowserRouter >\r\n<App />\r\n</BrowserRouter>\r\n, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}