{"version":3,"sources":["Register.js","Patient-Doctor/Document.js","Patient-Doctor/MedicalProcess.js","Patient-Doctor/Documentation.js","Patient-Doctor/Recommendations.js","Patient-Doctor/SideBar.js","Patient-Doctor/PatientPage.js","DateParser.js","Patient-Doctor/Doctor/NewDocument.js","Patient-Doctor/Doctor/NewRecommendation.js","Patient-Doctor/Doctor/NewAttachment.js","Patient-Doctor/Doctor/DoctorPage.js","LabTechnician/LabTechnicianPage.js","Main.js","App.js","index.js"],"names":["Register","state","accountType","chooseAccountType","e","_this","setState","target","value","goBack","props","history","push","validatePassword","password","document","getElementById","confirmPassword","setCustomValidity","registerUser","preventDefault","fetch","method","headers","Content-Type","body","JSON","stringify","name","surname","pesel","PWZ","specialization","dob","sex","address","react_default","a","createElement","className","onClick","this","onSubmit","onChange","htmlFor","type","required","id","pattern","Fragment","Component","Document","documents","_this2","then","result","json","data","currentDocument","_this3","length","forEach","console","log","_id","match","params","documentId","react_router_dom","to","style","fontWeight","title","includes","content","results","map","item","i","key","range","unit","MedicalProcess","tasks","activeAccount","addTask","placeholder","filter","task","completed","setCompleted","details","float","date","Documentation","sort","b","split","join","textDecoration","concat","Recommendations","recommendations","recommendation","doctor","attachedDocuments","attachment","margin","color","SideBar","patient","age","PESEL","dateOfBirth","telephone","icd10","checked","toggleComplete","disabled","PatientPage","patientID","Patient_Doctor_SideBar","activeClassName","react_router","exact","path","component","render","Patient_Doctor_MedicalProcess","Object","assign","from","transformDate","day","getDate","toString","month","getMonth","year","getYear","today","Date","threeDaysAgo","now","NewDocument","hour","getHours","minutes","getMinutes","transformDateTime","documentType","chooseDocumentType","createDocument","region","testDate","orderingDoctor","performingDoctor","position","top","left","textAlign","width","defaultValue","min","max","multiple","NewRecommendation","dataSaved","parse","localStorage","getItem","attachments","toggleSave","_callee","_e$target$parentEleme","regenerator_default","wrap","_context","prev","next","parentElement","setItem","stop","submitRecommendation","removeItem","NewAttachment","submitAttachment","attachedDocument","_e$target","startDate","_e$target2","medicine","payment","_e$target3","placeOfWork","endDate","_e$target4","place","examination","diagnosis","aim","checkboxes","labTests","t0","issueDate","abrupt","toConsumableArray","test","checkbox","DoctorPage","response","addTaskFromSideBar","isCompleted","searchPatient","_callee2","_context2","Doctor_NewAttachment","Patient_Doctor_Documentation","Patient_Doctor_Recommendations","LabTechnicianPage","resultType","chooseResultType","addParameter","querySelector","newParameter","submitResult","collectionDate","labPatientID","window","location","reload","Main","isLoggedIn","changeAccount","logIn","login","innerHTML","logOut","Patient_Doctor_PatientPage","Doctor_DoctorPage","LabTechnician_LabTechnicianPage","App","ReactDOM","basename","process","src_App"],"mappings":"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","file":"static/js/main.95dbcfc4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n/* import { withRouter } from 'react-router-dom'; */\r\n//import { history } from 'react-router-dom';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    accountType: \"patient\"\r\n  };\r\n\r\n  chooseAccountType = e => {\r\n    this.setState({ accountType: e.target.value });\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  validatePassword = () => {\r\n    let password = document.getElementById(\"password\");\r\n    let confirmPassword = document.getElementById(\"confirm-password\");\r\n\r\n    if (password.value !== confirmPassword.value) {\r\n      confirmPassword.setCustomValidity(\"Hasła nie są jednakowe\");\r\n    } else {\r\n      confirmPassword.setCustomValidity(\"\");\r\n    }\r\n  };\r\n\r\n  registerUser = e => {\r\n    e.preventDefault();\r\n    if (this.state.accountType === \"doctor\") {\r\n      fetch(\"https://medical-documentation.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          accountType: this.state.accountType,\r\n          name: e.target.name.value,\r\n          surname: e.target.surname.value,\r\n          pesel: e.target.pesel.value,\r\n          PWZ: e.target.PWZ.value,\r\n          specialization: e.target.specialization.value,\r\n          password: e.target.password.value\r\n        })\r\n      });\r\n    } else {\r\n      fetch(\"https://medical-documentation.herokuapp.com/register\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          accountType: this.state.accountType,\r\n          name: e.target.name.value,\r\n          surname: e.target.surname.value,\r\n          pesel: e.target.pesel.value,\r\n          dob: e.target.dob.value,\r\n          sex: e.target.sex.value,\r\n          address: e.target.address.value,\r\n          password: e.target.password.value\r\n        })\r\n      });\r\n    }\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container register-container\">\r\n        <h2>Zarejestruj się</h2>\r\n        <button className=\"backButton\" onClick={this.goBack}>\r\n          Powrót do logowania\r\n        </button>\r\n        <form onSubmit={this.registerUser}>\r\n          <span>\r\n            <label>Typ konta: </label>\r\n            <select name=\"accountType\" onChange={this.chooseAccountType}>\r\n              <option value=\"patient\">Pacjent</option>\r\n              <option value=\"doctor\">Lekarz</option>\r\n              <option value=\"lab\">Laborant</option>\r\n            </select>\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"name\">Imię </label>\r\n            <input type=\"text\" name=\"name\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"surname\">Nazwisko </label>\r\n            <input type=\"text\" name=\"surname\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"surname\">Płeć </label>\r\n            <input type=\"text\" name=\"sex\" required />\r\n          </span>\r\n          {this.state.accountType !== \"doctor\" && (\r\n            <span>\r\n              <label htmlFor=\"dob\">Data urodzenia </label>\r\n              <input type=\"date\" name=\"dob\" required />\r\n            </span>\r\n          )}\r\n          <span>\r\n            <label htmlFor=\"pesel\">PESEL </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"pesel\"\r\n              id=\"pesel\"\r\n              required\r\n              pattern=\"[0-9]{11}\"\r\n            />\r\n          </span>\r\n          {this.state.accountType === \"doctor\" && (\r\n            <>\r\n              {\" \"}\r\n              <span>\r\n                <label>Numer PWZ</label>\r\n                <input type=\"text\" name=\"PWZ\" required />\r\n              </span>\r\n              <span>\r\n                <label>Specjalizacja</label>\r\n                <input type=\"text\" name=\"specialization\" required />\r\n              </span>\r\n            </>\r\n          )}\r\n          <span>\r\n            <label htmlFor=\"surname\">Adres </label>\r\n            <input type=\"text\" name=\"address\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"password\">Hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"password\"\r\n              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"password\">Powtórz hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"confirm-password\"\r\n              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n              onChange={this.validatePassword}\r\n            />\r\n          </span>\r\n\r\n          {this.state.accountType === \"patient\" && (\r\n            <p>Wygenerowany dla Ciebie login to: P12345 </p>\r\n          )}\r\n          {this.state.accountType === \"doctor\" && (\r\n            <p>Wygenerowany dla Ciebie login to: D12321 </p>\r\n          )}\r\n          {this.state.accountType === \"lab\" && (\r\n            <p>Wygenerowany dla Ciebie login to: L10010 </p>\r\n          )}\r\n\r\n          <input type=\"submit\" value=\"Zarejestruj się\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Document.css\";\r\n\r\nclass Document extends Component {\r\n  state = {\r\n    documents: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data }));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.documents.length) {\r\n      // console.log(this.state.documents);\r\n      let currentDocument;\r\n      this.state.documents.forEach(document => {\r\n        console.log(document);\r\n        if (document._id === this.props.match.params.documentId) {\r\n          currentDocument = document;\r\n        }\r\n      });\r\n\r\n      console.log(currentDocument);\r\n      return (\r\n        <div className=\"container document-container\">\r\n          <Link\r\n            to=\"/documentation\"\r\n            className=\"backButton\"\r\n\r\n          >\r\n            <button>Powrót</button>\r\n          </Link>\r\n          <p style={{ fontWeight: \"700\" }}>{currentDocument.title}</p>\r\n          {!currentDocument.title.includes(\"Badanie krwi\") && (\r\n            <p>{currentDocument.content}</p>\r\n          )}\r\n          {currentDocument.title.includes(\"Badanie krwi\") && (\r\n            <div className=\"table\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Lp</th>\r\n                    <th>Parametr</th>\r\n                    <th>Wartość</th>\r\n                    <th>Zakres</th>\r\n                    <th>Jednostka</th>\r\n                  </tr>\r\n                </thead>\r\n                {currentDocument.results.map((item, i) => {\r\n                  return (\r\n                    <tbody key={i}>\r\n                      <tr>\r\n                        <td>{i + 1}</td>\r\n                        <td>{currentDocument.results[i].name}</td>\r\n                        <td>{currentDocument.results[i].value}</td>\r\n                        <td>{currentDocument.results[i].range}</td>\r\n                        <td>{currentDocument.results[i].unit}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </table>\r\n            </div>\r\n          )}\r\n          <button>Zapisz do PDF</button>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Document;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/MedicalProcess.css\";\r\nimport \"../css/App.css\";\r\n\r\n\r\nclass MedicalProcess extends Component {\r\n  state = {\r\n    tasks: []\r\n  };\r\n  \r\n  render() {\r\n  \r\n    return (\r\n      <div className=\"container medical-process-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <form onSubmit={this.props.addTask}>\r\n            <input type=\"text\" placeholder=\"Tytuł\" name=\"title\" />\r\n            <select name=\"completed\">\r\n              <option value=\"done\">Wykonane</option>\r\n              <option value=\"todo\">Do zrobienia</option>\r\n            </select>\r\n            Data: <input type=\"datetime-local\" name=\"date\" />\r\n            <textarea placeholder=\"Szczegóły\" name=\"details\" />\r\n            <input type=\"submit\" value=\"Dodaj zadanie\" />\r\n          </form>\r\n        )}\r\n        <div className=\"content\">\r\n          <h3>Do zrobienia</h3>\r\n          <ul>\r\n            {this.props.tasks\r\n              .filter(task => task.completed === false)\r\n              .map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <strong>{task.title}</strong>\r\n                    {this.props.activeAccount === \"doctor\" && (\r\n                      <button\r\n                        className=\"set-done\"\r\n                        id={task._id}\r\n                        onClick={this.props.setCompleted}\r\n                      >\r\n                        ✓\r\n                      </button>\r\n                    )}\r\n\r\n                    <button className=\"edit\" id={i}>\r\n                      🖉\r\n                    </button>\r\n\r\n                    <br />\r\n                    {task.details}\r\n                    <span style={{ float: \"right\" }}>{task.date}</span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n          <hr />\r\n          <h3>Wykonane</h3>\r\n          <ul>\r\n            {this.props.tasks\r\n              .filter(task => task.completed === true)\r\n              .map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <strong>{task.title}</strong>\r\n\r\n                    <button className=\"edit\" id={i}>\r\n                      🖉\r\n                    </button>\r\n\r\n                    <br />\r\n                    {task.details}\r\n                    <span style={{ float: \"right\" }}>{task.date}</span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicalProcess;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Documentation.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Documentation extends Component {\r\n  state = {\r\n    documents: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data }));\r\n\r\n    //TODO sort by date\r\n  }\r\n\r\n  sort = (a, b) => {\r\n    a.date = a.date.split(\"-\").join(\"\");\r\n    b.date = b.date.split(\"-\").join(\"\");\r\n    return a.date > b.date ? 1 : a.date < b.date ? -1 : 0;\r\n  };\r\n\r\n  render() {\r\n    //this.state.documents.sort();\r\n\r\n    return (\r\n      <div className=\"container documentation-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <Link to=\"documentation/create-new\">\r\n            <button>Dodaj wynik badania</button>\r\n          </Link>\r\n        )}\r\n        <form className=\"filterForm\">\r\n          <label>\r\n            Filtruj po tagu:{\" \"}\r\n            <select name=\"tags\">\r\n              <option value=\"all\">Wszystko</option>\r\n              <option value=\"blood-test\">Badanie krwi</option>\r\n              <option value=\"usg\">Badanie USG</option>\r\n\r\n              <option value=\"ekg\">Badanie EKG</option>\r\n              <option value=\"echo\">Echo serca</option>\r\n              <option value=\"imaging\">Obrazowanie medyczne (TK/MRI)</option>\r\n              <option value=\"angiography\">Angiografia / Koronarografia</option>\r\n              <option value=\"cardiology\">Kardiologiczne</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Filtruj po dacie: od <input type=\"date\" /> do <input type=\"date\" />\r\n          </label>\r\n          <input type=\"submit\" value=\"Filtruj\" />\r\n        </form>\r\n        <div className=\"documents content\">\r\n          <ul>\r\n            {this.state.documents.map((document, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <Link\r\n                    style={{ fontWeight: \"600\", textDecoration: \"underline\" }}\r\n                    to={`/documentation/document${document._id}`}\r\n                  >\r\n                    {document.title}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Documentation;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Recommendations.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Recommendations extends Component {\r\n  state = {\r\n    recommendations: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/recommendations\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ recommendations: data }));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container recommendations-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <Link to=\"/recommendations/create-new\">\r\n            <button>Dodaj zalecenie</button>\r\n          </Link>\r\n        )}\r\n\r\n        <div className=\"content\">\r\n          {this.state.recommendations.map((recommendation, i) => {\r\n            return (\r\n              <div className=\"recommendation\" key={i}>\r\n                <p>Data: {recommendation.date} </p>\r\n                <p>Lekarz: {recommendation.doctor} </p>\r\n                <p>Treść: {recommendation.content}</p>\r\n                <p>\r\n                  Załączone dokumenty:{\" \"}\r\n                  {recommendation.attachedDocuments.map((attachment, i) => (\r\n                    <Link\r\n                      key={i}\r\n                      style={{\r\n                        margin: \"10px\",\r\n                        color: \"white\",\r\n                        textDecoration: \"underline\"\r\n                      }}\r\n                      to={`/recommendations/attached-document-:${attachment.id}`}\r\n                    >\r\n                      {attachment.title}\r\n                    </Link>\r\n                  ))}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recommendations;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/SideBar.css\";\r\n\r\nclass SideBar extends Component {\r\n  state = {\r\n    patient: [],\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/patient\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ patient: data }));\r\n  }\r\n\r\n  render() {\r\n    const patient = this.state.patient;\r\n    return (\r\n      <div className=\"side-bar\">\r\n        <div className=\"patient-info\">\r\n          <h3>Dane osobowe</h3>\r\n\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Imię i nazwisko: </td>\r\n                <td>\r\n                  {\" \"}\r\n                  {patient.name} {patient.surname}{\" \"}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Płeć: </td>\r\n                <td> {patient.sex} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Wiek: </td>\r\n                <td> {patient.age} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>PESEL: </td>\r\n                <td> {patient.PESEL} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Data urodzenia: </td>\r\n                <td> {patient.dateOfBirth} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Adres: </td>\r\n                <td> {patient.address} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Telefon: </td>\r\n                <td> {patient.telephone} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>ICD10: </td>\r\n                <td> {patient.icd10} </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          {this.props.activeAccount === \"doctor\" && <button>Edytuj</button>}\r\n        </div>\r\n        <div className=\"todo-list\">\r\n          <h3>Zadania do wykonania</h3>\r\n          <ul>\r\n            {this.props.tasks.map((task, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.completed}\r\n                    onChange={this.props.toggleComplete}\r\n                    id={task._id}\r\n                    disabled={this.props.activeAccount !== \"doctor\"}\r\n                  />{\" \"}\r\n                  {task.title}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          {this.props.activeAccount === \"doctor\" && (\r\n            <form onSubmit={this.props.addTask}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Wpisz nowe zadanie\"\r\n                name=\"title\"\r\n              />\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Document from \"./Document\";\r\nimport MedicalProcess from \"./MedicalProcess\";\r\nimport Documentation from \"./Documentation\";\r\nimport Recommendations from \"./Recommendations\";\r\nimport SideBar from \"./SideBar\";\r\nimport \"../css/PatientDoctorPage.css\";\r\n\r\nclass PatientPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SideBar tasks={this.state.tasks} />\r\n\r\n        <HashRouter>\r\n          <nav>\r\n            <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n              Dokumentacja\r\n            </NavLink>\r\n            <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n              Zalecenia lekarskie\r\n            </NavLink>\r\n            <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n              Proces medyczny\r\n            </NavLink>\r\n          </nav>\r\n          <Switch>\r\n            <Route exact path=\"/documentation\" component={Documentation} />\r\n            <Route exact path=\"/recommendations\" component={Recommendations} />\r\n            <Route\r\n              path=\"/medical-process\"\r\n              render={props => (\r\n                <MedicalProcess {...props} tasks={this.state.tasks} />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/documentation/document:documentId\"\r\n              component={Document}\r\n            />\r\n\r\n            <Redirect from=\"/\" to=\"/documentation\" />\r\n          </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PatientPage;\r\n","const transformDateTime = date => {\r\n  const day = `${\r\n    date.getDate().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMonth()+1}`;\r\n  const year = date.getYear() - 100;\r\n  const hour = `${\r\n    date.getHours().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getHours()}`;\r\n  const minutes = `${\r\n    date.getMinutes().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMinutes()}`;\r\n\r\n  return `20${year}-${month}-${day} ${hour}:${minutes}`;\r\n};\r\n\r\nconst transformDate = date => {\r\n  const day = `${\r\n    date.getDate().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMonth()+1}`;\r\n  const year = date.getYear() - 100;\r\n  return `20${year}-${month}-${day}`;\r\n};\r\n\r\n/* const transformFromDB = date => {\r\n  if (date !== null) {\r\n    const dateTime = date.split(\"T\");\r\n    const time = dateTime[1].slice(0, 5);\r\n    return `${dateTime[0]} ${time}`\r\n    \r\n  }\r\n\r\n}; */\r\n\r\n/* const sort = (a, b) => {\r\n  a.date = a.date.split('-').join('');\r\n  b.date = b.date.split('-').join('');\r\n  return a.date > b.date ? 1 : a.date < b.date ? -1 : 0;\r\n}\r\n */\r\nconst today = transformDate(new Date());\r\nconst threeDaysAgo = transformDate(new Date(Date.now() - 3 * 24 * 3600 * 1000));\r\nconst now = transformDateTime(new Date());\r\n\r\nexport { today, threeDaysAgo, now, transformDate, transformDateTime };\r\n","import React, { Component } from \"react\";\r\nimport \"../../css/NewDocument.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\nclass NewDocument extends Component {\r\n  state = {\r\n    documentType: \"\"\r\n  };\r\n\r\n  chooseDocumentType = e => {\r\n    this.setState({ documentType: e.target.value });\r\n  };\r\n\r\n  createDocument = e => {\r\n    //console.log(e.target);\r\n    e.preventDefault();\r\n    const title = `${this.state.documentType}: ${\r\n      e.target.region ? e.target.region.value : \"\"\r\n    }  ${e.target.testDate.value.split('T')[0]}`;\r\n    console.log(title);\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-document\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        documentType: this.state.documentType,\r\n        title,\r\n        testDate: e.target.testDate.value.split('T').join(' '),\r\n        \r\n        orderingDoctor: e.target.orderingDoctor.value,\r\n        performingDoctor: e.target.performingDoctor.value,\r\n        content: e.target.content.value\r\n      })\r\n    });\r\n\r\n    this.props.history.push(\"/documentation\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Link\r\n          to=\"/documentation\"\r\n          className=\"backButton\"\r\n          style={{ position: \"absolute\", top: \"2%\", left: \"30px\" }}\r\n        >\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <div className=\"new-document\">\r\n          <h2 style={{ textAlign: \"center\" }}>Nowy dokument</h2>\r\n          <label style={{ width: \"70%\", margin: \"auto\" }}>\r\n            Typ dokumentu:\r\n            <select\r\n              name=\"documentType\"\r\n              onChange={this.chooseDocumentType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled>\r\n                Wybierz typ\r\n              </option>\r\n              <option value=\"Badanie USG\">Badanie USG</option>\r\n\r\n              <option value=\"Badanie EKG\">Badanie EKG</option>\r\n              <option value=\"Echokardiografia\">Echokardiografia</option>\r\n              <option value=\"Tomografia komputerowa\">\r\n                Tomografia komputerowa\r\n              </option>\r\n              <option value=\"Rezonans magnetyczny\">Rezonans magnetyczny</option>\r\n              <option value=\"Angiografia\">Angiografia / Koronarografia</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.documentType && (\r\n            <form className=\"document-form\" onSubmit={this.createDocument}>\r\n              {(this.state.documentType === \"Rezonans magnetyczny\" ||\r\n                this.state.documentType === \"Tomografia komputerowa\") && (\r\n                <label>\r\n                  {\" \"}\r\n                  Badany obszar: <input type=\"text\" name=\"region\" required />\r\n                </label>\r\n              )}\r\n\r\n              <label>\r\n                {\" \"}\r\n                Data badania:{\" \"}\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  name=\"testDate\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                  required\r\n                />\r\n              </label>\r\n            \r\n\r\n              <label>\r\n                {\" \"}\r\n                Lekarz zlecający:{\" \"}\r\n                <input type=\"text\" name=\"orderingDoctor\" required />\r\n              </label>\r\n\r\n              <label>\r\n                {\" \"}\r\n                Lekarz wykonujący:{\" \"}\r\n                <input type=\"text\" name=\"performingDoctor\" required />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Treść: <textarea required name=\"content\" />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Załączniki: <input type=\"file\" multiple=\"multiple\" />\r\n              </label>\r\n\r\n              <input type=\"submit\" value=\"Dodaj dokument\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewDocument;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\nimport \"../../css/NewRecommendation.css\";\r\n\r\nclass NewRecommendation extends Component {\r\n  state = {\r\n    dataSaved: JSON.parse(localStorage.getItem(\"saved\")),\r\n    data: JSON.parse(localStorage.getItem(\"recommendationData\")) || {},\r\n    attachments: JSON.parse(localStorage.getItem(\"attachments\")) || []\r\n  };\r\n\r\n  toggleSave = async e => {\r\n    e.preventDefault();\r\n\r\n    const { date, content } = e.target.parentElement;\r\n    if (!this.state.dataSaved) {\r\n      await this.setState({\r\n        dataSaved: true,\r\n        data: {\r\n          content: content.value,\r\n          date: date.value\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        dataSaved: false,\r\n        data: {\r\n          content: \"\",\r\n          date: \"\"\r\n        }\r\n      });\r\n    }\r\n    await localStorage.setItem(\r\n      \"recommendationData\",\r\n      JSON.stringify(this.state.data)\r\n    );\r\n    await localStorage.setItem(\"saved\", JSON.stringify(this.state.dataSaved));\r\n  };\r\n\r\n  submitRecommendation = () => {\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-recommendation\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        date: document.getElementById(\"date\").value,\r\n        content: document.getElementById(\"content\").value,\r\n        attachments: this.state.attachments\r\n      })\r\n    });\r\n    localStorage.removeItem(\"saved\");\r\n    localStorage.removeItem(\"recommendationData\");\r\n    localStorage.removeItem(\"attachments\");\r\n    this.props.history.push(\"/recommendations\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container form-container\">\r\n        <h2>Nowe zalecenie</h2>\r\n        <Link to=\"/recommendations\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <form>\r\n          <label>\r\n            Data:\r\n            <input\r\n              type=\"date\"\r\n              disabled={this.state.dataSaved}\r\n              name=\"date\"\r\n              id=\"date\"\r\n              min={threeDaysAgo}\r\n              max={today}\r\n              defaultValue={this.state.data.date || today}\r\n            />\r\n          </label>\r\n          <label>\r\n            Treść:{\" \"}\r\n            <textarea\r\n              id=\"content\"\r\n              disabled={this.state.dataSaved}\r\n              name=\"content\"\r\n              defaultValue={this.state.data.content || \"\"}\r\n            />\r\n          </label>\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.dataSaved ? \"Edytuj\" : \"Zapisz\"}\r\n            onClick={this.toggleSave}\r\n          />\r\n        </form>\r\n        {this.state.attachments && (\r\n          <p className=\"attachments-info\">\r\n            Załączniki:\r\n            {this.state.attachments.map((attachment, i) => {\r\n              return (\r\n                <Link\r\n                  key={i}\r\n                  className=\"attachments\"\r\n                  to=\"/recommendations/attachments/:document\"\r\n                >\r\n                  {attachment.title}\r\n                </Link>\r\n              );\r\n            })}\r\n          </p>\r\n        )}\r\n        <p>\r\n          Wygeneruj załącznik:{\" \"}\r\n          <Link to=\"/recommendations/create-new/generate-prescription\">\r\n            <button className=\"attachment-button\">Recepta</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-sickleave\">\r\n            <button className=\"attachment-button\">Zwolnienie</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-referral\">\r\n            <button className=\"attachment-button\">Skierowanie</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-lab-order\">\r\n            <button className=\"attachment-button\">Zlecenie badania</button>\r\n          </Link>\r\n        </p>\r\n        <button className=\"submit-button\" onClick={this.submitRecommendation}>\r\n          Dodaj zalecenie\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewRecommendation;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/NewAttachment.css\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\n\r\nclass NewAttachment extends Component {\r\n  submitAttachment = async e => {\r\n    e.preventDefault();\r\n\r\n    let attachedDocument = {};\r\n    const { date, startDate } = e.target;\r\n    switch (this.props.documentType) {\r\n      case \"prescription\":\r\n        const { medicine, payment } = e.target;\r\n        attachedDocument = {\r\n          title: `Recepta ${medicine.value}`,\r\n          medicine: medicine.value,\r\n          payment: payment.value,\r\n          issueDate: date.value,\r\n          startDate: startDate.value,\r\n          type: \"recepta\",\r\n\r\n        };\r\n        break;\r\n      case \"sickleave\":\r\n        const { placeOfWork, endDate } = e.target;\r\n        attachedDocument = {\r\n          title: `Zwolnienie ${startDate.value}-${endDate.value}`,\r\n          issueDate: date.value,\r\n          placeOfWork: placeOfWork.value,\r\n          startDate: startDate.value,\r\n          endDate: endDate.value,\r\n          type: \"zwolnienie\",\r\n\r\n        };\r\n        break;\r\n\r\n      case \"referral\":\r\n        const { place, examination, diagnosis, aim } = e.target;\r\n        attachedDocument = {\r\n          title: `Skierowanie do ${place.value}`,\r\n          issueDate: date.value,\r\n          place: place.value,\r\n          examination: examination.value,\r\n          diagnosis: diagnosis.value,\r\n          aim: aim.value,\r\n          type: \"skierowanie\",\r\n\r\n        };\r\n        break;\r\n      case \"lab-order\":\r\n        const checkboxes = [...e.target.test];\r\n        const labTests = checkboxes\r\n          .filter(checkbox => checkbox.checked === true)\r\n          .map(checkbox => checkbox.value);\r\n\r\n        console.log(labTests);\r\n        attachedDocument = {\r\n          title: `Zlecenie badań laboratoryjnych ${date.value}`,\r\n          labTests: labTests,\r\n          type: \"zlecenie badań\",\r\n\r\n          };\r\n         break;\r\n        default:\r\n        return;\r\n    }\r\n\r\n    await fetch(\"https://medical-documentation.herokuapp.com/attach-document\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(attachedDocument)\r\n    })\r\n     .then(result => result.json())\r\n      .then(data => attachedDocument.id = data);\r\n    console.log(attachedDocument.id);\r\n    let attachments = JSON.parse(localStorage.getItem(\"attachments\")) || [];\r\n    attachments.push(attachedDocument);\r\n    localStorage.setItem(\"attachments\", JSON.stringify(attachments));\r\n    this.props.history.push(\"/recommendations/create-new\");\r\n  };\r\n\r\n  render() {\r\n    const documentType = this.props.documentType;\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to=\"/recommendations/create-new\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        {documentType === \"prescription\" && (\r\n          <div>\r\n            <h2>Nowa recepta</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Informacje o leku:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Nazwa, ilość, dawkowanie\"\r\n                  name=\"medicine\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Odpłatność: <input type=\"text\" name=\"payment\" required />\r\n              </label>\r\n              <label>\r\n                Data od dnia: <input type=\"date\" name=\"startDate\" />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"sickleave\" && (\r\n          <div>\r\n            <h2>Nowe zwolnienie lekarskie</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Miejsce pracy: <input type=\"text\" name=\"placeOfWork\" required />\r\n              </label>\r\n              <label>\r\n                od:{\" \"}\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"startDate\"\r\n                  min={threeDaysAgo}\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                do: <input type=\"date\" name=\"endDate\" required />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"referral\" && (\r\n          <div>\r\n            <h2>Nowe skierowanie</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Skierowanie do:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"place\"\r\n                  placeholder=\"poradni specjalistycznej, pracowni diagnostycznej\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Badanie:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"examination\"\r\n                  placeholder=\"konsultacja, badanie USG\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Rozpoznanie: <input type=\"text\" name=\"diagnosis\" required />\r\n              </label>\r\n              <label>\r\n                Cel: <input type=\"text\" name=\"aim\" required />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"lab-order\" && (\r\n          <div>\r\n            <h2>Nowe zlecenie na badanie</h2>\r\n            <form className=\"lab-order-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <div className=\"tests\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"OB\" />\r\n                  OB\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Glukoza\" />\r\n                  Glukoza\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"LDL\" />\r\n                  LDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"HDL\" />\r\n                  HDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TG\" />\r\n                  Trójglicerydy\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Morfologia\" />\r\n                  Morfologia\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Magnez\" />\r\n                  Magnez\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Sód\" />\r\n                  Sód\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Potas\" />\r\n                  Potas\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Żelazo\" />\r\n                  Żelazo\r\n                </label>\r\n              </div>\r\n\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewAttachment;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Recommendations from \"../Recommendations\";\r\nimport MedicalProcess from \"../MedicalProcess\";\r\nimport Documentation from \"../Documentation\";\r\nimport NewDocument from \"./NewDocument\";\r\nimport Document from \"../Document\";\r\n\r\nimport SideBar from \"../SideBar\";\r\nimport \"../../css/PatientDoctorPage.css\";\r\nimport NewRecommendation from \"./NewRecommendation\";\r\nimport NewAttachment from \"./NewAttachment\";\r\n\r\nclass DoctorPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  }\r\n  //MEDICAL PROCESS\r\n  addTask = async e => {\r\n    e.preventDefault();\r\n    const completed = e.target.completed.value === \"done\" ? true : false;\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-task\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: e.target.title.value,\r\n        date: e.target.date.value.split(\"T\").join(\" \"),\r\n        completed,\r\n        details: e.target.details.value\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n\r\n    e.target.title.value = \"\";\r\n    e.target.details.value = \"\";\r\n    e.target.date.value = \"\";\r\n  };\r\n\r\n  setCompleted = e => {\r\n    console.log(e.target.id);\r\n    const id = e.target.id;\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = true;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id })\r\n    });\r\n  };\r\n  //SIDE BAR\r\n  addTaskFromSideBar = e => {\r\n    e.preventDefault();\r\n\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-task\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: e.target.title.value,\r\n        date: \"\",\r\n        completed: false,\r\n        details: \"\"\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n\r\n    e.target.title.value = \"\";\r\n  };\r\n\r\n  toggleComplete = e => {\r\n    const id = e.target.id;\r\n    let isCompleted = \"\";\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = !task.completed;\r\n          isCompleted = task.completed;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n    //add to db\r\n    fetch(\"https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id, completed: isCompleted })\r\n    });\r\n  };\r\n\r\n  searchPatient = async e => {\r\n    e.preventDefault();\r\n    /* e.target.patientID.setCustomValidity(\r\n      \"Wprowadź poprawne 5-cyfrowe ID pacjenta\"\r\n    ); */\r\n    let patientID;\r\n    if (!this.state.patientID) {\r\n      e.preventDefault();\r\n      patientID = e.target.patientID.value;\r\n      await fetch(\r\n        \"https://medical-documentation.herokuapp.com/get-patient-data\",\r\n        {\r\n          method: \"put\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ patientID })\r\n        }\r\n      )\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ patientID: data }));\r\n\r\n      await fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          console.log(data);\r\n          this.setState({ tasks: data });\r\n        });\r\n    } else {\r\n      this.setState({ patientID: \"\" });\r\n      e.target.patientID.value = \"\";\r\n      fetch(\"https://medical-documentation.herokuapp.com/get-patient-data\", {\r\n        method: \"put\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ patientID: \"\" })\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"ID-form\" onSubmit={this.searchPatient}>\r\n        <label>Testowe ID pacjentów: 11111 i 12345\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Wpisz ID pacjenta\"\r\n            name=\"patientID\"\r\n            pattern=\"[0-9]{5}\"\r\n          /></label>\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.patientID ? \"Zmień pacienta\" : \"Znajdź pacjenta\"}\r\n          />\r\n        </form>\r\n\r\n        {this.state.patientID && (\r\n          <div>\r\n            <SideBar\r\n              activeAccount=\"doctor\"\r\n              patient={this.state.patientID}\r\n              tasks={this.state.tasks}\r\n              addTask={this.addTaskFromSideBar}\r\n              toggleComplete={this.toggleComplete}\r\n            />\r\n            <HashRouter>\r\n              <nav>\r\n                <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n                  Dokumentacja\r\n                </NavLink>\r\n                <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n                  Zalecenia lekarskie\r\n                </NavLink>\r\n                <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n                  Proces medyczny\r\n                </NavLink>\r\n              </nav>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-prescription\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"prescription\" />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-sickleave\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"sickleave\" />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-referral\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"referral\" />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-lab-order\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"lab-order\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/document:documentId\"\r\n                  component={Document}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new\"\r\n                  component={NewRecommendation}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/create-new\"\r\n                  component={NewDocument}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/documentation\"\r\n                  render={props => (\r\n                    <Documentation {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/recommendations\"\r\n                  render={props => (\r\n                    <Recommendations {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/medical-process\"\r\n                  render={props => (\r\n                    <MedicalProcess\r\n                      {...props}\r\n                      activeAccount=\"doctor\"\r\n                      tasks={this.state.tasks}\r\n                      addTask={this.addTask}\r\n                      setCompleted={this.setCompleted}\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                <Redirect from=\"/\" to=\"/documentation\" />\r\n              </Switch>\r\n            </HashRouter>\r\n            <div />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoctorPage;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/LabTechnicianPage.css\";\r\nimport { today } from \"../DateParser\";\r\n\r\nclass LabTechnicianPage extends Component {\r\n  state = {\r\n    resultType: \"\",\r\n    results: []\r\n  };\r\n\r\n  chooseResultType = e => {\r\n    console.log(e.target.value);\r\n    this.setState({ resultType: e.target.value });\r\n  };\r\n\r\n  addParameter = e => {\r\n    e.preventDefault();\r\n    let name = document.querySelector(\"#parameter\").value;\r\n    let value = document.querySelector(\"#result\").value;\r\n    //pobrać zakresy i jednostki dla parametru name\r\n    if (value) {\r\n      const newParameter = {\r\n        name,\r\n        value,\r\n        type: this.state.resultType\r\n        //range\r\n        //unit\r\n      };\r\n      this.setState({ results: [...this.state.results, newParameter] });\r\n      document.querySelector(\"#result\").value = \"\";\r\n    }\r\n  };\r\n\r\n  submitResult = e => {\r\n    e.preventDefault();\r\n    const collectionDate = e.target.collectionDate.value.split(\"T\");\r\n    const title = `Badanie krwi ${collectionDate[0]}`;\r\n    const issueDate = today;\r\n\r\n    console.log(title, collectionDate.join(\" \"));\r\n    fetch(\"https://medical-documentation.herokuapp.com/lab-result\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        labPatientID: e.target.patientID.value,\r\n        title,\r\n        collectionDate: collectionDate.join(\" \"),\r\n        issueDate,\r\n\r\n        results: this.state.results\r\n      })\r\n    });\r\n    this.setState({ resultType: \"\", results: [] });\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container lab-container\">\r\n        <h2>Dodaj wynik badania krwi</h2>\r\n        <form className=\"form\" onSubmit={this.submitResult}>\r\n          <label htmlFor=\"patientID\">\r\n            ID pacjenta{\" \"}\r\n            <input name=\"patientID\" type=\"text\" required pattern=\"[0-9]{5}\" />\r\n          </label>\r\n          <label htmlFor=\"collectionDate\">\r\n            Data pobrania <input name=\"collectionDate\" type=\"datetime-local\" />\r\n          </label>\r\n\r\n          <label>\r\n            Typ badania\r\n            <select\r\n              name=\"result-type\"\r\n              onChange={this.chooseResultType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled={true}>\r\n                Wybierz typ badania\r\n              </option>\r\n              <option value=\"morfologia\">Morfologia krwi</option>\r\n              <option value=\"biochemia\">Biochemia krwi</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.resultType && (\r\n            <div>\r\n              <div className=\"inner-form\">\r\n                <label>\r\n                  Wybierz parametr\r\n                  {this.state.resultType === \"morfologia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      <option value=\"HGB\">HGB</option>\r\n                      <option value=\"WGB\">WGB</option>\r\n                      <option value=\"RGB\">RGB</option>\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"biochemia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      <option value=\"LDL\">LDL</option>\r\n                      <option value=\"HDL\">HDL</option>\r\n                      <option value=\"Glukoza\">Glukoza</option>\r\n                      <option value=\"Kwas moczowy\">Kwas moczowy</option>\r\n                      <option value=\"Homocysteina\">Homocysteina</option>\r\n                    </select>\r\n                  )}\r\n                </label>\r\n                <label>\r\n                  Wartość\r\n                  <input type=\"text\" name=\"result\" id=\"result\" />\r\n                </label>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Dodaj parametr\"\r\n                  onClick={this.addParameter}\r\n                />\r\n              </div>\r\n\r\n              {this.state.results.length > 0 && (\r\n                <div className=\"table\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Lp</th>\r\n                        <th>Parametr</th>\r\n                        <th>Wartość</th>\r\n                        <th>Zakres</th>\r\n                        <th>Jednostka</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {this.state.results.map((item, i) => {\r\n                      return (\r\n                        <tbody key={i}>\r\n                          <tr>\r\n                            <td>{i + 1}</td>\r\n                            <td>{this.state.results[i].name}</td>\r\n                            <td>{this.state.results[i].value}</td>\r\n                            <td>zakres</td>\r\n                            <td>jednostka</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      );\r\n                    })}\r\n                  </table>\r\n                  <input type=\"submit\" value=\"Zapisz i prześlij\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabTechnicianPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PatientPage from \"./Patient-Doctor/PatientPage\";\r\nimport DoctorPage from \"./Patient-Doctor/Doctor/DoctorPage\";\r\nimport LabTechnicianPage from \"./LabTechnician/LabTechnicianPage\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    activeAccount: localStorage.getItem(\"account\") || \"\",\r\n    isLoggedIn: false\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    //because setState is asynchronous\r\n    localStorage.setItem(\"loggedIn\", this.state.isLoggedIn);\r\n    localStorage.setItem(\"account\", this.state.activeAccount);\r\n  }\r\n\r\n  changeAccount = e => {\r\n    this.setState({ activeAccount: e.target.value });\r\n  };\r\n\r\n  logIn = async e => {\r\n    e.preventDefault();\r\n    await fetch(\"https://medical-documentation.herokuapp.com/login\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        login: e.target.login.value,\r\n        password: e.target.password.value\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n        if (data === \"FAIL\") {\r\n          document.querySelector('#login-info').innerHTML = \"Niepoprawny login i hasło\"\r\n        } else {\r\n          this.setState({ activeAccount: data.accountType, isLoggedIn: true });\r\n        }\r\n      });\r\n  };\r\n\r\n  logOut = () => {\r\n    this.setState({ activeAccount: \"\", isLoggedIn: false });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.isLoggedIn ? (\r\n          <div className=\"container login-container\">\r\n            <h2>Zaloguj się</h2>\r\n            <p id=\"login-info\"><br></br></p>\r\n            <form onSubmit={this.logIn}>\r\n              <label htmlFor=\"login\">Użytkownik: </label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"login\"\r\n                pattern=\"[PDL]\\d{5}\"\r\n                placeholder=\"np. P12345, D12345, L12345\"\r\n                required\r\n              />\r\n              <label htmlFor=\"password\">Hasło: </label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"póki co dowolne\"\r\n                required\r\n              />\r\n              <input type=\"submit\" value=\"Zaloguj\" />\r\n            </form>\r\n            <p>Nie masz konta?</p>\r\n            <Link to=\"/register\">\r\n              <button>Zarejestruj się</button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"header\">\r\n            <div className=\"radio-buttons\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Patient\"\r\n                  value=\"patient\"\r\n                  checked={this.state.activeAccount === \"patient\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Pacjent\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Doctor\"\r\n                  value=\"doctor\"\r\n                  checked={this.state.activeAccount === \"doctor\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Lekarz\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Lab\"\r\n                  value=\"lab\"\r\n                  checked={this.state.activeAccount === \"lab\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Laborant\r\n              </label>\r\n            </div>\r\n\r\n            <button className=\"log-out\" onClick={this.logOut}>\r\n              Wyloguj się\r\n            </button>\r\n\r\n            {this.state.activeAccount === \"patient\" ? (\r\n              <PatientPage />\r\n            ) : this.state.activeAccount === \"doctor\" ? (\r\n              <DoctorPage />\r\n            ) : (\r\n              <LabTechnicianPage />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\n\r\nimport Main from \"./Main\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/\" component={Main} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n//basename - because of /dokumenty_cyfrowe_w_medycynie in url (gh-pages)\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}> \r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}