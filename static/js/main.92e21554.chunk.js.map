{"version":3,"sources":["Register.js","Patient-Doctor/Document.js","DateParser.js","Patient-Doctor/MedicalProcess.js","Patient-Doctor/Documentation.js","Patient-Doctor/Recommendations.js","Patient-Doctor/SideBar.js","Patient-Doctor/PatientPage.js","Patient-Doctor/Doctor/NewDocument.js","Patient-Doctor/Doctor/NewRecommendation.js","Patient-Doctor/Doctor/NewAttachment.js","Patient-Doctor/Doctor/DoctorPage.js","LabTechnician/LabTechnicianPage.js","Main.js","App.js","index.js"],"names":["Register","state","accountType","chooseAccountType","e","_this","setState","target","value","goBack","props","history","push","validatePassword","password","document","getElementById","confirmPassword","setCustomValidity","react_default","a","createElement","className","onClick","this","name","onChange","htmlFor","type","required","id","pattern","Fragment","Component","Document","documents","_this2","fetch","then","result","json","data","currentDocument","_this3","length","forEach","console","log","_id","match","params","documentId","react_router_dom","to","style","fontWeight","title","includes","content","results","map","item","i","key","range","unit","transformDate","date","day","concat","getDate","toString","month","getMonth","year","getYear","today","Date","threeDaysAgo","now","MedicalProcess","hour","getHours","minutes","getMinutes","transformDateTime","tasks","activeAccount","onSubmit","addTask","placeholder","filter","task","completed","setCompleted","details","float","Documentation","sort","b","split","join","textDecoration","Recommendations","recommendations","recommendation","doctor","attachedDocuments","attachment","margin","color","SideBar","patient","surname","sex","age","PESEL","dateOfBirth","address","telephone","icd10","checked","toggleComplete","disabled","PatientPage","patientID","Patient_Doctor_SideBar","activeClassName","react_router","exact","path","component","render","Patient_Doctor_MedicalProcess","Object","assign","from","NewDocument","documentType","chooseDocumentType","createDocument","preventDefault","region","testDate","method","headers","Content-Type","body","JSON","stringify","orderingDoctor","performingDoctor","position","top","left","textAlign","width","defaultValue","min","max","multiple","NewRecommendation","dataSaved","parse","localStorage","getItem","attachments","toggleSave","_callee","_e$target$parentEleme","regenerator_default","wrap","_context","prev","next","parentElement","setItem","stop","submitRecommendation","removeItem","NewAttachment","submitAttachment","attachedDocument","_e$target","startDate","_e$target2","medicine","payment","_e$target3","placeOfWork","endDate","_e$target4","place","examination","diagnosis","aim","checkboxes","labTests","t0","issueDate","abrupt","toConsumableArray","test","checkbox","DoctorPage","response","addTaskFromSideBar","isCompleted","searchPatient","_callee2","_context2","Doctor_NewAttachment","Patient_Doctor_Documentation","Patient_Doctor_Recommendations","LabTechnicianPage","resultType","chooseResultType","addParameter","querySelector","newParameter","submitResult","collectionDate","labPatientID","window","location","reload","Main","isLoggedIn","changeAccount","logIn","login","logOut","Patient_Doctor_PatientPage","Doctor_DoctorPage","LabTechnician_LabTechnicianPage","App","ReactDOM","basename","process","src_App"],"mappings":"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","file":"static/js/main.92e21554.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n/* import { withRouter } from 'react-router-dom'; */\r\n//import { history } from 'react-router-dom';\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    accountType: \"patient\"\r\n  };\r\n\r\n  chooseAccountType = e => {\r\n    this.setState({ accountType: e.target.value });\r\n  };\r\n\r\n  goBack = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  validatePassword = () => {\r\n    let password = document.getElementById(\"password\");\r\n    let confirmPassword = document.getElementById(\"confirm-password\");\r\n\r\n    if (password.value !== confirmPassword.value) {\r\n      confirmPassword.setCustomValidity(\"Hasła nie są jednakowe\");\r\n    } else {\r\n      confirmPassword.setCustomValidity(\"\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container register-container\">\r\n        <h2>Zarejestruj się</h2>\r\n        <button\r\n        className=\"backButton\"\r\n\r\n          onClick={this.goBack}\r\n        >\r\n          Powrót do logowania\r\n        </button>\r\n        <form>\r\n          <span>\r\n            <label>Typ konta: </label>\r\n            <select name=\"accountType\" onChange={this.chooseAccountType}>\r\n              <option value=\"patient\">Pacjent</option>\r\n              <option value=\"doctor\">Lekarz</option>\r\n              <option value=\"lab\">Laborant</option>\r\n            </select>\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"name\">Imię </label>\r\n            <input type=\"text\" name=\"name\" required />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"surname\">Nazwisko </label>\r\n            <input type=\"text\" name=\"surname\" required />\r\n          </span>\r\n          {this.state.accountType !== \"doctor\" && (\r\n            <span>\r\n              <label htmlFor=\"dob\">Data urodzenia </label>\r\n              <input type=\"date\" name=\"dob\" required />\r\n            </span>\r\n          )}\r\n          <span>\r\n            <label htmlFor=\"pesel\">PESEL </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"pesel\"\r\n              id=\"pesel\"\r\n              required\r\n              pattern=\"[0-9]{11}\"\r\n            />\r\n          </span>\r\n          {this.state.accountType === \"doctor\" && (\r\n            <>\r\n              {\" \"}\r\n              <span>\r\n                <label>Numer PWZ</label>\r\n                <input type=\"text\" name=\"PWZ\" required />\r\n              </span>\r\n              <span>\r\n                <label>Specjalizacja</label>\r\n                <input type=\"text\" name=\"specialization\" required />\r\n              </span>\r\n            </>\r\n          )}\r\n          <span>\r\n            <label htmlFor=\"password\">Hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"password\"\r\n              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n            />\r\n          </span>\r\n          <span>\r\n            <label htmlFor=\"password\">Powtórz hasło </label>\r\n            <input\r\n              type=\"password\"\r\n              required\r\n              id=\"confirm-password\"\r\n              pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\"\r\n              onChange={this.validatePassword}\r\n            />\r\n          </span>\r\n\r\n          {this.state.accountType === \"patient\" && (\r\n            <p>Wygenerowany dla Ciebie login to: P12345 </p>\r\n          )}\r\n          {this.state.accountType === \"doctor\" && (\r\n            <p>Wygenerowany dla Ciebie login to: D12321 </p>\r\n          )}\r\n          {this.state.accountType === \"lab\" && (\r\n            <p>Wygenerowany dla Ciebie login to: L10010 </p>\r\n          )}\r\n\r\n          <input type=\"submit\" value=\"Zarejestruj się\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Document.css\";\r\n\r\nclass Document extends Component {\r\n  state = {\r\n    documents: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data }));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.documents.length) {\r\n      // console.log(this.state.documents);\r\n      let currentDocument;\r\n      this.state.documents.forEach(document => {\r\n        console.log(document);\r\n        if (document._id === this.props.match.params.documentId) {\r\n          currentDocument = document;\r\n        }\r\n      });\r\n\r\n      console.log(currentDocument);\r\n      return (\r\n        <div className=\"container document-container\">\r\n          <Link\r\n            to=\"/documentation\"\r\n            className=\"backButton\"\r\n\r\n          >\r\n            <button>Powrót</button>\r\n          </Link>\r\n          <p style={{ fontWeight: \"700\" }}>{currentDocument.title}</p>\r\n          {!currentDocument.title.includes(\"Badanie krwi\") && (\r\n            <p>{currentDocument.content}</p>\r\n          )}\r\n          {currentDocument.title.includes(\"Badanie krwi\") && (\r\n            <div className=\"table\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Lp</th>\r\n                    <th>Parametr</th>\r\n                    <th>Wartość</th>\r\n                    <th>Zakres</th>\r\n                    <th>Jednostka</th>\r\n                  </tr>\r\n                </thead>\r\n                {currentDocument.results.map((item, i) => {\r\n                  return (\r\n                    <tbody key={i}>\r\n                      <tr>\r\n                        <td>{i + 1}</td>\r\n                        <td>{currentDocument.results[i].name}</td>\r\n                        <td>{currentDocument.results[i].value}</td>\r\n                        <td>{currentDocument.results[i].range}</td>\r\n                        <td>{currentDocument.results[i].unit}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  );\r\n                })}\r\n              </table>\r\n            </div>\r\n          )}\r\n          <button>Zapisz do PDF</button>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Document;\r\n","const transformDateTime = date => {\r\n  const day = `${\r\n    date.getDate().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMonth()+1}`;\r\n  const year = date.getYear() - 100;\r\n  const hour = `${\r\n    date.getHours().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getHours()}`;\r\n  const minutes = `${\r\n    date.getMinutes().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMinutes()}`;\r\n\r\n  return `20${year}-${month}-${day} ${hour}:${minutes}`;\r\n};\r\n\r\nconst transformDate = date => {\r\n  const day = `${\r\n    date.getDate().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getDate()}`;\r\n  const month = `${\r\n    date.getMonth().toString().length === 1 ? \"0\" : \"\"\r\n  }${date.getMonth()+1}`;\r\n  const year = date.getYear() - 100;\r\n  return `20${year}-${month}-${day}`;\r\n};\r\n\r\nconst transformFromDB = date => {\r\n  if (date !== null) {\r\n    const dateTime = date.split(\"T\");\r\n    const time = dateTime[1].slice(0, 5);\r\n    return `${dateTime[0]} ${time}`\r\n    \r\n  }\r\n\r\n};\r\n\r\nconst sort = (a, b) => {\r\n  a.date = a.date.split('-').join('');\r\n  b.date = b.date.split('-').join('');\r\n  return a.date > b.date ? 1 : a.date < b.date ? -1 : 0;\r\n}\r\n\r\nconst today = transformDate(new Date());\r\nconst threeDaysAgo = transformDate(new Date(Date.now() - 3 * 24 * 3600 * 1000));\r\nconst now = transformDateTime(new Date());\r\n\r\nexport { today, threeDaysAgo, now, transformDate, transformDateTime, transformFromDB };\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"../css/MedicalProcess.css\";\r\nimport \"../css/App.css\";\r\nimport { transformFromDB } from \"../DateParser\";\r\n\r\nclass MedicalProcess extends Component {\r\n  state = {\r\n    tasks: []\r\n  };\r\n  \r\n  render() {\r\n  \r\n    return (\r\n      <div className=\"container medical-process-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <form onSubmit={this.props.addTask}>\r\n            <input type=\"text\" placeholder=\"Tytuł\" name=\"title\" />\r\n            <select name=\"completed\">\r\n              <option value=\"done\">Wykonane</option>\r\n              <option value=\"todo\">Do zrobienia</option>\r\n            </select>\r\n            Data: <input type=\"datetime-local\" name=\"date\" />\r\n            <textarea placeholder=\"Szczegóły\" name=\"details\" />\r\n            <input type=\"submit\" value=\"Dodaj zadanie\" />\r\n          </form>\r\n        )}\r\n        <div className=\"content\">\r\n          <h3>Do zrobienia</h3>\r\n          <ul>\r\n            {this.props.tasks\r\n              .filter(task => task.completed === false)\r\n              .map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <strong>{task.title}</strong>\r\n                    {this.props.activeAccount === \"doctor\" && (\r\n                      <button\r\n                        className=\"set-done\"\r\n                        id={task._id}\r\n                        onClick={this.props.setCompleted}\r\n                      >\r\n                        ✓\r\n                      </button>\r\n                    )}\r\n\r\n                    <button className=\"edit\" id={i}>\r\n                      🖉\r\n                    </button>\r\n\r\n                    <br />\r\n                    {task.details}\r\n                    <span style={{ float: \"right\" }}>{task.date}</span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n          <hr />\r\n          <h3>Wykonane</h3>\r\n          <ul>\r\n            {this.props.tasks\r\n              .filter(task => task.completed === true)\r\n              .map((task, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <strong>{task.title}</strong>\r\n\r\n                    <button className=\"edit\" id={i}>\r\n                      🖉\r\n                    </button>\r\n\r\n                    <br />\r\n                    {task.details}\r\n                    <span style={{ float: \"right\" }}>{task.date}</span>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedicalProcess;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Documentation.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Documentation extends Component {\r\n  state = {\r\n    documents: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/documentation\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ documents: data }));\r\n\r\n    //TODO sort by date\r\n  }\r\n\r\n  sort = (a, b) => {\r\n    a.date = a.date.split(\"-\").join(\"\");\r\n    b.date = b.date.split(\"-\").join(\"\");\r\n    return a.date > b.date ? 1 : a.date < b.date ? -1 : 0;\r\n  };\r\n\r\n  render() {\r\n    //this.state.documents.sort();\r\n\r\n    return (\r\n      <div className=\"container documentation-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <Link to=\"documentation/create-new\">\r\n            <button>Dodaj wynik badania</button>\r\n          </Link>\r\n        )}\r\n        <form className=\"filterForm\">\r\n          <label>\r\n            Filtruj po tagu:{\" \"}\r\n            <select name=\"tags\">\r\n              <option value=\"all\">Wszystko</option>\r\n              <option value=\"blood-test\">Badanie krwi</option>\r\n              <option value=\"usg\">Badanie USG</option>\r\n\r\n              <option value=\"ekg\">Badanie EKG</option>\r\n              <option value=\"echo\">Echo serca</option>\r\n              <option value=\"imaging\">Obrazowanie medyczne (TK/MRI)</option>\r\n              <option value=\"angiography\">Angiografia / Koronarografia</option>\r\n              <option value=\"cardiology\">Kardiologiczne</option>\r\n            </select>\r\n          </label>\r\n          <label>\r\n            Filtruj po dacie: od <input type=\"date\" /> do <input type=\"date\" />\r\n          </label>\r\n          <input type=\"submit\" value=\"Filtruj\" />\r\n        </form>\r\n        <div className=\"documents content\">\r\n          <ul>\r\n            {this.state.documents.map((document, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <Link\r\n                    style={{ fontWeight: \"600\", textDecoration: \"underline\" }}\r\n                    to={`/documentation/document${document._id}`}\r\n                  >\r\n                    {document.title}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Documentation;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/Recommendations.css\";\r\nimport { transformFromDB } from '../DateParser'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Recommendations extends Component {\r\n  state = {\r\n    recommendations: [\r\n      /*       {\r\n        id: 1,\r\n        date: \"2019-01-02\",\r\n        doctor: \"dr Anna Nowak\",\r\n        content:\r\n          \"dieta niskokaloryczna, Lek XXX 200mg 2x1, Lek YYY 1x1, unikanie wysiłku, kontrola za 2 tygodnie\",\r\n        attachments: [\"receptaXXX\", \"receptaYYY\"]\r\n      },\r\n      {\r\n        id: 2,\r\n        date: \"2018-11-22\",\r\n        doctor: \"dr Artur Bąk\",\r\n        content: \"zwolnienie z pracy 2 tyg, pić dużo płynów\",\r\n        attachments: [\"zwolnienie-2211-0512\"]\r\n      },\r\n      {\r\n        id: 3,\r\n        date: \"2018-10-26\",\r\n        doctor: \"dr Joanna Lubelska\",\r\n        content: \"zrobić USG serca\",\r\n        attachments: [\"skierowanieUSG\"]\r\n      } */\r\n    ]\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/recommendations\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ recommendations: data }));\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container recommendations-container\">\r\n        {this.props.activeAccount === \"doctor\" && (\r\n          <Link to=\"/recommendations/create-new\">\r\n            <button>Dodaj zalecenie</button>\r\n          </Link>\r\n        )}\r\n\r\n        <div className=\"content\">\r\n          {this.state.recommendations.map((recommendation, i) => {\r\n            return (\r\n              <div className=\"recommendation\" key={i}>\r\n                <p>Data: {recommendation.date} </p>\r\n                <p>Lekarz: {recommendation.doctor} </p>\r\n                <p>Treść: {recommendation.content}</p>\r\n                <p>\r\n                  Załączone dokumenty:{\" \"}\r\n                  {recommendation.attachedDocuments.map((attachment, i) => (\r\n                    <Link\r\n                      key={i}\r\n                      style={{\r\n                        margin: \"10px\",\r\n                        color: \"white\",\r\n                        textDecoration: \"underline\"\r\n                      }}\r\n                      to={`/recommendations/attached-document-:${attachment.id}`}\r\n                    >\r\n                      {attachment.title}\r\n                    </Link>\r\n                  ))}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recommendations;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/SideBar.css\";\r\n\r\nclass SideBar extends Component {\r\n  state = {\r\n    patient: [],\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/patient\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ patient: data }));\r\n\r\n \r\n  }\r\n\r\n  render() {\r\n    const patient = this.state.patient;\r\n    return (\r\n      <div className=\"side-bar\">\r\n        <div className=\"patient-info\">\r\n          <h3>Dane osobowe</h3>\r\n\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Imię i nazwisko: </td>\r\n                <td>\r\n                  {\" \"}\r\n                  {patient.name} {patient.surname}{\" \"}\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Płeć: </td>\r\n                <td> {patient.sex} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Wiek: </td>\r\n                <td> {patient.age} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>PESEL: </td>\r\n                <td> {patient.PESEL} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Data urodzenia: </td>\r\n                <td> {patient.dateOfBirth} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Adres: </td>\r\n                <td> {patient.address} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>Telefon: </td>\r\n                <td> {patient.telephone} </td>\r\n              </tr>\r\n              <tr>\r\n                <td>ICD10: </td>\r\n                <td> {patient.icd10} </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          {this.props.activeAccount === \"doctor\" && <button>Edytuj</button>}\r\n        </div>\r\n        <div className=\"todo-list\">\r\n          <h3>Zadania do wykonania</h3>\r\n          <ul>\r\n            {this.props.tasks.map((task, i) => {\r\n              return (\r\n                <li key={i}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task.completed}\r\n                    onChange={this.props.toggleComplete}\r\n                    id={task._id}\r\n                    disabled={this.props.activeAccount !== \"doctor\"}\r\n                  />{\" \"}\r\n                  {task.title}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          {this.props.activeAccount === \"doctor\" && (\r\n            <form onSubmit={this.props.addTask}>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Wpisz nowe zadanie\"\r\n                name=\"title\"\r\n              />\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Document from \"./Document\";\r\nimport MedicalProcess from \"./MedicalProcess\";\r\nimport Documentation from \"./Documentation\";\r\nimport Recommendations from \"./Recommendations\";\r\nimport SideBar from \"./SideBar\";\r\nimport \"../css/PatientDoctorPage.css\";\r\n\r\nclass PatientPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SideBar tasks={this.state.tasks} />\r\n\r\n        <HashRouter>\r\n          <nav>\r\n            <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n              Dokumentacja\r\n            </NavLink>\r\n            <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n              Zalecenia lekarskie\r\n            </NavLink>\r\n            <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n              Proces medyczny\r\n            </NavLink>\r\n          </nav>\r\n          <Switch>\r\n            <Route exact path=\"/documentation\" component={Documentation} />\r\n            <Route exact path=\"/recommendations\" component={Recommendations} />\r\n            <Route\r\n              path=\"/medical-process\"\r\n              render={props => (\r\n                <MedicalProcess {...props} tasks={this.state.tasks} />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/documentation/document:documentId\"\r\n              component={Document}\r\n            />\r\n\r\n            <Redirect from=\"/\" to=\"/documentation\" />\r\n          </Switch>\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PatientPage;\r\n","import React, { Component } from \"react\";\r\nimport \"../../css/NewDocument.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\nclass NewDocument extends Component {\r\n  state = {\r\n    documentType: \"\"\r\n  };\r\n\r\n  chooseDocumentType = e => {\r\n    this.setState({ documentType: e.target.value });\r\n  };\r\n\r\n  createDocument = e => {\r\n    //console.log(e.target);\r\n    e.preventDefault();\r\n    const title = `${this.state.documentType}: ${\r\n      e.target.region.value ? e.target.region.value : \"\"\r\n    }  ${e.target.testDate.value}`;\r\n    console.log(title);\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-document\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        documentType: this.state.documentType,\r\n        title,\r\n        testDate: e.target.testDate.value,\r\n        //testTime: e.target.testTime.value,\r\n        orderingDoctor: e.target.orderingDoctor.value,\r\n        performingDoctor: e.target.performingDoctor.value,\r\n        content: e.target.content.value\r\n      })\r\n    });\r\n\r\n    this.props.history.push(\"/documentation\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Link\r\n          to=\"/documentation\"\r\n          className=\"backButton\"\r\n          style={{ position: \"absolute\", top: \"2%\", left: \"30px\" }}\r\n        >\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <div className=\"new-document\">\r\n          <h2 style={{ textAlign: \"center\" }}>Nowy dokument</h2>\r\n          <label style={{ width: \"70%\", margin: \"auto\" }}>\r\n            Typ dokumentu:\r\n            <select\r\n              name=\"documentType\"\r\n              onChange={this.chooseDocumentType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled>\r\n                Wybierz typ\r\n              </option>\r\n              <option value=\"Badanie USG\">Badanie USG</option>\r\n\r\n              <option value=\"Badanie EKG\">Badanie EKG</option>\r\n              <option value=\"Echokardiografia\">Echokardiografia</option>\r\n              <option value=\"Tomografia komputerowa\">\r\n                Tomografia komputerowa\r\n              </option>\r\n              <option value=\"Rezonans magnetyczny\">Rezonans magnetyczny</option>\r\n              <option value=\"Angiografia\">Angiografia / Koronarografia</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.documentType && (\r\n            <form className=\"document-form\" onSubmit={this.createDocument}>\r\n              {(this.state.documentType == \"Rezonans magnetyczny\" ||\r\n                this.state.documentType == \"Tomografia komputerowa\") && (\r\n                <label>\r\n                  {\" \"}\r\n                  Badany obszar: <input type=\"text\" name=\"region\" required />\r\n                </label>\r\n              )}\r\n\r\n              <label>\r\n                {\" \"}\r\n                Data badania:{\" \"}\r\n                <input\r\n                  type=\"datetime-local\"\r\n                  name=\"testDate\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                  required\r\n                />\r\n              </label>\r\n              {/*   <label>\r\n                {\" \"}\r\n                Godzina badania: <input type=\"time\" name=\"testTime\" />\r\n              </label> */}\r\n\r\n              <label>\r\n                {\" \"}\r\n                Lekarz zlecający:{\" \"}\r\n                <input type=\"text\" name=\"orderingDoctor\" required />\r\n              </label>\r\n\r\n              <label>\r\n                {\" \"}\r\n                Lekarz wykonujący:{\" \"}\r\n                <input type=\"text\" name=\"performingDoctor\" required />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Treść: <textarea required name=\"content\" />\r\n              </label>\r\n              <label>\r\n                {\" \"}\r\n                Załączniki: <input type=\"file\" multiple=\"multiple\" />\r\n              </label>\r\n\r\n              <input type=\"submit\" value=\"Dodaj dokument\" />\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewDocument;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\nimport \"../../css/NewRecommendation.css\";\r\n\r\nclass NewRecommendation extends Component {\r\n  state = {\r\n    dataSaved: JSON.parse(localStorage.getItem(\"saved\")),\r\n    data: JSON.parse(localStorage.getItem(\"recommendationData\")) || {},\r\n    attachments: JSON.parse(localStorage.getItem(\"attachments\")) || []\r\n  };\r\n\r\n  toggleSave = async e => {\r\n    e.preventDefault();\r\n\r\n    const { date, content } = e.target.parentElement;\r\n    if (!this.state.dataSaved) {\r\n      await this.setState({\r\n        dataSaved: true,\r\n        data: {\r\n          content: content.value,\r\n          date: date.value\r\n        }\r\n      });\r\n    } else {\r\n      await this.setState({\r\n        dataSaved: false,\r\n        data: {\r\n          content: \"\",\r\n          date: \"\"\r\n        }\r\n      });\r\n    }\r\n    await localStorage.setItem(\r\n      \"recommendationData\",\r\n      JSON.stringify(this.state.data)\r\n    );\r\n    await localStorage.setItem(\"saved\", JSON.stringify(this.state.dataSaved));\r\n  };\r\n\r\n  submitRecommendation = () => {\r\n    fetch(\"https://medical-documentation.herokuapp.com/new-recommendation\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        date: document.getElementById(\"date\").value,\r\n        content: document.getElementById(\"content\").value,\r\n        attachments: this.state.attachments\r\n      })\r\n    });\r\n    localStorage.removeItem(\"saved\");\r\n    localStorage.removeItem(\"recommendationData\");\r\n    localStorage.removeItem(\"attachments\");\r\n    this.props.history.push(\"/recommendations\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container form-container\">\r\n        <h2>Nowe zalecenie</h2>\r\n        <Link to=\"/recommendations\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        <form>\r\n          <label>\r\n            Data:\r\n            <input\r\n              type=\"date\"\r\n              disabled={this.state.dataSaved}\r\n              name=\"date\"\r\n              id=\"date\"\r\n              min={threeDaysAgo}\r\n              max={today}\r\n              defaultValue={this.state.data.date || today}\r\n            />\r\n          </label>\r\n          <label>\r\n            Treść:{\" \"}\r\n            <textarea\r\n              id=\"content\"\r\n              disabled={this.state.dataSaved}\r\n              name=\"content\"\r\n              defaultValue={this.state.data.content || \"\"}\r\n            />\r\n          </label>\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.dataSaved ? \"Edytuj\" : \"Zapisz\"}\r\n            onClick={this.toggleSave}\r\n          />\r\n        </form>\r\n        {this.state.attachments && (\r\n          <p className=\"attachments-info\">\r\n            Załączniki:\r\n            {this.state.attachments.map((attachment, i) => {\r\n              return (\r\n                <Link\r\n                  key={i}\r\n                  className=\"attachments\"\r\n                  to=\"/recommendations/attachments/:document\"\r\n                >\r\n                  {attachment.title}\r\n                </Link>\r\n              );\r\n            })}\r\n          </p>\r\n        )}\r\n        <p>\r\n          Wygeneruj załącznik:{\" \"}\r\n          <Link to=\"/recommendations/create-new/generate-prescription\">\r\n            <button className=\"attachment-button\">Recepta</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-sickleave\">\r\n            <button className=\"attachment-button\">Zwolnienie</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-referral\">\r\n            <button className=\"attachment-button\">Skierowanie</button>\r\n          </Link>\r\n          <Link to=\"/recommendations/create-new/generate-lab-order\">\r\n            <button className=\"attachment-button\">Zlecenie badania</button>\r\n          </Link>\r\n        </p>\r\n        <button className=\"submit-button\" onClick={this.submitRecommendation}>\r\n          Dodaj zalecenie\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewRecommendation;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/NewAttachment.css\";\r\nimport { today, threeDaysAgo } from \"../../DateParser\";\r\n\r\nclass NewAttachment extends Component {\r\n  submitAttachment = async e => {\r\n    e.preventDefault();\r\n\r\n    let attachedDocument = {};\r\n    const { date, startDate } = e.target;\r\n    switch (this.props.documentType) {\r\n      case \"prescription\":\r\n        const { medicine, payment } = e.target;\r\n        attachedDocument = {\r\n          title: `Recepta ${medicine.value}`,\r\n          medicine: medicine.value,\r\n          payment: payment.value,\r\n          issueDate: date.value,\r\n          startDate: startDate.value,\r\n          type: \"recepta\",\r\n         // id: \"\"\r\n        };\r\n        break;\r\n      case \"sickleave\":\r\n        const { placeOfWork, endDate } = e.target;\r\n        attachedDocument = {\r\n          title: `Zwolnienie ${startDate.value}-${endDate.value}`,\r\n          issueDate: date.value,\r\n          placeOfWork: placeOfWork.value,\r\n          startDate: startDate.value,\r\n          endDate: endDate.value,\r\n          type: \"zwolnienie\",\r\n         // id: \"\"\r\n        };\r\n        break;\r\n\r\n      case \"referral\":\r\n        const { place, examination, diagnosis, aim } = e.target;\r\n        attachedDocument = {\r\n          title: `Skierowanie do ${place.value}`,\r\n          issueDate: date.value,\r\n          place: place.value,\r\n          examination: examination.value,\r\n          diagnosis: diagnosis.value,\r\n          aim: aim.value,\r\n          type: \"skierowanie\",\r\n         // id: \"\"\r\n        };\r\n        break;\r\n      case \"lab-order\":\r\n        const checkboxes = [...e.target.test];\r\n        const labTests = checkboxes\r\n          .filter(checkbox => checkbox.checked == true)\r\n          .map(checkbox => checkbox.value);\r\n\r\n        console.log(labTests);\r\n        attachedDocument = {\r\n          title: `Zlecenie badań laboratoryjnych ${date.value}`,\r\n          labTests: labTests,\r\n          type: \"zlecenie badań\",\r\n          //id: \"\"\r\n        };\r\n    }\r\n\r\n    await fetch(\"https://medical-documentation.herokuapp.com/attach-document\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(attachedDocument)\r\n    })\r\n     .then(result => result.json())\r\n      .then(data => attachedDocument.id = data);\r\n    console.log(attachedDocument.id);\r\n    let attachments = JSON.parse(localStorage.getItem(\"attachments\")) || [];\r\n    attachments.push(attachedDocument);\r\n    localStorage.setItem(\"attachments\", JSON.stringify(attachments));\r\n    this.props.history.push(\"/recommendations/create-new\");\r\n  };\r\n\r\n  render() {\r\n    const documentType = this.props.documentType;\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to=\"/recommendations/create-new\" className=\"backButton\">\r\n          <button>Powrót</button>\r\n        </Link>\r\n        {documentType === \"prescription\" && (\r\n          <div>\r\n            <h2>Nowa recepta</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Informacje o leku:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Nazwa, ilość, dawkowanie\"\r\n                  name=\"medicine\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Odpłatność: <input type=\"text\" name=\"payment\" required />\r\n              </label>\r\n              <label>\r\n                Data od dnia: <input type=\"date\" name=\"startDate\" />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"sickleave\" && (\r\n          <div>\r\n            <h2>Nowe zwolnienie lekarskie</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Miejsce pracy: <input type=\"text\" name=\"placeOfWork\" required />\r\n              </label>\r\n              <label>\r\n                od:{\" \"}\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"startDate\"\r\n                  min={threeDaysAgo}\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                do: <input type=\"date\" name=\"endDate\" required />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"referral\" && (\r\n          <div>\r\n            <h2>Nowe skierowanie</h2>\r\n            <form className=\"attachment-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <label>\r\n                Skierowanie do:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"place\"\r\n                  placeholder=\"poradni specjalistycznej, pracowni diagnostycznej\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Badanie:{\" \"}\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"examination\"\r\n                  placeholder=\"konsultacja, badanie USG\"\r\n                  required\r\n                />\r\n              </label>\r\n              <label>\r\n                Rozpoznanie: <input type=\"text\" name=\"diagnosis\" required />\r\n              </label>\r\n              <label>\r\n                Cel: <input type=\"text\" name=\"aim\" required />\r\n              </label>\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n\r\n        {documentType === \"lab-order\" && (\r\n          <div>\r\n            <h2>Nowe zlecenie na badanie</h2>\r\n            <form className=\"lab-order-form\" onSubmit={this.submitAttachment}>\r\n              <label>\r\n                Data:\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"date\"\r\n                  min={threeDaysAgo}\r\n                  max={today}\r\n                  defaultValue={today}\r\n                />\r\n              </label>\r\n              <div className=\"tests\">\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"OB\" />\r\n                  OB\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Glukoza\" />\r\n                  Glukoza\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"LDL\" />\r\n                  LDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"HDL\" />\r\n                  HDL\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"TG\" />\r\n                  Trójglicerydy\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Morfologia\" />\r\n                  Morfologia\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Magnez\" />\r\n                  Magnez\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Sód\" />\r\n                  Sód\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Potas\" />\r\n                  Potas\r\n                </label>\r\n                <label>\r\n                  <input type=\"checkbox\" name=\"test\" value=\"Żelazo\" />\r\n                  Żelazo\r\n                </label>\r\n              </div>\r\n\r\n              <input type=\"submit\" value=\"Dodaj\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewAttachment;\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter, Route, NavLink, Switch, Redirect } from \"react-router-dom\";\r\nimport Recommendations from \"../Recommendations\";\r\nimport MedicalProcess from \"../MedicalProcess\";\r\nimport Documentation from \"../Documentation\";\r\nimport NewDocument from \"./NewDocument\";\r\nimport Document from \"../Document\";\r\n\r\nimport SideBar from \"../SideBar\";\r\nimport \"../../css/PatientDoctorPage.css\";\r\nimport NewRecommendation from \"./NewRecommendation\";\r\nimport NewAttachment from \"./NewAttachment\";\r\n\r\nclass DoctorPage extends Component {\r\n  state = {\r\n    patientID: \"\",\r\n    tasks: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:3000/medical-process\")\r\n      .then(result => result.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n  }\r\n  //MEDICAL PROCESS\r\n  addTask = async e => {\r\n    e.preventDefault();\r\n    const completed = e.target.completed.value === \"done\" ? true : false;\r\n\r\n    fetch(\"http://localhost:3000/new-task\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: e.target.title.value,\r\n        date: e.target.date.value.split(\"T\").join(\" \"),\r\n        completed,\r\n        details: e.target.details.value\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n\r\n    e.target.title.value = \"\";\r\n    e.target.details.value = \"\";\r\n    e.target.date.value = \"\";\r\n  };\r\n\r\n  setCompleted = e => {\r\n    console.log(e.target.id);\r\n    const id = e.target.id;\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = true;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n\r\n    fetch(\"http://localhost:3000/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id })\r\n    });\r\n  };\r\n  //SIDE BAR\r\n  addTaskFromSideBar = e => {\r\n    e.preventDefault();\r\n\r\n    fetch(\"http://localhost:3000/new-task\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        title: e.target.title.value,\r\n        date: \"\",\r\n        completed: false,\r\n        details: \"\"\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ tasks: data }));\r\n\r\n    e.target.title.value = \"\";\r\n  };\r\n\r\n  toggleComplete = e => {\r\n    const id = e.target.id;\r\n    let isCompleted = \"\";\r\n    this.setState({\r\n      tasks: this.state.tasks.map((task, i) => {\r\n        if (task._id === id) {\r\n          task.completed = !task.completed;\r\n          isCompleted = task.completed;\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n    //add to db\r\n    fetch(\"https://medical-documentation.herokuapp.com/complete-task\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id: id, completed: isCompleted })\r\n    });\r\n  };\r\n\r\n  searchPatient = async e => {\r\n    e.preventDefault();\r\n    /* e.target.patientID.setCustomValidity(\r\n      \"Wprowadź poprawne 5-cyfrowe ID pacjenta\"\r\n    ); */\r\n    let patientID;\r\n    if (!this.state.patientID) {\r\n      e.preventDefault();\r\n      patientID = e.target.patientID.value;\r\n      await fetch(\"https://medical-documentation.herokuapp.com/get-patient-data\", {\r\n        method: \"put\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ patientID })\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ patientID: data }));\r\n\r\n      await fetch(\"https://medical-documentation.herokuapp.com/medical-process\")\r\n        .then(result => result.json())\r\n        .then(data => {\r\n          console.log(data);\r\n          this.setState({ tasks: data });\r\n        });\r\n    } else {\r\n      this.setState({ patientID: \"\" });\r\n      e.target.patientID.value = \"\";\r\n      fetch(\"https://medical-documentation.herokuapp.com/get-patient-data\", {\r\n        method: \"put\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ patientID: \"\" })\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form className=\"ID-form\" onSubmit={this.searchPatient}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Wpisz ID pacjenta\"\r\n            name=\"patientID\"\r\n            pattern=\"[0-9]{5}\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value={this.state.patientID ? \"Zmień pacienta\" : \"Znajdź pacjenta\"}\r\n          />\r\n        </form>\r\n\r\n        {this.state.patientID && (\r\n          <div>\r\n            <SideBar\r\n              activeAccount=\"doctor\"\r\n              patient={this.state.patientID}\r\n              tasks={this.state.tasks}\r\n              addTask={this.addTaskFromSideBar}\r\n              toggleComplete={this.toggleComplete}\r\n            />\r\n            <HashRouter>\r\n              <nav>\r\n                <NavLink to=\"/documentation\" activeClassName=\"active\">\r\n                  Dokumentacja\r\n                </NavLink>\r\n                <NavLink to=\"/recommendations\" activeClassName=\"active\">\r\n                  Zalecenia lekarskie\r\n                </NavLink>\r\n                <NavLink to=\"/medical-process\" activeClassName=\"active\">\r\n                  Proces medyczny\r\n                </NavLink>\r\n              </nav>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-prescription\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"prescription\" />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-sickleave\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"sickleave\" />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-referral\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"referral\" />\r\n                  )}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new/generate-lab-order\"\r\n                  render={props => (\r\n                    <NewAttachment {...props} documentType=\"lab-order\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/document:documentId\"\r\n                  component={Document}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/recommendations/create-new\"\r\n                  component={NewRecommendation}\r\n                />\r\n\r\n                <Route\r\n                  exact\r\n                  path=\"/documentation/create-new\"\r\n                  component={NewDocument}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/documentation\"\r\n                  render={props => (\r\n                    <Documentation {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/recommendations\"\r\n                  render={props => (\r\n                    <Recommendations {...props} activeAccount=\"doctor\" />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/medical-process\"\r\n                  render={props => (\r\n                    <MedicalProcess\r\n                      {...props}\r\n                      activeAccount=\"doctor\"\r\n                      tasks={this.state.tasks}\r\n                      addTask={this.addTask}\r\n                      setCompleted={this.setCompleted}\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                <Redirect from=\"/\" to=\"/documentation\" />\r\n              </Switch>\r\n            </HashRouter>\r\n            <div />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DoctorPage;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/LabTechnicianPage.css\";\r\nimport { today } from \"../DateParser\";\r\n\r\nclass LabTechnicianPage extends Component {\r\n  state = {\r\n    resultType: \"\",\r\n    results: []\r\n  };\r\n\r\n  chooseResultType = e => {\r\n    console.log(e.target.value);\r\n    this.setState({ resultType: e.target.value });\r\n  };\r\n\r\n  addParameter = e => {\r\n    e.preventDefault();\r\n    let name = document.querySelector(\"#parameter\").value;\r\n    let value = document.querySelector(\"#result\").value;\r\n    //pobrać zakresy i jednostki dla parametru name\r\n    if (value) {\r\n      const newParameter = {\r\n        name,\r\n        value,\r\n        type: this.state.resultType\r\n        //range\r\n        //unit\r\n      };\r\n      this.setState({ results: [...this.state.results, newParameter] });\r\n      document.querySelector(\"#result\").value = \"\";\r\n    }\r\n  };\r\n\r\n  submitResult = e => {\r\n    e.preventDefault();\r\n    const collectionDate = e.target.collectionDate.value.split(\"T\");\r\n    const title = `Badanie krwi ${collectionDate[0]}`;\r\n    const issueDate = today;\r\n\r\n    console.log(title, collectionDate.join(\" \"));\r\n    fetch(\"https://medical-documentation.herokuapp.com/lab-result\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        labPatientID: e.target.patientID.value,\r\n        title,\r\n        collectionDate: collectionDate.join(\" \"),\r\n        issueDate,\r\n\r\n        results: this.state.results\r\n      })\r\n    });\r\n    this.setState({ resultType: \"\", results: [] });\r\n    window.location.reload();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container lab-container\">\r\n        <h2>Dodaj wynik badania krwi</h2>\r\n        <form className=\"form\" onSubmit={this.submitResult}>\r\n          <label htmlFor=\"patientID\">\r\n            ID pacjenta{\" \"}\r\n            <input name=\"patientID\" type=\"text\" required pattern=\"[0-9]{5}\" />\r\n          </label>\r\n          <label htmlFor=\"collectionDate\">\r\n            Data pobrania <input name=\"collectionDate\" type=\"datetime-local\" />\r\n          </label>\r\n\r\n          <label>\r\n            Typ badania\r\n            <select\r\n              name=\"result-type\"\r\n              onChange={this.chooseResultType}\r\n              defaultValue=\"default\"\r\n            >\r\n              <option value=\"default\" disabled={true}>\r\n                Wybierz typ badania\r\n              </option>\r\n              <option value=\"morfologia\">Morfologia krwi</option>\r\n              <option value=\"biochemia\">Biochemia krwi</option>\r\n            </select>\r\n          </label>\r\n\r\n          {this.state.resultType && (\r\n            <div>\r\n              <div className=\"inner-form\">\r\n                <label>\r\n                  Wybierz parametr\r\n                  {this.state.resultType === \"morfologia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      <option value=\"HGB\">HGB</option>\r\n                      <option value=\"WGB\">WGB</option>\r\n                      <option value=\"RGB\">RGB</option>\r\n                    </select>\r\n                  )}\r\n                  {this.state.resultType === \"biochemia\" && (\r\n                    <select name=\"parameter\" id=\"parameter\">\r\n                      <option value=\"LDL\">LDL</option>\r\n                      <option value=\"HDL\">HDL</option>\r\n                      <option value=\"Glukoza\">Glukoza</option>\r\n                      <option value=\"Kwas moczowy\">Kwas moczowy</option>\r\n                      <option value=\"Homocysteina\">Homocysteina</option>\r\n                    </select>\r\n                  )}\r\n                </label>\r\n                <label>\r\n                  Wartość\r\n                  <input type=\"text\" name=\"result\" id=\"result\" />\r\n                </label>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Dodaj parametr\"\r\n                  onClick={this.addParameter}\r\n                />\r\n              </div>\r\n\r\n              {this.state.results.length > 0 && (\r\n                <div className=\"table\">\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Lp</th>\r\n                        <th>Parametr</th>\r\n                        <th>Wartość</th>\r\n                        <th>Zakres</th>\r\n                        <th>Jednostka</th>\r\n                      </tr>\r\n                    </thead>\r\n                    {this.state.results.map((item, i) => {\r\n                      return (\r\n                        <tbody key={i}>\r\n                          <tr>\r\n                            <td>{i + 1}</td>\r\n                            <td>{this.state.results[i].name}</td>\r\n                            <td>{this.state.results[i].value}</td>\r\n                            <td>zakres</td>\r\n                            <td>jednostka</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      );\r\n                    })}\r\n                  </table>\r\n                  <input type=\"submit\" value=\"Zapisz i prześlij\" />\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LabTechnicianPage;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PatientPage from \"./Patient-Doctor/PatientPage\";\r\nimport DoctorPage from \"./Patient-Doctor/Doctor/DoctorPage\";\r\nimport LabTechnicianPage from \"./LabTechnician/LabTechnicianPage\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    activeAccount: localStorage.getItem(\"account\") || \"\",\r\n    isLoggedIn: false\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    //because setState is asynchronous\r\n    localStorage.setItem(\"loggedIn\", this.state.isLoggedIn);\r\n    localStorage.setItem(\"account\", this.state.activeAccount);\r\n  }\r\n\r\n  changeAccount = e => {\r\n    this.setState({ activeAccount: e.target.value });\r\n  };\r\n\r\n  logIn = e => {\r\n    e.preventDefault();\r\n    console.log(e.target.login.value);\r\n    let activeAccount = \"\";\r\n    switch (e.target.login.value[0]) {\r\n      case \"P\":\r\n        activeAccount = \"patient\";\r\n        break;\r\n      case \"D\":\r\n        activeAccount = \"doctor\";\r\n        break;\r\n      case \"L\":\r\n        activeAccount = \"lab\";\r\n        break;\r\n      default:\r\n        activeAccount = \"\";\r\n    }\r\n    this.setState({ activeAccount, isLoggedIn: true });\r\n  };\r\n\r\n  logOut = () => {\r\n    this.setState({ activeAccount: \"\", isLoggedIn: false });\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.isLoggedIn ? (\r\n          <div className=\"container login-container\">\r\n            <h2>Zaloguj się</h2>\r\n            <form onSubmit={this.logIn}>\r\n              <label htmlFor=\"login\">Użytkownik: </label>\r\n              <input type=\"text\" name=\"login\" pattern=\"[PDL]\\d{5}\" required />\r\n              <label htmlFor=\"password\">Hasło: </label>\r\n              <input type=\"password\" name=\"password\" required />\r\n              <input type=\"submit\" value=\"Zaloguj\" />\r\n            </form>\r\n            <p>Nie masz konta?</p>\r\n            <Link to=\"/register\">\r\n              <button>Zarejestruj się</button>\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"header\">\r\n            <div className=\"radio-buttons\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Patient\"\r\n                  value=\"patient\"\r\n                  checked={this.state.activeAccount === \"patient\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Pacjent\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Doctor\"\r\n                  value=\"doctor\"\r\n                  checked={this.state.activeAccount === \"doctor\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Lekarz\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"account\"\r\n                  id=\"Lab\"\r\n                  value=\"lab\"\r\n                  checked={this.state.activeAccount === \"lab\"}\r\n                  onChange={this.changeAccount}\r\n                />{\" \"}\r\n                Laborant\r\n              </label>\r\n            </div>\r\n\r\n            <button className=\"log-out\" onClick={this.logOut}>\r\n              Wyloguj się\r\n            </button>\r\n\r\n            {this.state.activeAccount === \"patient\" ? (\r\n              <PatientPage />\r\n            ) : this.state.activeAccount === \"doctor\" ? (\r\n              <DoctorPage />\r\n            ) : (\r\n              <LabTechnicianPage />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Register from \"./Register\";\r\n\r\nimport Main from \"./Main\";\r\n\r\nimport \"./css/App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/\" component={Main} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n//basename - because of /dokumenty_cyfrowe_w_medycynie in url (gh-pages)\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}> \r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}